<?xml version="1.0"?>
<doc>
    <assembly>
        "VxSdk.NET-Media"
    </assembly>
    <members>
        <member name="P:VxSdkNet.DiscoveryRequest.SearchAt">
            <summary>
Gets or sets the specific devices to discover.
</summary>
            <value>The specific devices to discover.</value>
        </member>
        <member name="P:VxSdkNet.DiscoveryRequest.Protocols">
            <summary>
Gets or sets the list of protocols to use for the discovery; if omitted, all available protocols are used.
</summary>
            <value>The list of protocols.</value>
        </member>
        <member name="P:VxSdkNet.DiscoveryRequest.ShouldExtend">
            <summary>
Gets or sets whether this request should extend the previous discovery (this will maintain the existing
initiated and number counters) or begin a new discovery (new initiated and reset number counters). Ignored
if discovery is currently in progress (discovery is always extended in this case).  Defaults to <c>true</c>
if discovery was initiated is within the past 12 hours.
</summary>
            <value>
                <c>true</c> to extend the previous discovery; <c>false</c> to begin a new discovery.</value>
        </member>
        <member name="M:VxSdkNet.DiscoveryRequest.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.DiscoveryRequest.DiscoveryProtocol.kWsDiscovery">
            <summary>WS-Discovery.</summary>
        </member>
        <member name="F:VxSdkNet.DiscoveryRequest.DiscoveryProtocol.Ssdp">
            <summary>SSDP discovery.</summary>
        </member>
        <member name="F:VxSdkNet.DiscoveryRequest.DiscoveryProtocol.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DiscoveryRequest.DiscoveryProtocol">
            <summary>
Values that represent protocols to use for discovery.
</summary>
        </member>
        <member name="T:VxSdkNet.DiscoveryRequest">
            <summary>
The DiscoveryRequest class represents a request to discover new devices.
</summary>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.Username">
            <summary>
Gets or sets the account username to communicate with the device(s), if any.
</summary>
            <value>The account username.</value>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.Port">
            <summary>
Gets or sets the device(s) port.
</summary>
            <value>The device(s) port.</value>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.Password">
            <summary>
Gets or sets the account password to communicate with the device(s), if any.
</summary>
            <value>The account password.</value>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.IpStartAddress">
            <summary>
Gets or sets the IP starting address (inclusive). If present, this must be the same format as <c>IpEndAddress</c>
and must be present if <c>IpEndAddress</c> is present.
</summary>
            <value>The IP starting address (inclusive).</value>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.IpEndAddress">
            <summary>
Gets or sets the IP ending address (inclusive). If present, this must be the same format as <c>IpStartAddress</c>
and must be present if <c>IpStartAddress</c> is present. Address range from <c>IpStartAddress</c> must not
exceed 1024 addresses.
</summary>
            <value>The IP ending address (inclusive).</value>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.Host">
            <summary>
Gets or sets the host address of the device. Ignored if <c>IpStartAddress</c> and <c>IpEndAddress</c> are present.
</summary>
            <value>The host address of the device.</value>
        </member>
        <member name="P:VxSdkNet.DeviceSearch.DriverType">
            <summary>
Gets or sets the type identifier of the driver to use for device communication.
</summary>
            <value>The driver type identifier.</value>
        </member>
        <member name="T:VxSdkNet.DeviceSearch">
            <summary>
The DeviceSearch class represents device search helpers used for discovery.
</summary>
        </member>
        <member name="E:VxSdkNet.MediaControl.PelcoDataEvent">
            <summary>
PelcoDataEvent is raised whenever a new event is received from the stream.
</summary>
        </member>
        <member name="E:VxSdkNet.MediaControl.StreamEvent">
            <summary>
StreamEvent is raised whenever a new event is received from the stream.
</summary>
        </member>
        <member name="E:VxSdkNet.MediaControl.TimestampEvent">
            <summary>
TimestampEvent is raised whenever a new timestamp is received from the stream.
</summary>
        </member>
        <member name="P:VxSdkNet.MediaControl.StretchToFit">
            <summary>
Gets or sets whether the rendered video should stretch to fit its display window.
</summary>
            <value>True if the rendered video should stretch to fit its display window, otherwise false.</value>
        </member>
        <member name="P:VxSdkNet.MediaControl.AspectRatio">
            <summary>
Gets or sets the current aspect ratio.
</summary>
            <value>The aspect ratio.</value>
        </member>
        <member name="P:VxSdkNet.MediaControl.Mode">
            <summary>
Gets the current playback mode.
</summary>
            <value>The current stream mode.</value>
        </member>
        <member name="P:VxSdkNet.MediaControl.IsPipelineActive">
            <summary>
Get the status of the pipeline.
</summary>
            <returns>True if pipeline is active, otherwise false.</returns>
        </member>
        <member name="M:VxSdkNet.MediaControl.Stop">
            <summary>
Call TearDown on the stream.
</summary>
        </member>
        <member name="M:VxSdkNet.MediaControl.SetVideoWindow(System.IntPtr)">
            <summary>
Set the display window using the given window handle.
</summary>
            <param name="windowHandle">An <c>IntPtr</c> to the window handle.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.SetDataSource(System.String,System.String)">
            <summary>
Set the stream to a new data source.
</summary>
            <param name="rtspVideoEndpoint">The RTSP endpoint of the video stream.</param>
            <param name="rtspAudioEndpoint">The RTSP endpoint of the audio stream.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.SetDataSource(VxSdkNet.DataSource,VxSdkNet.DataInterface,VxSdkNet.DataSource,VxSdkNet.DataInterface)">
            <summary>
Set the stream to a new data source.
</summary>
            <param name="videoDataSource">The data source to use to create the video stream.</param>
            <param name="videoDataInterface">The data interface to use to create the video stream.</param>
            <param name="audioDataSource">The data source to use to create the audio stream.</param>
            <param name="audioDataInterface">The data interface to use to create the audio stream.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.Seek(System.DateTime,System.Single,VxSdkNet.MediaControl.RTSPNetworkTransports)">
            <summary>
Call Play on the stream with the supplied start time, resulting in a playback stream.
</summary>
            <param name="time">The start time for playback.</param>
            <param name="speed">The playback speed.  Negative values can be used for reverse playback.</param>
            <param name="networkTransport">Network transport to use for video stream. </param>
        </member>
        <member name="M:VxSdkNet.MediaControl.Seek(System.DateTime,System.Single)">
            <summary>
Call Play on the stream with the supplied start time, resulting in a playback stream.
</summary>
            <param name="time">The start time for playback.</param>
            <param name="speed">The playback speed.  Negative values can be used for reverse playback.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.SnapShot(System.String,System.String)">
            <summary>
Takes a snapshot from the current video stream and stores it to the filename
   provided
</summary>
            <param name="filePath">The full path to save the snapshot to.</param>
            <param name="fileName">The file name to use for the snapshot file.</param>
            <returns>
                <c>true</c> if the file stored correctly, else <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.MediaControl.StopLocalRecording">
            <summary>
Stops the current local recording in progress, if any.
</summary>
        </member>
        <member name="M:VxSdkNet.MediaControl.StartLocalRecording(System.String,System.String,System.Boolean)">
            <summary>
Starts recording the current video stream to a local file.
</summary>
            <param name="filePath">The full path to save the recorded video to.</param>
            <param name="fileName">The file name to use for the recorded video file.</param>
            <param name="includeOverlays">
                <c>true</c> to include the overlays currently displayed on the stream
in the recorded file, otherwise <c>false</c>.</param>
            <returns>
                <c>true</c> if the recording was started successfully, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.MediaControl.StartLocalRecording(System.String,System.String)">
            <summary>
Starts recording the current video stream to a local file.
</summary>
            <param name="filePath">The full path to save the recorded video to.</param>
            <param name="fileName">The file name to use for the recorded video file.</param>
            <returns>
                <c>true</c> if the recording was started successfully, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.MediaControl.Play(System.Single,VxSdkNet.MediaControl.RTSPNetworkTransports)">
            <summary>
Call Play on the stream.
</summary>
            <param name="speed">The playback speed.  Negative values can be used for reverse playback.</param>
            <param name="networkTransport">Network transport to use for video stream. </param>
        </member>
        <member name="M:VxSdkNet.MediaControl.Play(System.Single)">
            <summary>
Call Play on the stream.
</summary>
            <param name="speed">The playback speed.  Negative values can be used for reverse playback.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.Pause">
            <summary>
Call Pause on the stream.
</summary>
        </member>
        <member name="M:VxSdkNet.MediaControl.GoToLive">
            <summary>
Call GoToLive on the stream.
</summary>
        </member>
        <member name="M:VxSdkNet.MediaControl.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.MediaControl.Dispose">
            <summary>
Virtual destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.MediaControl.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
Constructor.
</summary>
            <param name="rtspVideoEndpoint">The RTSP endpoint of the video stream.</param>
            <param name="rtspAudioEndpoint">The RTSP endpoint of the audio stream.</param>
            <param name="username">The username for RTSP authentication.</param>
            <param name="password">The password for RTSP authentication.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.#ctor(System.String,System.String)">
            <summary>
Constructor.
</summary>
            <param name="rtspVideoEndpoint">The RTSP endpoint of the video stream.</param>
            <param name="rtspAudioEndpoint">The RTSP endpoint of the audio stream.</param>
        </member>
        <member name="M:VxSdkNet.MediaControl.#ctor(VxSdkNet.DataSource,VxSdkNet.DataInterface,VxSdkNet.DataSource,VxSdkNet.DataInterface)">
            <summary>
Constructor.
</summary>
            <param name="videoSource">The data source to use to create the video stream.</param>
            <param name="videoInterface">The data interface to use to create the video stream.</param>
            <param name="audioSource">The data source to use to create the audio stream.</param>
            <param name="audioInterface">The data interface to use to create the audio stream.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.PelcoDataEventDelegate">
            <summary>
The managed event delegate.
</summary>
            <param name="pelcoDataManagedEvent">The Pelco data event sent from the stream as a managed type.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.PelcoDataCallbackDelegate">
            <summary>
The native event callback delegate.
</summary>
            <param name="pelcoDataEvent">The Pelco data event sent from the stream.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.StreamEventDelegate">
            <summary>
The managed event delegate.
</summary>
            <param name="streamEvent">The stream event sent from the stream as a managed type.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.StreamCallbackDelegate">
            <summary>
The native event callback delegate.
</summary>
            <param name="streamEvent">The stream event sent from the stream.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.TimestampEventDelegate">
            <summary>
The managed event delegate.
</summary>
            <param name="mediaEvent">The media event sent from the stream as a managed type.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.TimestampCallbackDelegate">
            <summary>
The native event callback delegate.
</summary>
            <param name="timeEvent">The time event sent from the stream.</param>
        </member>
        <member name="T:VxSdkNet.MediaControl.VideoOverlayDataPositions">
            <summary>
Options for data on the video being played
</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.RTSPNetworkTransports.RTPOverRTSP">
            <summary>Stream will be sent with TCP network protocol if possible.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.RTSPNetworkTransports.UDP">
            <summary>Stream will be sent with UDP (default). Will be used with multicast transmissions.</summary>
        </member>
        <member name="T:VxSdkNet.MediaControl.RTSPNetworkTransports">
            <summary>
Values that represent the different transport modes for an RTSP stream (ignored for MJPEG Pull).
</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.AspectRatios.k5x4">
            <summary>5:49 aspect ratio.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.AspectRatios.k3x2">
            <summary>3:2 aspect ratio.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.AspectRatios.k1x1">
            <summary>1:1 aspect ratio.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.AspectRatios.k4x3">
            <summary>4:3 aspect ratio.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.AspectRatios.k16x9">
            <summary>16:9 aspect ratio (Default).</summary>
        </member>
        <member name="T:VxSdkNet.MediaControl.AspectRatios">
            <summary>
Values that represent the aspect ratio of the video stream.
</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.Modes.Playback">
            <summary>The stream is playing recorded video.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.Modes.Live">
            <summary>The stream is playing live video.</summary>
        </member>
        <member name="F:VxSdkNet.MediaControl.Modes.Stopped">
            <summary>The stream is stopped.</summary>
        </member>
        <member name="T:VxSdkNet.MediaControl.Modes">
            <summary>
Values that represent the different playback modes.
</summary>
        </member>
        <member name="T:VxSdkNet.MediaControl">
            <summary>
The MediaControl class creates a controller object that provides the ability to
create and control video streams.
</summary>
        </member>
        <member name="P:VxSdkNet.PelcoDataManagedEvent.PelcoBytes">
            <summary>
Gets the Pelco data string.
</summary>
            <value>The Pelco data string.</value>
        </member>
        <member name="P:VxSdkNet.PelcoDataManagedEvent.EventType">
            <summary>
Gets the event type.
</summary>
            <value>The event type.</value>
        </member>
        <member name="M:VxSdkNet.PelcoDataManagedEvent.#ctor(MediaController.PelcoDataEvent*)">
            <summary>
Constructor.
</summary>
            <param name="pelcoDataEvent">The Pelco data event.</param>
        </member>
        <member name="F:VxSdkNet.PelcoDataManagedEvent.EventTypes.ConnectionLost">
            <summary>The connection to the stream was lost.</summary>
        </member>
        <member name="F:VxSdkNet.PelcoDataManagedEvent.EventTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.PelcoDataManagedEvent.EventTypes">
            <summary>
Values that represent the streaming events.
</summary>
        </member>
        <member name="T:VxSdkNet.PelcoDataManagedEvent">
            <summary>
The PelcoDataManagedEvent class represents an Pelco data event that has been sent from a stream.
</summary>
        </member>
        <member name="P:VxSdkNet.StreamingEvent.EventType">
            <summary>
Gets the event type.
</summary>
            <value>The event type.</value>
        </member>
        <member name="M:VxSdkNet.StreamingEvent.#ctor(MediaController.StreamEvent*)">
            <summary>
Constructor.
</summary>
            <param name="streamEvent">The streaming event.</param>
        </member>
        <member name="F:VxSdkNet.StreamingEvent.EventTypes.ConnectionRestored">
            <summary>The connection to the stream was restored.</summary>
        </member>
        <member name="F:VxSdkNet.StreamingEvent.EventTypes.FileStoredComplete">
            <summary>Stored a file</summary>
        </member>
        <member name="F:VxSdkNet.StreamingEvent.EventTypes.ConnectionLost">
            <summary>The connection to the stream was lost.</summary>
        </member>
        <member name="F:VxSdkNet.StreamingEvent.EventTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.StreamingEvent.EventTypes">
            <summary>
Values that represent the streaming events.
</summary>
        </member>
        <member name="T:VxSdkNet.StreamingEvent">
            <summary>
The MediaEvent class represents an event that has been sent from a stream.
</summary>
        </member>
        <member name="P:VxSdkNet.MediaEvent.Timestamp">
            <summary>
Gets the timestamp.
</summary>
            <value>The current timestamp.</value>
        </member>
        <member name="M:VxSdkNet.MediaEvent.#ctor(MediaController.TimestampEvent*)">
            <summary>
Constructor.
</summary>
            <param name="timeEvent">The timestamp event.</param>
        </member>
        <member name="T:VxSdkNet.MediaEvent">
            <summary>
The MediaEvent class represents an event that has been sent from a stream.
</summary>
        </member>
        <member name="M:MediaController.GetController(MediaController.MediaRequest*,MediaController.IController**)">
            <summary>
Create a new media controller object.
</summary>
            <param name="request">The requested media to initialize.</param>
            <param name="control">The new media controller object.</param>
        </member>
        <member name="M:MediaController.IController.SetStretchToFit(System.Boolean)">
            <summary>
Sets whether or not the rendered video should stretch to fit its display window.
</summary>
            <param name="stretchToFit">True to stretch the rendered video to fit its display window, otherwise false.</param>
        </member>
        <member name="M:MediaController.IController.GetStretchToFit">
            <summary>
Gets whether or not the rendered video should stretch to fit its display window.
</summary>
            <returns>True if the rendered video should stretch to fit its display window, otherwise false.</returns>
        </member>
        <member name="M:MediaController.IController.SetAspectRatio(MediaController.IStream.AspectRatios)">
            <summary>
Set the current aspect ratio.
</summary>
            <param name="aspectRatio">The aspect ratio.</param>
        </member>
        <member name="M:MediaController.IController.GetAspectRatio">
            <summary>
Get the current aspect ratio.
</summary>
            <returns>The current aspect ratio.</returns>
        </member>
        <member name="T:MediaController.IController.VideoOverlayDataPosition">
            <summary>
Allows you to place data on the video being played
 If 'includeDateTime' is true, then you can use a format string as in
 the "put_time" funciton in the c++ standard library.  
   e.g.  %Y-%m-%dT%H:%M:%S in a string will print
   2011-07-11T12:15:33
</summary>
            <returns>True if data can be displayed (there is a limit to string size)</returns>
        </member>
        <member name="M:MediaController.IController.IsPipelineActive">
            <summary>
Get the status of the pipeline.
</summary>
            <returns>True if pipeline is active, otherwise false.</returns>
        </member>
        <member name="M:MediaController.IController.ClearStreamObservers">
            <summary>
Remove all existing stream event subscribers.
</summary>
        </member>
        <member name="M:MediaController.IController.ClearObservers">
            <summary>
Remove all existing timestamp event subscribers.
</summary>
        </member>
        <member name="M:MediaController.IController.RemovePelcoDataObserver(=FUNC:System.Void(MediaController.PelcoDataEvent*))">
            <summary>
Remove an existing stream event subscriber.
</summary>
            <param name="observer">The <see cref="D:MediaController.StreamEventCallback" /> event handler.</param>
        </member>
        <member name="M:MediaController.IController.RemoveStreamObserver(=FUNC:System.Void(MediaController.StreamEvent*))">
            <summary>
Remove an existing stream event subscriber.
</summary>
            <param name="observer">The <see cref="D:MediaController.StreamEventCallback" /> event handler.</param>
        </member>
        <member name="M:MediaController.IController.RemoveObserver(=FUNC:System.Void(MediaController.TimestampEvent*))">
            <summary>
Remove an existing timestamp event subscriber.
</summary>
            <param name="observer">The <see cref="D:MediaController.TimestampEventCallback" /> event handler.</param>
        </member>
        <member name="M:MediaController.IController.AddEventData(System.Void*)">
            <summary>
Add event data to be send back during timestamp events.
</summary>
            <param name="customData">Custom data pointer.</param>
        </member>
        <member name="M:MediaController.IController.AddPelcoDataObserver(=FUNC:System.Void(MediaController.PelcoDataEvent*))">
            <summary>
Add a new subscriber to Pelco Data events.
</summary>
            <param name="observer">The <see cref="D:MediaController.StreamEventCallback" /> event handler.</param>
        </member>
        <member name="M:MediaController.IController.AddStreamObserver(=FUNC:System.Void(MediaController.StreamEvent*))">
            <summary>
Add a new subscriber to stream events.
</summary>
            <param name="observer">The <see cref="D:MediaController.StreamEventCallback" /> event handler.</param>
        </member>
        <member name="M:MediaController.IController.AddObserver(=FUNC:System.Void(MediaController.TimestampEvent*))">
            <summary>
Add a new subscriber to timestamp events.
</summary>
            <param name="observer">The <see cref="D:MediaController.TimestampEventCallback" /> event handler.</param>
        </member>
        <member name="M:MediaController.IController.SetWindow(System.Void*)">
            <summary>
Set the display window using the given window handle.
</summary>
            <param name="handle">The window handle of the display.</param>
        </member>
        <member name="M:MediaController.IController.Dispose">
            <summary>
Virtual destructor.
</summary>
        </member>
        <member name="T:MediaController.IController">
            <summary>
Defines the controller interface.
</summary>
        </member>
        <member name="D:MediaController.PelcoDataEventCallback">
            <summary>
The Pelco Data event callback function pointer.
</summary>
            <param>A <see cref="T:MediaController.PelcoDataEvent" />.</param>
        </member>
        <member name="D:MediaController.StreamEventCallback">
            <summary>
The stream event callback function pointer.
</summary>
            <param>A <see cref="T:MediaController.StreamEvent" />.</param>
        </member>
        <member name="D:MediaController.TimestampEventCallback">
            <summary>
The timestamp event callback function pointer.
</summary>
            <param>A <see cref="T:MediaController.TimestampEvent" />.</param>
        </member>
        <member name="F:MediaController.PelcoDataEvent.eventData">
            <summary>
The event data assigned by caller during event subscription.
</summary>
        </member>
        <member name="F:MediaController.PelcoDataEvent.pelcoData">
            <summary>
Special opaque metadata for future use
</summary>
        </member>
        <member name="F:MediaController.PelcoDataEvent.eventType">
            <summary>
The event type.
</summary>
        </member>
        <member name="T:MediaController.PelcoDataEvent.Type">
            <summary>
Values that represent event types sent from a stream.
</summary>
        </member>
        <member name="T:MediaController.PelcoDataEvent">
            <summary>
Represents an event that has been sent from a stream.
</summary>
        </member>
        <member name="F:MediaController.StreamEvent.eventType">
            <summary>
The event type.
</summary>
        </member>
        <member name="F:kConnectionRestored">
            <summary>The connection to the stream was restored.</summary>
        </member>
        <member name="F:kFileStoredComplete">
            <summary>Stored a file</summary>
        </member>
        <member name="F:kConnectionLost">
            <summary>The connection to the stream was lost.</summary>
            <summary>The connection to the stream was lost.</summary>
        </member>
        <member name="T:MediaController.StreamEvent.Type">
            <summary>
Values that represent event types sent from a stream.
</summary>
        </member>
        <member name="T:MediaController.StreamEvent">
            <summary>
Represents an event that has been sent from a stream.
</summary>
        </member>
        <member name="F:MediaController.TimestampEvent.eventData">
            <summary>
The event data assigned by caller during event subscription.
</summary>
        </member>
        <member name="F:MediaController.TimestampEvent.unixTimeMicroSeconds">
            <summary>
The microsecond value of the current unix timestamp. May be combined with <c>unixTime</c> to increase
the precision of the timestamp.
</summary>
        </member>
        <member name="F:MediaController.TimestampEvent.unixTime">
            <summary>
The absolute time, in seconds, of the current stream in unix timestamp format.
</summary>
        </member>
        <member name="T:MediaController.TimestampEvent">
            <summary>
Represents an event that has been sent from a stream.
</summary>
        </member>
        <member name="M:MediaController.IStream.GetMode">
            <summary>
Get the current playback mode.
</summary>
            <returns>The current stream <see cref="T:MediaController.IStream.Mode" />.</returns>
        </member>
        <member name="M:MediaController.IStream.NewRequest(MediaController.MediaRequest*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Set the stream to a new source.
</summary>
            <param name="request">The new <see cref="T:MediaController.MediaRequest" /> to reset the stream to.</param>
        </member>
        <member name="M:MediaController.IStream.GoToLive">
            <summary>
Set the stream to Live and call Play.
</summary>
        </member>
        <member name="M:MediaController.IStream.Stop">
            <summary>
Call TearDown on the stream.
</summary>
        </member>
        <member name="M:MediaController.IStream.Pause">
            <summary>
Call Pause on the stream.
</summary>
        </member>
        <member name="M:MediaController.IStream.SnapShot(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Starts recording the current video stream to a local file.
</summary>
            <param name="filePath">The directory to store the generated video file.</param>
            <param name="fileName">The name to use for the generated video file.</param>
        </member>
        <member name="M:MediaController.IStream.StopLocalRecording">
            <summary>
Stops the current local recording in progress, if any.
</summary>
        </member>
        <member name="M:MediaController.IStream.StartLocalRecording(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Boolean)">
            <summary>
Starts recording the current video stream to a local file.
</summary>
            <param name="filePath">The directory to store the generated video file.</param>
            <param name="fileName">The name to use for the generated video file.</param>
            <param name="includeOverlays">True to include the overlays currently displayed on the stream
in the recorded file, otherwise false.</param>
            <returns>True if the recording started successfully, otherwise false.</returns>
        </member>
        <member name="M:MediaController.IStream.StoreStream(System.UInt32,System.UInt32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Records a stream directly to a local file.
</summary>
            <param name="startTime">The start time of the stream to record.</param>
            <param name="stopTime">The end time of the stream to record.</param>
            <param name="filePath">The directory to store the generated video file.</param>
            <param name="fileName">The name to use for the generated video file.</param>
            <returns>True if the recording started successfully, otherwise false.</returns>
        </member>
        <member name="M:MediaController.IStream.Play(System.Single,System.UInt32,MediaController.IStream.RTSPNetworkTransport)">
            <summary>
Call Play on the stream.
</summary>
            <param name="speed">The playback speed.  Negative values can be used for reverse
playback. A value of 0 will resume a paused stream.</param>
            <param name="unixTime">The start time for playback. A value of 0 will start a live stream.</param>
        </member>
        <member name="M:MediaController.IStream.Dispose">
            <summary>
Virtual destructor.
</summary>
        </member>
        <member name="F:kRTPOverRTSP">
            <summary> try to use TCP </summary>
        </member>
        <member name="F:kUDP">
            <summary> use UDP </summary>
        </member>
        <member name="T:MediaController.IStream.RTSPNetworkTransport">
            <summary>
 This value is used to choose the transport protocol for RTSP streams
    It is ignored for JPEG pull or other protocols.
</summary>
        </member>
        <member name="F:kLive">
            <summary>The stream is playing live video.</summary>
        </member>
        <member name="F:kStopped">
            <summary>The stream is stopped.</summary>
        </member>
        <member name="T:MediaController.IStream.Mode">
            <summary>
Values that represent the different playback modes.
</summary>
        </member>
        <member name="F:k5x4">
            <summary>5:49 aspect ratio.</summary>
        </member>
        <member name="F:k16x9">
            <summary>16:9 aspect ratio (Default).</summary>
        </member>
        <member name="T:MediaController.IStream.AspectRatios">
            <summary>
Values that represent the aspect ratio of the video stream.
</summary>
        </member>
        <member name="T:MediaController.IStream">
            <summary>
Defines the stream interface.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.password">
            <summary>
The password for RTSP authentication.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.username">
            <summary>
The username for RTSP authentication.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.rtspAudioEndpoint">
            <summary>
The RTSP audio endpoint URI. If set, this will be used instead of the audioDataSource/audioDataInterface.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.rtspVideoEndpoint">
            <summary>
The RTSP video endpoint URI.  If set, this will be used instead of the dataSource/dataInterface.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.audioDataInterface">
            <summary>
The protocol to use for the new audio stream.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.audioDataSource">
            <summary>
The data source to use to create the new audio stream.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.dataInterface">
            <summary>
The protocol to use for the new video stream.
</summary>
        </member>
        <member name="F:MediaController.MediaRequest.dataSource">
            <summary>
The data source to use to create the new video stream.
</summary>
        </member>
        <member name="T:MediaController.MediaRequest">
            <summary>
Contains the information needed to start a new media stream.
</summary>
        </member>
        <member name="E:VxSdkNet.VXSystem.InternalEvent">
            <summary>
InternalEvent is raised whenever a new internal event is sent from the VxSDK.
</summary>
        </member>
        <member name="E:VxSdkNet.VXSystem.SystemEvent">
            <summary>
SystemEvent is raised whenever a new event is created on the system.
</summary>
        </member>
        <member name="P:VxSdkNet.VXSystem.Users">
            <summary>
Gets the users from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the users on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.TwilioConfig">
            <summary>
Gets the Twilio SMS account configuration.
</summary>
            <value>The Twilio SMS account configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.TimeTables">
            <summary>
Gets the time tables from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the time tables on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.TimeConfig">
            <summary>
Gets the time configuration.
</summary>
            <value>The time configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Tags">
            <summary>
Gets the tags from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the tags on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.SystemTime">
            <summary>
Gets the current system time (UTC).
</summary>
            <value>The current system time (UTC).</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.SnmpConfig">
            <summary>
Gets the SNMP agent configuration.
</summary>
            <value>The SNMP agent configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.SmtpConfig">
            <summary>
Gets the SMTP configuration.
</summary>
            <value>The SMTP configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Situations">
            <summary>
Gets the situations from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the situations on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.ServerConfig">
            <summary>
Gets the server configuration.
</summary>
            <value>The server configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Schedules">
            <summary>
Gets the schedules from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the schedules on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Rules">
            <summary>
Gets the rules from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the rules on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.RolePermissionSchema">
            <summary>
Gets the ordered permission schema information for roles.
</summary>
            <value>The permission schema.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Roles">
            <summary>
Gets the roles from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the roles on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.ReportTemplates">
            <summary>
Gets the report templates from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the report templates on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Reports">
            <summary>
Gets the reports from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the reports on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.ReportConfig">
            <summary>
Gets the report configuration.
</summary>
            <value>The report configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.RelayOutputs">
            <summary>
Gets the relay outputs from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the relay outputs on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Recordings">
            <summary>
Gets the recordings from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the recordings on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Name">
            <summary>
Gets the friendly name of the VideoXpert system.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.MonitorWalls">
            <summary>
Gets the monitor walls from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the monitor walls on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Monitors">
            <summary>
Gets the monitors from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the monitors on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Members">
            <summary>
Gets the member systems that this system is aggregating.
</summary>
            <value>A <c>List</c> containing the member systems.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.ManualRecordings">
            <summary>
Gets the manual recordings from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the manual recordings on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.LdapConfig">
            <summary>
Gets the LDAP configuration.
</summary>
            <value>The LDAP configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Id">
            <summary>
Gets the unique identifier of the VideoXpert system.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.HostDevice">
            <summary>
Gets the device that hosts this system.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.GraceLicenseExpirationTime">
            <summary>
Gets the grace license expiration date time (if applicable).
</summary>
            <value>The grace license expiration time.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Files">
            <summary>
Gets the files from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the files on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Exports">
            <summary>
Gets the exports from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the exports on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.ExportConfig">
            <summary>
Gets the export configuration.
</summary>
            <value>The export configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Events">
            <summary>
Gets the events from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the events on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.EventConfig">
            <summary>
Gets the event configuration.
</summary>
            <value>The event configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Drivers">
            <summary>
Gets the drivers from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the drivers on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Drawings">
            <summary>
Gets the drawings from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the drawings on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.DiscoveryStatus">
            <summary>
Gets the current discovery status.
</summary>
            <value>The current discovery status.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Devices">
            <summary>
Gets the devices from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the devices on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.DeviceAssignments">
            <summary>
Gets the device assignments from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the device assignments on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.DataStorages">
            <summary>
Gets the data storages from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the data storages on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.DataSources">
            <summary>
Gets the data sources from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the data sources on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.DataObjects">
            <summary>
Gets the data objects from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the data objects on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Currentuser">
            <summary>
Gets the user currently accessing the VideoXpert system.
</summary>
            <value>The current user.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.ClusterConfig">
            <summary>
Gets the cluster configuration from the VideoXpert system.
</summary>
            <value>The cluster configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.Bookmarks">
            <summary>
Gets the bookmarks from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the bookmarks on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.BookmarkConfig">
            <summary>
Gets the bookmark configuration.
</summary>
            <value>The bookmark configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.BookmarkAutoUnlockTime">
            <summary>
Gets or sets the current bookmark automatic unlock time value.
</summary>
            <value>The bookmark auto-unlock time (in days).</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.AvailableScheduleTriggerEvents">
            <summary>
Gets the list of available event types that may be used within a schedule trigger.
</summary>
            <value>A <c>List</c> of the available situation types.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.AvailableReportTemplates">
            <summary>
Gets the available report templates representing the default template for each report type. These defaults
act as a schema for each report type, providing all available fields and filters that may be used in the
report template for that report type.
</summary>
            <value>A <c>List</c> of the available default report templates.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.AuthConfig">
            <summary>
Gets the authorization configuration.
</summary>
            <value>The authorization configuration.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.AnalyticSessions">
            <summary>
Gets all of the analytic sessions from the VideoXpert system.
</summary>
            <value>A <c>List</c> of analytic sessions.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.AlarmInputs">
            <summary>
Gets the alarm inputs from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the alarm inputs on the system.</value>
        </member>
        <member name="P:VxSdkNet.VXSystem.AccessPoints">
            <summary>
Gets the access points from the VideoXpert system.
</summary>
            <value>A <c>List</c> containing the access points on the system.</value>
        </member>
        <member name="M:VxSdkNet.VXSystem.ValidateMember(System.String,System.Int32,System.String,System.String)">
            <summary>
Gets a value indicating whether or not the member administrator credentials provided are valid.
</summary>
            <param name="host">The host address.</param>
            <param name="port">The host port.</param>
            <param name="username">The username for access to the member.</param>
            <param name="password">The password for access to the member.</param>
            <returns>
                <c>true</c> if the administrator credentials are determined to be valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.UnsubscribeToEvents">
            <summary>
Unsubscribes to system events that were subscribed to by type.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of unsubscribing.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.SubscribeToEventsByType(VxSdkNet.VXSystem.EventDelegate,System.Collections.Generic.List`1{VxSdkNet.Situation},System.Boolean)">
            <summary>
Subscribe to system events by situation type, regardless of its notification setting.
</summary>
            <param name="eventDelegate">The event delegate to be used when an event is received.</param>
            <param name="situations">A <c>List</c> of situations to subscribe to.</param>
            <param name="userNotification">
                <c>true</c> to receive user role notifications, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of subscribing.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.SubscribeToEventsByType(VxSdkNet.VXSystem.EventDelegate,System.Collections.Generic.List`1{VxSdkNet.Situation})">
            <summary>
Subscribe to system events by situation type, regardless of its notification setting.
</summary>
            <param name="eventDelegate">The event delegate to be used when an event is received.</param>
            <param name="situations">A <c>List</c> of situations to subscribe to.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of subscribing.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.RemoveMember(VxSdkNet.Member)">
            <summary>
Remove the member system; it will no longer be aggregated.
</summary>
            <param name="memberItem">The member system to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the member system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.Login(System.String)">
            <summary>
Log in to the VideoXpert system.
</summary>
            <param name="authToken">The auth token</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the log in process.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.Login(System.String,System.String)">
            <summary>
Log in to the VideoXpert system.
</summary>
            <param name="username">The user name to log in with.</param>
            <param name="password">The password to log in with.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the log in process.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.InjectEvent(VxSdkNet.NewEvent)">
            <summary>
Insert a new event into the system.
</summary>
            <param name="newEvent">The new event to be injected into the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of injecting the event.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetUsers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the users from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, FirstName, LastName, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the users on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetTimeTables(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the time tables from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the time tables on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetTags(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the tags from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Folder, Id, ModifiedSince, Name, Owned, Owner, ParentId, ResourceId, ResourceType.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the tags on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetSituations(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the situations residing on the system using an optional collection filter.
<para>Available filters: AdvancedQuery, AudibleNotify, HasProperty, Log, ModifiedSince, Name, Notify, ServicePropertyId, Severity, SourceDeviceId, Type.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the situations on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetSchedules(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the schedules from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, DataSourceId, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the schedules on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetRules(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the rules from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, Number.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the rules on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetRoles(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the roles from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, Internal, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the roles on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetReportTemplates(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the report templates from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, Owner.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the report templates on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetReports(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the reports from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, Owner.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the reports on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetRelayOutputs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the relay outputs from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Enabled, Id, ModifiedSince, Name, State.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the relay outputs on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetRecordings(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the recordings residing on the system using an optional collection filter.
<para>Available filters: AdvancedQuery, DataSourceId, Id, ModifiedSince, Name, Owner, RecordType.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the recordings on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetMonitorWalls(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the monitor walls residing on the system using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the monitor walls on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetMonitors(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the monitors residing on the system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, Number.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the monitors on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetMembers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the member systems that this system is aggregating using an optional collection filter.
<para>Available filters: AdvancedQuery, Host, Id, ModifiedSince, Name, State.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the member systems.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetManualRecordings(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the manual recordings residing on the system using an optional collection filter.
<para>Available filters: AdvancedQuery, DataSourceId, Id, ModifiedSince, Owner.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the manual recordings on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetLicense">
            <summary>
Get the license from the system.
</summary>
            <returns>The system license.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetFiles(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the files residing on the system using an optional collection filter.
<para>Available filters: Id, FileName.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the files on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetExports(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the exports residing on the system using an optional collection filter.
<para>Available filters: DataSourceAllTags, DataSourceAllPrivateTags, DataSourceName, DataSourceNumber, ModifiedSince, Name, Owner, PercentComplete, Size, Status, Trashed.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the exports on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetExportEstimate(VxSdkNet.NewExport)">
            <summary>
Gets the estimate information for a given set of export criteria. This does not perform an actual export operation.
</summary>
            <param name="newExport">The new export to request an estimate for.</param>
            <returns>
                <c>nullptr</c> if it fails, else the export estimate.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetEvents(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get events from the system using an optional collection filter.
<para>Available filters: AdvancedQuery, AckState, AckUser, GeneratorDeviceId, Id, ModifiedSince, Notifies, SearchEndTime, SearchStartTime, Severity, SituationType, SourceDeviceId, SourceUserName, Time.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing matching events on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDrivers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the drivers provided by this system using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince, Name, Vendor, Version.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the drivers on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDrawings(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the drawings from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, ImageType, ModifiedSince, Name, Provider.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the drawings on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDevices(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the devices from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Commissioned, Discovered, DriverType, HasStatus, Id, Ip, Model, ModifiedSince, Name, Serial, State, Type, Vendor, Version.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the devices on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDeviceAssignments(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the device assignments residing on the system using an optional collection filter.
<para>Available filters: DataSourceId, DataStorageId, DeviceId, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the device assignments.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDataStorages(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data storages residing on the system using an optional collection filter.
<para>Available filters: AdvancedQuery, Commissioned, Id, ModifiedSince, Name, Type.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the data storages.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, AllTags, Capturing, Commissioned, Enabled, Encoding, HasFolderTags, Id, Ip, ManualRecording, ModifiedSince, Name, Number, Recording, State, Type, Unassigned.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the data sources on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetDataObjects(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data objects from the VideoXpert system using an optional collection filter.
<para>Available filters: ClientType, ModifiedSince, Owned, Owner.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the data objects on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetBookmarks(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the bookmarks from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, DataSourceId, DataSourceType, Description, GroupId, Id, Locked, ModifiedSince, Name, SearchEndTime, SearchStartTime, Time.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the bookmarks on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetAnalyticSessions(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the analytic sessions from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, DataSourceId, DeviceId, Id, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the analytic sessions on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetAlarmInputs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the alarm inputs from the VideoXpert system using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, State.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the alarm inputs on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.GetAccessPoints(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the access points from the VideoXpert system using an optional collection filter.
<para>Available filters: kAdvancedQuery, kHasStatus, kId, kModifiedSince, kName, kState, kType.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the access points on the system.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteVxMonitor(VxSdkNet.Monitor)">
            <summary>
Delete a monitor from the VideoXpert system.
</summary>
            <param name="monitorItem">The monitor to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the monitor.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteUser(VxSdkNet.User)">
            <summary>
Delete a user from the VideoXpert system.
</summary>
            <param name="user">The user to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the user.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteTimeTable(VxSdkNet.TimeTable)">
            <summary>
Delete a time table from the VideoXpert system.
</summary>
            <param name="timeTableItem">The time table to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the time table.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteTag(VxSdkNet.Tag)">
            <summary>
Delete a tag from the VideoXpert system.
</summary>
            <param name="tagItem">The tag to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the tag.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteSituation(VxSdkNet.Situation)">
            <summary>
Delete an existing situation from the system.
</summary>
            <param name="situationItem">The situation to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the situation.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteSchedule(VxSdkNet.Schedule)">
            <summary>
Delete a schedule from the VideoXpert system.
</summary>
            <param name="scheduleItem">The schedule to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the schedule.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteRule(VxSdkNet.Rule)">
            <summary>
Delete a rule from the VideoXpert system.
</summary>
            <param name="ruleItem">The rule to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the rule.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteRole(VxSdkNet.Role)">
            <summary>
Delete a role from the VideoXpert system.
</summary>
            <param name="roleItem">The role to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the role.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteReportTemplate(VxSdkNet.ReportTemplate)">
            <summary>
Delete a report template from the VideoXpert system.
</summary>
            <param name="reportTemplate">The report template to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the report template.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteReport(VxSdkNet.Report)">
            <summary>
Delete a report from the VideoXpert system.
</summary>
            <param name="reportItem">The report to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the report.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteRecording(VxSdkNet.Recording)">
            <summary>
Delete a recording from the VideoXpert system.
</summary>
            <param name="recordingItem">The recording to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the recording.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteMonitorWall(VxSdkNet.MonitorWall)">
            <summary>
Delete a monitor wall from the VideoXpert system.
</summary>
            <param name="monitorWallItem">The monitor wall to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the monitor wall.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteManualRecording(VxSdkNet.ManualRecording)">
            <summary>
Delete a manual recording from the VideoXpert system.
</summary>
            <param name="manualRecordingItem">The manual recording to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the manual recording.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteFile(VxSdkNet.VxFile)">
            <summary>
Delete a file from the VideoXpert system.
</summary>
            <param name="fileItem">The file to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the file.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteExport(VxSdkNet.Export)">
            <summary>
Delete an export from the VideoXpert system.
</summary>
            <param name="exportItem">The export to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the export.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteDrawing(VxSdkNet.Drawing)">
            <summary>
Delete a drawing from the VideoXpert system.
</summary>
            <param name="drawingItem">The drawing to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the drawing.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteDevice(VxSdkNet.Device)">
            <summary>
Delete a device and its hosted data sources and data storages from the VideoXpert system.
If the device is assigned to a datastorage, it shall be unassigned.
</summary>
            <param name="device">The device to be deleted.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the device.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteDataObject(VxSdkNet.DataObject)">
            <summary>
Delete a data object from the VideoXpert system.
</summary>
            <param name="dataObject">The data object to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the data object.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteBookmark(VxSdkNet.Bookmark)">
            <summary>
Delete a bookmark from the VideoXpert system.
</summary>
            <param name="bookmarkItem">The bookmark to be deleted from the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the bookmark.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DeleteAnalyticSession(VxSdkNet.AnalyticSession)">
            <summary>
Delete an analytic session from the VideoXpert system.
</summary>
            <param name="analyticSession">The analytic session to be deleted from the VideoXpert system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the analytic session.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.DecommissionDevice(VxSdkNet.Device)">
            <summary>
Decommissions a device on the VideoXpert system.
</summary>
            <param name="device">The device to decommission.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of decommissioning the device.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.CommissionDevice(VxSdkNet.Device)">
            <summary>
Commissions a device for use within the VideoXpert system.
</summary>
            <param name="device">The device to commission.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of commissioning the device.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddVxMonitor(VxSdkNet.NewMonitor)">
            <summary>
Add a new monitor on the VideoXpert system.
</summary>
            <param name="newMonitor">The new monitor to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of creating the monitor.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddUser(VxSdkNet.NewUser)">
            <summary>
Add a new user on the VideoXpert system.
</summary>
            <param name="newUser">The new user to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the user.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddTimeTable(VxSdkNet.NewTimeTable)">
            <summary>
Add a new time table on the VideoXpert system.
</summary>
            <param name="newTimeTable">The new time table to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the schedule.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddTag(VxSdkNet.NewTag)">
            <summary>
Add a new tag on the VideoXpert system.
</summary>
            <param name="newTag">The new tag to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the tag.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddSituation(VxSdkNet.NewSituation)">
            <summary>
Add a new situation to the system.
</summary>
            <param name="newSituation">The new situation to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the situation.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddSchedule(VxSdkNet.NewSchedule)">
            <summary>
Add a new schedule on the VideoXpert system.
</summary>
            <param name="newSchedule">The new schedule to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the schedule.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddRule(VxSdkNet.NewRule)">
            <summary>
Add a new rule on the VideoXpert system.
</summary>
            <param name="newRule">The new rule to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the schedule.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddRole(System.String)">
            <summary>
Add a new role on the VideoXpert system.
</summary>
            <param name="roleName">The name of new role to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the role.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddReportTemplate(VxSdkNet.NewReportTemplate)">
            <summary>
Add a new report template to the VideoXpert system.
</summary>
            <param name="newReportTemplate">The new report template to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the report template.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddReport(VxSdkNet.NewReport)">
            <summary>
Requests a new report to be generated on the VideoXpert system.
</summary>
            <param name="newReport">The new report to be generated to the system.</param>
            <returns>
                <c>nullptr</c> if it fails, else the new report template.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddRecording(VxSdkNet.NewRecording)">
            <summary>
Add a new recording to the VideoXpert system.
</summary>
            <param name="newRecording">The new recording to be added.</param>
            <returns>
                <c>nullptr</c> if it fails, else the new recording.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddMonitorWall(System.String)">
            <summary>
Add a new monitor wall on the VideoXpert system.
</summary>
            <param name="monitorWallName">The name of the new monitor wall to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of creating the monitor wall.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddMember(VxSdkNet.NewMember)">
            <summary>
Add a new member system to be aggregated.
</summary>
            <param name="newMember">The new member system to be aggregated.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the member.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddManualRecording(VxSdkNet.NewManualRecording)">
            <summary>
Add a new manual recording to the VideoXpert system.
</summary>
            <param name="newManualRecording">The new manual recording to be added.</param>
            <returns>
                <c>nullptr</c> if it fails, else the new manual recording.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddFile(System.String,System.String)">
            <summary>
Add a new file to the VideoXpert system.
</summary>
            <param name="filePath">The local path to the file.</param>
            <param name="filename">The filename of the associated file data.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the file.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddExport(VxSdkNet.NewExport)">
            <summary>
Add a new export on the VideoXpert system.
</summary>
            <param name="newExport">The new export to be added to the system.</param>
            <returns>
                <c>nullptr</c> if it fails, else the new export.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddDrawing(System.String)">
            <summary>
Add a new drawing on the VideoXpert system.
</summary>
            <param name="drawingName">The name of the new drawing to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the drawing.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddDevice(VxSdkNet.NewDevice)">
            <summary>
Add a device to the VideoXpert system.
</summary>
            <param name="newDevice">The new device to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddDataObject(VxSdkNet.NewDataObject)">
            <summary>
Add a new data object on the VideoXpert system.
</summary>
            <param name="newDataObject">The new data object to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the data object.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddBookmark(VxSdkNet.NewBookmark)">
            <summary>
Add a new bookmark on the VideoXpert system.
</summary>
            <param name="newBookmark">The new bookmark to be added to the system.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the bookmark.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AddAnalyticSession(VxSdkNet.NewAnalyticSession)">
            <summary>
Add a new analytic session to the VideoXpert system.
</summary>
            <param name="newAnalyticSession">The new analytic session to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the analytic session.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.AcknowledgeAllEvents">
            <summary>
Acknowledge all events.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of acknowledging all events.</returns>
        </member>
        <member name="M:VxSdkNet.VXSystem.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.VXSystem.Dispose">
            <summary>
Virtual destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.VXSystem.#ctor(System.String,System.Int32,System.Boolean,System.String)">
            <summary>
Constructor that allows the port and SSL encryption parameters to be set.
</summary>
            <param name="ip">The IP address of the VideoXpert system.</param>
            <param name="port">The port used by the VideoXpert system.</param>
            <param name="useSSL">Whether or not to use SSL encryption</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="M:VxSdkNet.VXSystem.#ctor(System.String,System.String)">
            <summary>
Constructor that takes an IP and license key as parameters.
</summary>
            <param name="ip">The IP address of the VideoXpert system.</param>
            <param name="licenseKey">The license key.</param>
        </member>
        <member name="T:VxSdkNet.VXSystem.InternalEventDelegate">
            <summary>
The managed internal event delegate.
</summary>
            <param name="sdkEvent">The internal event sent from the VxSDK as a managed type.</param>
        </member>
        <member name="T:VxSdkNet.VXSystem.EventDelegate">
            <summary>
The managed event delegate.
</summary>
            <param name="vxEvent">The event sent from the system as a managed type.</param>
        </member>
        <member name="T:VxSdkNet.VXSystem.InternalEventCallbackDelegate">
            <summary>
The native internal event callback delegate.
</summary>
            <param name="vxInternalEvent">The internal event sent from the VxSDK.</param>
        </member>
        <member name="T:VxSdkNet.VXSystem.EventCallbackDelegate">
            <summary>
The native event callback delegate.
</summary>
            <param name="vxEvent">The event sent from system.</param>
        </member>
        <member name="T:VxSdkNet.VXSystem">
            <summary>
The VXSystem class represents a VideoXpert system.  It is the entry point of the VideoXpert SDK
and allows the user to manage the system and devices.
</summary>
        </member>
        <member name="P:VxSdkNet.PermissionSchema.Restrictions">
            <summary>
Gets or sets the recursive list of permission schema. Indicates permission hierarchy; nested items are
children while containing items are parents.
</summary>
            <value>The recursive list of permission schema.</value>
        </member>
        <member name="P:VxSdkNet.PermissionSchema.Permissions">
            <summary>
Gets or sets the list the resource types that may be restricted by this permission, if any.
</summary>
            <value>The list of resource types, if any.</value>
        </member>
        <member name="P:VxSdkNet.PermissionSchema.PermissionId">
            <summary>
Gets or sets the permission being granted by this field or field group.
</summary>
            <value>The permission ID.</value>
        </member>
        <member name="P:VxSdkNet.PermissionSchema.IsGroup">
            <summary>
Gets or sets whether or not this represents a permission group.
</summary>
            <value>
                <c>true</c> if this represents a permission group; <c>false</c> if a permission.</value>
        </member>
        <member name="M:VxSdkNet.PermissionSchema.#ctor(VxSdk.VxPermissionSchema*)">
            <summary>
Constructor.
</summary>
            <param name="vxPermissionSchema">The vx permission schema.</param>
        </member>
        <member name="M:VxSdkNet.PermissionSchema.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.PermissionSchema">
            <summary>
The PermissionSchema class represents static system permission information in a machine-readable manner. This
indicates permission groups, hierarchy, and resource restriction information.
</summary>
        </member>
        <member name="P:VxSdkNet.NewTimeTable.WeeklyTimeRanges">
            <summary>
Gets or sets the active time ranges for this time table.
</summary>
            <value>The active time ranges.</value>
        </member>
        <member name="P:VxSdkNet.NewTimeTable.StartDate">
            <summary>
Gets or sets the start date of the time table, it will be considered active after this date.
</summary>
            <value>The start date.</value>
        </member>
        <member name="P:VxSdkNet.NewTimeTable.Name">
            <summary>
Gets or sets the friendly name of the time table.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewTimeTable.Id">
            <summary>
Gets or sets the unique identifier of the time table.
</summary>
            <value>The unique identifier of the time table.</value>
        </member>
        <member name="P:VxSdkNet.NewTimeTable.EndDate">
            <summary>
Gets or sets the end date of the time table, it will be considered inactive after this date.
</summary>
            <value>The end date.</value>
        </member>
        <member name="M:VxSdkNet.NewTimeTable.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewTimeTable">
            <summary>
The NewTimeTable class represents a new time table.
</summary>
        </member>
        <member name="P:VxSdkNet.NewTag.ParentId">
            <summary>
Gets or sets the unique identifier of the tag that is the parent of this tag. If this is provided on a
non-folder tag, it will be ignored.
</summary>
            <value>The unique identifier of the parent tag.</value>
        </member>
        <member name="P:VxSdkNet.NewTag.Name">
            <summary>
Gets or sets the unique tag friendly name.
</summary>
            <remarks>Note: Commas are invalid characters for this field and MUST NOT be used.</remarks>
            <value>The unique friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewTag.IsPublic">
            <summary>
Gets or sets whether the new tag will not be owned (public) or will be owned by the user
submitting the request (private). Not applicable if this is a folder tag.
</summary>
            <value>
                <c>true</c> if the tag will be public, <c>false</c> if private.</value>
        </member>
        <member name="P:VxSdkNet.NewTag.IsFolder">
            <summary>
Gets or sets whether the new tag will be a folder tag.
</summary>
            <value>
                <c>true</c> if the tag will be a folder, otherwise <c>false</c>.</value>
        </member>
        <member name="T:VxSdkNet.NewTag">
            <summary>
The NewTag class represents a new tag.
</summary>
        </member>
        <member name="P:VxSdkNet.NewSituation.Type">
            <summary>
Gets or sets situation type.  The type must be of the form external/&lt;company&gt;/&lt;event&gt; where &lt;company&gt;
and &lt;event&gt; are strings no greater than 64 characters each; forward slashes are not allowed. These strings
describe the &lt;company&gt; that manufactured the device that was the source of the &lt;event&gt;.
</summary>
            <value>The situation type.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.SourceDeviceId">
            <summary>
Gets or sets the unique source identifier. This field acts an optional constraint on the source of
events for this situation. If specified, any events matching the situation type must also match
this SourceDeviceId in order for the situation to apply.
</summary>
            <value>The unique source identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.SnoozeIntervals">
            <summary>
Gets or sets the default snooze intervals, in seconds, for a generated event.
</summary>
            <value>A <c>List</c> of snooze intervals in seconds.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.ShouldPopupBanner">
            <summary>
Gets or sets whether clients should display a popup notification banner when receiving events of this type.
</summary>
            <value>
                <c>true</c> if a banner should popup, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.ShouldNotify">
            <summary>
Gets or sets whether an event generated from the situation shall generate notifications.
</summary>
            <value>
                <c>true</c> if notifications will be sent, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.ShouldLog">
            <summary>
Gets or sets whether events generated from this situation shall be persisted or immediately be discarded.
</summary>
            <value>
                <c>true</c> if events will be logged, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.ShouldExpandBanner">
            <summary>
Gets or sets whether the notification banner on clients should be expanded by default.
</summary>
            <value>
                <c>true</c> if the banner should be expanded, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.ShouldAudiblyNotify">
            <summary>
Gets or sets whether a notification sound should play on supporting clients when an event is received.
</summary>
            <value>
                <c>true</c> if a notification sound should play, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.Severity">
            <summary>
Gets or sets the severity of the generated event, from 1 (highest) to 10 (lowest).
</summary>
            <value>The event severity.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.Name">
            <summary>
Gets or sets the situation friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.IsAckNeeded">
            <summary>
Gets or sets whether the generated events shall have an initial state of AckNeeded or NoAckNeeded.
</summary>
            <value>
                <c>true</c> if events will require acknowledgement, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.AutoAcknowledge">
            <summary>
Gets or sets the number of seconds after which a generated event state will be set to AutoAcked. If less
than 0, a generated event must be manually acknowledged. If 0, a generated event is set to AutoAcked immediately.
</summary>
            <value>The number of seconds before auto-acknowledgement.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.AudiblePlayCount">
            <summary>
Gets or sets the amount of times to play audible notifications.
</summary>
            <value>The amount of times to play audible notifications.</value>
        </member>
        <member name="P:VxSdkNet.NewSituation.AudibleLoopDelay">
            <summary>
Gets or sets the seconds to wait between audible notifications.
</summary>
            <value>The seconds between audible notifications.</value>
        </member>
        <member name="M:VxSdkNet.NewSituation.Default">
            <summary>
Defaults this instance.
</summary>
        </member>
        <member name="M:VxSdkNet.NewSituation.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewSituation">
            <summary>
The NewSituation class represents a new situation configuration that specifies how
corresponding events shall be generated and handled when the situation is detected.
</summary>
        </member>
        <member name="P:VxSdkNet.NewSchedule.UseAllDataSources">
            <summary>
Gets or sets whether the schedule will apply to all data sources regardless of what data sources are linked to
the schedule.
</summary>
            <value>
                <c>true</c> if the schedule will apply to all data sources, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.NewSchedule.ScheduleTriggers">
            <summary>
Gets the triggers that shall be included in this schedule.
</summary>
            <value>A <c>List</c> of triggers included in the schedule.</value>
        </member>
        <member name="P:VxSdkNet.NewSchedule.Name">
            <summary>
Gets or sets the friendly name of the schedule.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewSchedule.Id">
            <summary>
Gets or sets the unique schedule identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewSchedule.Action">
            <summary>
Gets or sets the event action to use for the schedule.
</summary>
            <value>The event <see cref="T:VxSdkNet.Schedule.Actions">Action</see>.</value>
        </member>
        <member name="M:VxSdkNet.NewSchedule.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewSchedule">
            <summary>
The NewSchedule class represents a new schedule.
</summary>
        </member>
        <member name="P:VxSdkNet.NewRule.TimeTables">
            <summary>
Gets the time tables that will be associated with this rule. The rule will only
automatically run its script if a trigger occurs during the times contained by the time tables
specified here. If empty, no active time ranges are available for this rule (it must be manually
triggered). If null, no time filters will be applied (the new rule is always active).
</summary>
            <value>A <c>List</c> of time tables to be used by this rule.</value>
        </member>
        <member name="P:VxSdkNet.NewRule.Script">
            <summary>
Gets or sets the script to run when the rule is triggered.
</summary>
            <value>The script.</value>
        </member>
        <member name="P:VxSdkNet.NewRule.RuleTriggers">
            <summary>
Gets the triggers that, when any activate, cause the rule to run its script. If empty or null, this rule
must be manually triggered.
</summary>
            <value>A <c>List</c> of triggers to be used by this rule.</value>
        </member>
        <member name="P:VxSdkNet.NewRule.RuleResponses">
            <summary>
Gets or sets the responses that will be executed when this rule is triggered. The order of this list is the
order in which the responses will execute.
</summary>
            <value>A <c>List</c> of responses to be used by this rule.</value>
        </member>
        <member name="P:VxSdkNet.NewRule.Name">
            <summary>
Gets or sets the friendly name of the rule.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewRule.IsEnabled">
            <summary>
Gets or sets whether the new rule will be enabled or not.
</summary>
            <value>
                <c>true</c> to enable the new rule, otherwise <c>false</c>.</value>
        </member>
        <member name="M:VxSdkNet.NewRule.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewRule">
            <summary>
The NewRule class represents a new rule.
</summary>
        </member>
        <member name="P:VxSdkNet.Rule.Triggers">
            <summary>
Gets or sets the triggers that, when any activate, cause the rule to run its script. If empty or null, this rule
must be manually triggered.
</summary>
            <value>A <c>List</c> of triggers to be used by this rule.</value>
        </member>
        <member name="P:VxSdkNet.Rule.TimeTables">
            <summary>
Gets or sets the time tables that will be associated with this rule. The rule will only
automatically run its script if a trigger occurs during the times contained by the time tables
specified here. If empty, no active time ranges are available for this rule (it must be manually
triggered). If null, no time filters will be applied (the new rule is always active).
</summary>
            <value>A <c>List</c> of time tables to be used by this rule.</value>
        </member>
        <member name="P:VxSdkNet.Rule.Script">
            <summary>
[DEPRECATED] Gets or sets the script to run when the rule is triggered.
</summary>
            <value>The script.</value>
        </member>
        <member name="P:VxSdkNet.Rule.Responses">
            <summary>
Gets or sets the responses that will be executed when this rule is triggered. The order of this list is the
order in which the responses will execute.
</summary>
            <value>A <c>List</c> of responses to be executed by this rule.</value>
        </member>
        <member name="P:VxSdkNet.Rule.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Rule.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Rule.IsEnabled">
            <summary>
Gets or sets whether the rule will be enabled or not.
</summary>
            <value>
                <c>true</c> to enable new rule, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Rule.Id">
            <summary>
Gets the unique rule identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.Rule.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Rule.GetTimeTables(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the time tables associated with this rule using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the associated time tables.</returns>
        </member>
        <member name="M:VxSdkNet.Rule.HaltScript">
            <summary>
Halts the script that this rule is running, if any. This has no effect if the script is not currently running.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of halting the script.</returns>
        </member>
        <member name="M:VxSdkNet.Rule.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Rule.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Rule.#ctor(VxSdk.IVxRule*)">
            <summary>
Constructor.
</summary>
            <param name="vxRule">The vx rule.</param>
        </member>
        <member name="T:VxSdkNet.Rule">
            <summary>
The Rule class represents a set of rule triggers that, when any occur during times when the rule is active, cause a script to run. A rule can be read as follows:
"If enabled, when any specified triggers occur during specified times, run the associated script."
</summary>
        </member>
        <member name="P:VxSdkNet.RuleTrigger.ResourceRefs">
            <summary>
Gets the resource reference that this trigger is associated with.
</summary>
            <returns>The resource reference. If empty, no source filter will be applied (all sources are valid).</returns>
        </member>
        <member name="P:VxSdkNet.RuleTrigger.SituationType">
            <summary>
Gets or sets situation type. This trigger will be checked each time this type of situation occurs.
</summary>
            <value>The situation type. If empty, this trigger will always be inactive.</value>
        </member>
        <member name="M:VxSdkNet.RuleTrigger.#ctor(VxSdk.VxRuleTrigger*)">
            <summary>
Constructor.
</summary>
            <param name="vxRuleTrigger">The time range.</param>
        </member>
        <member name="M:VxSdkNet.RuleTrigger.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.RuleTrigger">
            <summary>
The RuleTrigger class represents a condition in a rule that, if true, causes the rule to run its script
(if triggered during an active time of the rule).
</summary>
        </member>
        <member name="P:VxSdkNet.RuleResponse.UsedSourceEventFields">
            <summary>
Gets the list of fields from the source event to copy to the generated event. The event time is always copied.
Restricted to severity, source_device_id, properties. Ignored if <c>IsCustomScript</c> is <c>true</c>.
</summary>
            <returns>The list of fields from the source event to copy to the generated event, if any.</returns>
        </member>
        <member name="P:VxSdkNet.RuleResponse.SituationType">
            <summary>
Gets or sets the situation type to generate an event for. Ignored if <c>IsCustomScript</c> is <c>true</c>.
</summary>
            <value>The situation type.</value>
        </member>
        <member name="P:VxSdkNet.RuleResponse.Script">
            <summary>
Gets or sets the Groovy script to run when the associated rule is triggered.
Ignored if <c>IsCustomScript</c> is <c>false</c>.
</summary>
            <value>The script.</value>
        </member>
        <member name="P:VxSdkNet.RuleResponse.IsCustomScript">
            <summary>
Gets or sets whether this response will run a custom script or generate an event on the system.
</summary>
            <value>
                <c>true</c> to run a custom script (ignore the <c>SituationType</c> and <c>UsedSourceEventFields</c>
properties); <c>false</c> to generate an event (ignore the <c>Script</c> property).
</value>
        </member>
        <member name="M:VxSdkNet.RuleResponse.#ctor(VxSdk.VxRuleResponse*)">
            <summary>
Constructor.
</summary>
            <param name="vxRuleResponse">The rule response.</param>
        </member>
        <member name="M:VxSdkNet.RuleResponse.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.RuleResponse">
            <summary>
The RuleResponse class represents a rule response. The response may be configured to either execute a Groovy
script or generate an event in the system when triggered.
</summary>
        </member>
        <member name="P:VxSdkNet.NewReport.TemplateId">
            <summary>
Gets or sets the unique identifier of the report template to use to generate the new report.
</summary>
            <value>The unique identifier of the report template.</value>
        </member>
        <member name="P:VxSdkNet.NewReport.Name">
            <summary>
Gets or sets the friendly name of the new report. If not specified, the name of the report template will be used.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="T:VxSdkNet.NewReport">
            <summary>
The NewReport class represents a request to generate a new report.
</summary>
        </member>
        <member name="P:VxSdkNet.NewRecording.StartTime">
            <summary>
Gets or sets the time at which the recording should begin (may be in the recent past). The recording
<see cref="P:VxSdkNet.NewRecording.PreRecord" /> and <see cref="P:VxSdkNet.NewRecording.MaxRecordingTime" /> will reference to this time. Defaults to the time
at which the server processes the request.
</summary>
            <value>The <c>DateTime</c> at which the recording should begin, otherwise a default <c>DateTime</c>.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.EndEventSource">
            <summary>
Gets or sets the source that will be used to filter <see cref="P:VxSdkNet.NewRecording.EndEvent" />.
</summary>
            <value>The source reference.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.RecordingType">
            <summary>
Gets or sets the type of this recording which will show up in the corresponding clips
</summary>
            <value>The type of this recording which will show up in the corresponding clips</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.Framerate">
            <summary>
Gets or sets the framerate to record at.
</summary>
            <value>The framerate to record at.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.PreRecord">
            <summary>
Gets or sets the amount of time, in seconds, to record prior to the recording start time.
</summary>
            <value>The amount of time, in seconds, to record prior to the recording start time.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.PostRecord">
            <summary>
Gets or sets the amount of time, in seconds, to record after the recording would otherwise be stopped.
</summary>
            <value>The amount of time, in seconds, to record after the recording would otherwise be stopped.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.MaxRecordingTime">
            <summary>
Gets or sets the maximum amount of time, in seconds, to record before stopping.
</summary>
            <value>The maximum amount of time, in seconds, to record before stopping.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.Name">
            <summary>
Gets or sets the friendly name of the recording which can be used to identify recordings to stop.
</summary>
            <value>The friendly name of the recording.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.Id">
            <summary>
Gets or sets the unique identifier of recording.
</summary>
            <value>The unique identifier of the recording.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.EndEvent">
            <summary>
Gets or sets the situation type that will automatically end the recording when a matching event occurs.
</summary>
            <value>The situation type.</value>
        </member>
        <member name="P:VxSdkNet.NewRecording.DataSourceId">
            <summary>
Gets or sets the unique identifier of the data source to record.
</summary>
            <value>The unique identifier of the data source to record.</value>
        </member>
        <member name="T:VxSdkNet.NewRecording">
            <summary>
The NewRecording class represents a request for a new recording to be generated.
</summary>
        </member>
        <member name="P:VxSdkNet.NewMonitor.ResolutionY">
            <summary>
Gets or sets the vertical resolution.
</summary>
            <value>The vertical resolution.</value>
        </member>
        <member name="P:VxSdkNet.NewMonitor.ResolutionX">
            <summary>
Gets or sets the horizontal resolution.
</summary>
            <value>The horizontal resolution.</value>
        </member>
        <member name="P:VxSdkNet.NewMonitor.Number">
            <summary>
Gets or sets the unique number of the monitor.
</summary>
            <value>The monitor number.</value>
        </member>
        <member name="P:VxSdkNet.NewMonitor.Name">
            <summary>
Gets or sets the friendly name of the monitor.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewMonitor.Layout">
            <summary>
Gets or sets the cell grid layout of the monitor.
</summary>
            <value>The cell grid layout.</value>
        </member>
        <member name="P:VxSdkNet.NewMonitor.HostDeviceId">
            <summary>
Gets or sets the unique identifier of the monitor host device.
</summary>
            <value>The unique host identifier.</value>
        </member>
        <member name="T:VxSdkNet.NewMonitor">
            <summary>
The NewMonitor class represents a new monitor to be created on the system.
</summary>
        </member>
        <member name="P:VxSdkNet.NewMember.RtspCapabilities">
            <summary>
Gets or sets the network streaming capabilities that the member shall expose to its clients (via data interfaces).
</summary>
            <value>The network streaming capabilities.</value>
        </member>
        <member name="P:VxSdkNet.NewMember.Port">
            <summary>
Gets or sets the host port of the system.
</summary>
            <value>The host port.</value>
        </member>
        <member name="P:VxSdkNet.NewMember.Bandwidth">
            <summary>
Gets or sets the bandwidth available between the aggregator system and the member system (in kbps).
</summary>
            <value>The bandwidth in kbps.</value>
        </member>
        <member name="P:VxSdkNet.NewMember.Username">
            <summary>
Gets or sets the username for access to the member.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.NewMember.Password">
            <summary>
Gets or sets the password for access to the member.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.NewMember.Host">
            <summary>
Gets or sets the host address of the system.
</summary>
            <value>The host address.</value>
        </member>
        <member name="T:VxSdkNet.NewMember">
            <summary>
The NewMember class represents a new member system.
</summary>
        </member>
        <member name="P:VxSdkNet.NewManualRecording.PreRecord">
            <summary>
Gets or sets the amount of time, from 0 to 30 seconds, to record prior to the manual recording start time.
</summary>
            <value>The amount of time, in seconds, to record prior to the manual recording start time.</value>
        </member>
        <member name="P:VxSdkNet.NewManualRecording.PostRecord">
            <summary>
Gets or sets the amount of time, from 0 to 30 seconds, to record after the manual recording is stopped.
</summary>
            <value>The amount of time, in seconds, to record after the manual recording is stopped.</value>
        </member>
        <member name="P:VxSdkNet.NewManualRecording.DataSourceId">
            <summary>
Gets or sets the unique identifier of the data source to manually record.
</summary>
            <value>The unique identifier of the data source to manually record.</value>
        </member>
        <member name="T:VxSdkNet.NewManualRecording">
            <summary>
The NewManualRecording class represents a request for a new manual recording to be generated.
</summary>
        </member>
        <member name="P:VxSdkNet.ManualRecording.Time">
            <summary>
Gets the time at which this manual recording was created (not necessarily the exact time that the manual record clip starts).
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which this manual recording was created.</value>
        </member>
        <member name="P:VxSdkNet.ManualRecording.OwnerName">
            <summary>
Gets the name of the user that created this manual recording.
</summary>
            <value>The owner name.</value>
        </member>
        <member name="P:VxSdkNet.ManualRecording.Id">
            <summary>
Gets the unique manual recording identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.ManualRecording.DataSourceId">
            <summary>
Gets the unique identifier of the data source that is being manually recorded.
</summary>
            <value>The unique identifier of the data source.</value>
        </member>
        <member name="P:VxSdkNet.ManualRecording.DataSource">
            <summary>
Gets the data source that is being manually recorded.
</summary>
            <value>The data source being manually recorded.</value>
        </member>
        <member name="M:VxSdkNet.ManualRecording.ResetExpirationTimers">
            <summary>
Resets the expiration timers in order to extend this recordings timeout.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of resetting the experation timers.</returns>
        </member>
        <member name="M:VxSdkNet.ManualRecording.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.ManualRecording.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ManualRecording.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ManualRecording.#ctor(VxSdk.IVxManualRecording*)">
            <summary>
Constructor.
</summary>
            <param name="vxManualRecording">The vx manual recording.</param>
        </member>
        <member name="T:VxSdkNet.ManualRecording">
            <summary>
The ManualRecording class represents an instance of an active manual recording (the action, not the recorded clip).
Each manual recording will cause its specified data source to be manually recorded by all data storages that the
data source is assigned to. Only one manual recording per user per data source is allowed. A clip created via the
application of a manual recording will have an event value of manual.
</summary>
        </member>
        <member name="P:VxSdkNet.NewExport.Password">
            <summary>
Gets or sets the password for the Export. If set, the export data will be signed and encrypted. This password
will be required to decrypt the export data. If not set, the export data will not be signed or encrypted.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.NewExport.Name">
            <summary>
Gets or sets the friendly name of the export.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewExport.Format">
            <summary>
Gets or sets the export format to use.
</summary>
            <value>The export <see cref="T:VxSdkNet.Export.Formats">Format</see>.</value>
        </member>
        <member name="P:VxSdkNet.NewExport.Clips">
            <summary>
Gets the clips that shall be included in this export when triggered.
</summary>
            <value>A <c>List</c> of clips included in the export.</value>
        </member>
        <member name="P:VxSdkNet.NewExport.AlternateLocation">
            <summary>
Gets or sets the alternate network location to export the file to, if any.
</summary>
            <value>The alternate export location, if any.</value>
        </member>
        <member name="M:VxSdkNet.NewExport.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewExport">
            <summary>
The NewExport class represents a new export.
</summary>
        </member>
        <member name="P:VxSdkNet.NewExportClip.StartTime">
            <summary>
Gets or sets the time at which the clip begins.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.NewExportClip.EndTime">
            <summary>
Gets or sets the time at which the clip ends.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.NewExportClip.DataSourceId">
            <summary>
Gets or sets the unique identifier of the data source.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewExportClip.DataEncodingId">
            <summary>
Gets or sets the specific data encoding to export (quality, framerate, and resolution). This can be obtained from the desired data interface of
the clip. If not specified, the server shall select the data encoding.
</summary>
            <value>The specific data encoding to export.</value>
        </member>
        <member name="T:VxSdkNet.NewExportClip">
            <summary>
The NewExportClip class represents a new export clip.
</summary>
        </member>
        <member name="P:VxSdkNet.NewEvent.Time">
            <summary>
Gets or sets the time at which the situation occurred.
</summary>
            <value>The time.</value>
        </member>
        <member name="P:VxSdkNet.NewEvent.SourceDeviceId">
            <summary>
Gets or sets the unique identifier of the device that the situation occurred on.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewEvent.SituationType">
            <summary>
Gets or sets the identifier for the type of situation that led to this new event.
</summary>
            <value>The type identifier of the situation.</value>
        </member>
        <member name="P:VxSdkNet.NewEvent.Properties">
            <summary>
Gets or sets any additional information related to the event.
</summary>
            <value>A <c>List</c> containing the event properties.</value>
        </member>
        <member name="P:VxSdkNet.NewEvent.Id">
            <summary>
Gets or sets the unique identifier of the event. If not provided, the server will create this value.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewEvent.GeneratorDeviceId">
            <summary>
Gets or sets the unique identifier of the device that generated this event.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.NewEvent.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewEvent">
            <summary>
The NewEvent class represents a request for a new event to be generated. The
event will be generated based upon the NewEvent data, its Situation configuration,
and will receive a unique identifier.
</summary>
        </member>
        <member name="P:VxSdkNet.NewDevice.Version">
            <summary>
Gets or sets the current version of software running on the device, if any.
</summary>
            <value>The software version.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Vendor">
            <summary>
Gets or sets the device vendor, if any.
</summary>
            <value>The device vendor.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Username">
            <summary>
Gets or sets the account username used to communicate with the device, if any.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Type">
            <summary>
Gets or sets the type of device.
</summary>
            <value>The device <see cref="T:VxSdkNet.Device.Types">Type</see>.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.ShouldAutoCommission">
            <summary>
Gets or sets whether to have this device automatically commissioned when created.
</summary>
            <value>
                <c>true</c> to automatically commissioned the device, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Serial">
            <summary>
Gets or sets the serial number of the device, if any.
</summary>
            <value>The serial number.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Port">
            <summary>
Gets or sets the port associated with the device, if any.
</summary>
            <value>The port.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Password">
            <summary>
Gets or sets the account password used to communicate with the device, if any.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Name">
            <summary>
Gets or sets the friendly name of the device.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Model">
            <summary>
Gets or sets the model name of the device, if any.
</summary>
            <value>The model name.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Ip">
            <summary>
Gets or sets the IP of the device.
</summary>
            <remarks>
DEPRECATED: Use <see cref="P:VxSdkNet.NewDevice.Host" /> instead.
</remarks>
            <value>The IP.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Id">
            <summary>
Gets or sets the ID of the device.
</summary>
            <value>The ID.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.Host">
            <summary>
Gets or sets the host address of the device. If set, takes precedence over the ip. The combination
of <c>Host</c>, <c>Ip</c>, <c>Port</c> and <c>Type</c> must be unique.
<para> NOTE: One of either <c>Host</c> or <c>Ip</c> must be provided. </para></summary>
        </member>
        <member name="P:VxSdkNet.NewDevice.Endpoints">
            <summary>
Gets or sets the list of source URIs that the device will support. If the device type is <c>Generic</c>
then at least 1 URI must be provided. The URI must be unique, otherwise <c>Conflict</c> will  be returned.
</summary>
            <value>A <c>List</c> of source URIs.</value>
        </member>
        <member name="P:VxSdkNet.NewDevice.DriverType">
            <summary>
Gets or sets the associated driver type identifier.
</summary>
            <value>The associated driver type identifier.</value>
        </member>
        <member name="M:VxSdkNet.NewDevice.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewDevice">
            <summary>
The NewDevice class represents a new device.
</summary>
        </member>
        <member name="P:VxSdkNet.NewDataObject.IsPrivate">
            <summary>
Gets or sets whether the new data object will not be owned (public) or will be owned by the user
submitting the request (private).
</summary>
            <value>
                <c>true</c> if the data object will be public, <c>false</c> if private.</value>
        </member>
        <member name="P:VxSdkNet.NewDataObject.Data">
            <summary>
Gets or sets the serialized data (e.g.: JSON, XML, CSV, etc). The maximum allowable size of this field is 1MB.
</summary>
            <value>The serialized data.</value>
        </member>
        <member name="P:VxSdkNet.NewDataObject.ClientType">
            <summary>
Gets or sets the client identifier. Recommend using the Java package naming convention: com.&gt;company&lt;.&gt;project&lt;.&gt;client_name&lt;.
</summary>
            <value>The unique friendly name.</value>
        </member>
        <member name="T:VxSdkNet.NewDataObject">
            <summary>
The NewDataObject class represents a new data object.
</summary>
        </member>
        <member name="P:VxSdkNet.NewBookmark.Time">
            <summary>
Gets or sets the time at which the point of interest occurred.
</summary>
            <value>The time at which the point of interest occurred.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.Name">
            <summary>
Gets or sets the friendly name of the bookmark.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.LockStartTime">
            <summary>
Gets or sets the start time of the media to lock.
</summary>
            <value>The lock start time.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.LockEndTime">
            <summary>
Gets or sets the end time of the media to lock.
</summary>
            <value>The lock end time.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.IsLocked">
            <summary>
Gets or sets whether this bookmark will be locked, which will prevent the media it locks from being garbage collected on recorders.
</summary>
            <value>
                <c>true</c> if locked, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.GroupId">
            <summary>
Gets or sets the unique identifier of the associated bookmark group.  Typically used to identify related bookmarks (such as those
bookmarking the same time on audio and video).
</summary>
            <value>The unique identifier of the bookmark group.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.Description">
            <summary>
Gets or sets the description of the bookmark.
</summary>
            <value>The bookmark description.</value>
        </member>
        <member name="P:VxSdkNet.NewBookmark.DataSourceId">
            <summary>
Gets or sets the unique identifier of the data source to associate with the bookmark.
</summary>
            <value>The unique identifier of the associated data source.</value>
        </member>
        <member name="T:VxSdkNet.NewBookmark">
            <summary>
The NewBookmark class represents a new bookmark.
</summary>
        </member>
        <member name="P:VxSdkNet.License.SystemLicenseType">
            <summary>
Gets the type of system that this license is applied to.
</summary>
            <value>The system license <see cref="T:VxSdkNet.License.SystemLicenseTypes">Type</see>.</value>
        </member>
        <member name="P:VxSdkNet.License.LicenseSupInfo">
            <summary>
Gets the software upgrade licensing information.
<para>Note: Only available when logged in as the built-in admin user.</para></summary>
            <value>The software upgrade licensing information.</value>
        </member>
        <member name="P:VxSdkNet.License.LicenseFeatures">
            <summary>
Gets the features this license contains.
</summary>
            <value>A <c>List</c> of license features.</value>
        </member>
        <member name="P:VxSdkNet.License.CompanyName">
            <summary>
Gets the friendly name of the owning company/organization.
</summary>
            <value>The friendly name of the owning company/organization.</value>
        </member>
        <member name="M:VxSdkNet.License.DeleteLicenseFeature(VxSdkNet.LicenseFeature)">
            <summary>
Delete a pending license feature. Available only if it's a pending license feature.
</summary>
            <param name="licenseFeatureItem">The license feature to be deleted.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the license feature.</returns>
        </member>
        <member name="M:VxSdkNet.License.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.License.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.License.#ctor(VxSdk.IVxLicense*)">
            <summary>
Constructor.
</summary>
            <param name="vxLicense">The vx license.</param>
        </member>
        <member name="F:VxSdkNet.License.SystemLicenseTypes.Camera">
            <summary>Camera system license.</summary>
        </member>
        <member name="F:VxSdkNet.License.SystemLicenseTypes.Unlicensed">
            <summary>Unlicensed system.</summary>
        </member>
        <member name="F:VxSdkNet.License.SystemLicenseTypes.Professional">
            <summary>Professional system license.</summary>
        </member>
        <member name="F:VxSdkNet.License.SystemLicenseTypes.Enterprise">
            <summary>Enterprise system license.</summary>
        </member>
        <member name="F:VxSdkNet.License.SystemLicenseTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.License.SystemLicenseTypes">
            <summary>
Values that represent the types of system licenses.
</summary>
        </member>
        <member name="T:VxSdkNet.License">
            <summary>
The License class represents license information for the resource that owns this resource.
</summary>
        </member>
        <member name="P:VxSdkNet.LicenseSup.ExtensionYearCount">
            <summary>
Gets the number of channel-years needed to extend the software upgrade plan license for 1 year.
</summary>
            <value>The channel-years needed.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSup.ExpirationTime">
            <summary>
Gets the expiration time of the software upgrade plan.
</summary>
            <value>The expiration time.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSup.Events">
            <summary>
Gets the events that are related to this license software upgrade plan; an audit trail.
</summary>
            <value>A <c>List</c> of related events.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSup.CurrentBalance">
            <summary>
Gets the current number of channel-years remaining.
</summary>
            <value>The number of channel-years remaining.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSup.CatchUpCount">
            <summary>
Gets the number of channel-years needed to bring the software upgrade plan license up-to-date today.
</summary>
            <value>The channel-years needed.</value>
        </member>
        <member name="M:VxSdkNet.LicenseSup.#ctor(VxSdk.VxLicenseSup)">
            <summary>
Constructor.
</summary>
            <param name="vxLicenseSup">The vx license sup.</param>
        </member>
        <member name="M:VxSdkNet.LicenseSup.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.LicenseSup">
            <summary>
The LicenseSup class represents software upgrade plan licensing information.
</summary>
        </member>
        <member name="P:VxSdkNet.LicenseSupEvent.Value">
            <summary>
Gets a numerical value that provides additional data related to the type of event this is.
</summary>
            <value>The additional data numerical value.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSupEvent.Type">
            <summary>
Gets the type of software upgrade plan event.
</summary>
            <value>The event type.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSupEvent.Time">
            <summary>
Gets the time at which this event occurred.
</summary>
            <value>The event time.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSupEvent.ExpirationTime">
            <summary>
Gets the projected expiration of the software upgrade plan (at the time of this event).
</summary>
            <value>The projected expiration time.</value>
        </member>
        <member name="P:VxSdkNet.LicenseSupEvent.CurrentBalance">
            <summary>
Gets the current number of channel-years available (at the time of this event).
</summary>
            <value>The number of channel-years available.</value>
        </member>
        <member name="M:VxSdkNet.LicenseSupEvent.#ctor(VxSdk.VxLicenseSupEvent)">
            <summary>
Constructor.
</summary>
            <param name="vxLicenseSupEvent">The vx license sup event.</param>
        </member>
        <member name="M:VxSdkNet.LicenseSupEvent.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.Tampered">
            <summary>A license tampered event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.InstalledSup3">
            <summary>A 3-year license installed event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.InstalledSup1">
            <summary>A 1-year license installed event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.ExtendedSup">
            <summary>A license extended event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.ExpiredSup3">
            <summary>A 3-year license expired event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.ExpiredSup1">
            <summary>A 1-year license expired event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.Decommissioned">
            <summary>A license decommissioned event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.Commissioned">
            <summary>A license commissioned event.</summary>
        </member>
        <member name="F:VxSdkNet.LicenseSupEvent.SupEventType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.LicenseSupEvent.SupEventType">
            <summary>
Values that represent software upgrade plan licensing event types.
</summary>
        </member>
        <member name="T:VxSdkNet.LicenseSupEvent">
            <summary>
The LicenseSupEvent class represents a specific event that occurred for a software upgrade plan.
</summary>
        </member>
        <member name="P:VxSdkNet.InternalEvent.Type">
            <summary>
Gets the internal event type.
</summary>
            <value>The type identifier of the event.</value>
        </member>
        <member name="P:VxSdkNet.InternalEvent.SystemId">
            <summary>
Gets the unique identifier of the system that generated the event.
</summary>
            <value>The system unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.InternalEvent.Properties">
            <summary>
Gets any additional information related to the event.
</summary>
            <value>A <c>List</c> containing the event properties.</value>
        </member>
        <member name="P:VxSdkNet.InternalEvent.Id">
            <summary>
Gets the unique identifier of the event.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.InternalEvent.#ctor(VxSdk.VxInternalEvent*)">
            <summary>
Constructor.
</summary>
            <param name="vxInternalEvent">The internal event.</param>
        </member>
        <member name="M:VxSdkNet.InternalEvent.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.InternalEvent.EventType.SystemLicenseExpired">
            <summary>The license on the system has expired.</summary>
        </member>
        <member name="F:VxSdkNet.InternalEvent.EventType.GraceLicenseExpired">
            <summary>The grace license has expired.</summary>
        </member>
        <member name="F:VxSdkNet.InternalEvent.EventType.SystemConnectionRestored">
            <summary>The connection to the VideoXpert system was restored.</summary>
        </member>
        <member name="F:VxSdkNet.InternalEvent.EventType.SystemConnectionLost">
            <summary>The connection to the VideoXpert system was lost.</summary>
        </member>
        <member name="F:VxSdkNet.InternalEvent.EventType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.InternalEvent.EventType">
            <summary>
Values that represent event types sent from the VxSDK.
</summary>
        </member>
        <member name="T:VxSdkNet.InternalEvent">
            <summary>
The InternalEvent class represents an internal event generated by the VxSDK.
</summary>
        </member>
        <member name="P:VxSdkNet.ExportEstimate.Size">
            <summary>
Gets or sets the estimated file size of the exported media in kilobytes (KB); will be 0 if
unknown or unavailable.
</summary>
            <value>The estimated file size in kilobytes (KB).</value>
        </member>
        <member name="P:VxSdkNet.ExportEstimate.IsTooLarge">
            <summary>
Gets or sets whether the server was able to estimate the entire requested export.
</summary>
            <value>
                <c>true</c> if the server was unable to estimate the entire export because it was too large
and the <see cref="P:VxSdkNet.ExportEstimate.Size" /> value is a minimum amount and not the actual estimate.
</value>
        </member>
        <member name="M:VxSdkNet.ExportEstimate.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.ExportEstimate">
            <summary>
The ExportEstimate class represents an estimate for an export.
</summary>
        </member>
        <member name="P:VxSdkNet.Discovery.IsInitializing">
            <summary>
Gets whether the system is currently initializing devices.
</summary>
            <value>
                <c>true</c> if the system is currently initializing devices, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Discovery.IsDiscovering">
            <summary>
Gets whether the system is currently discovering devices.
</summary>
            <value>
                <c>true</c> if the system is currently discovering devices, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Discovery.Initiated">
            <summary>
Gets the date and time at which the current discovery attempt was triggered.
</summary>
            <value>
A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the current discovery attempt was
triggered.
</value>
        </member>
        <member name="P:VxSdkNet.Discovery.Initialized">
            <summary>
Gets the number of devices that were successfully initialized in the most recent discovery attempt.
</summary>
            <value>The number of devices that were successfully initialized.</value>
        </member>
        <member name="P:VxSdkNet.Discovery.InitializationErrors">
            <summary>
Gets the number of devices that failed to initialize in the most recent discovery attempt.
</summary>
            <value>The number of devices that failed to initialize.</value>
        </member>
        <member name="P:VxSdkNet.Discovery.Discovered">
            <summary>
Gets the number of devices that were successfully discovered in the most recent discovery attempt.
</summary>
            <value>The number of devices that were successfully discovered.</value>
        </member>
        <member name="M:VxSdkNet.Discovery.TriggerDiscovery(VxSdkNet.DiscoveryRequest)">
            <summary>
Begins discovery and initialization.
</summary>
            <param name="discoveryRequest">The discovery request to trigger.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of triggering device discovery.</returns>
        </member>
        <member name="M:VxSdkNet.Discovery.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Discovery.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Discovery.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Discovery.#ctor(VxSdk.IVxDiscovery*)">
            <summary>
Constructor.
</summary>
            <param name="vxDiscovery">The vx discovery.</param>
        </member>
        <member name="T:VxSdkNet.Discovery">
            <summary>
The Discovery class represents the current status of device discovery.
</summary>
        </member>
        <member name="P:VxSdkNet.UserInfo.PhoneNumbers">
            <summary>
Gets the telephone number(s) for the user.
</summary>
            <value>The telephone number(s) for the user.</value>
        </member>
        <member name="P:VxSdkNet.UserInfo.Note">
            <summary>
Gets supplemental information about the user.
</summary>
            <value>Information about the user.</value>
        </member>
        <member name="P:VxSdkNet.UserInfo.Name">
            <summary>
Gets the friendly name, within the domain, of the user.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.UserInfo.LastName">
            <summary>
Gets the last name of the user.
</summary>
            <value>The last name of user.</value>
        </member>
        <member name="P:VxSdkNet.UserInfo.FirstName">
            <summary>
Gets the first name of the user.
</summary>
            <value>The first name of user.</value>
        </member>
        <member name="P:VxSdkNet.UserInfo.EmployeeId">
            <summary>
Gets the employee identifier associated with the user.
</summary>
            <value>The employee identifier.</value>
        </member>
        <member name="M:VxSdkNet.UserInfo.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.UserInfo.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.UserInfo.#ctor(VxSdk.IVxUserInfo*)">
            <summary>
Constructor.
</summary>
            <param name="vxUserInfo">The vx user info.</param>
        </member>
        <member name="T:VxSdkNet.UserInfo">
            <summary>
The UserInfo class represents general information about a user.
</summary>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.UseSmtps">
            <summary>
Gets or sets whether SMTPS should be used instead of SMTP.
</summary>
            <value>
                <c>true</c> to use SMTPS, <c>false</c> to use SMTP.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.Username">
            <summary>
Gets or sets the username for SMTP access.
</summary>
            <value>The username for SMTP access.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.ToAddress">
            <summary>
Gets or sets the "Mail To" email address.
</summary>
            <value>The "Mail To" email address.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.Timeout">
            <summary>
Gets or sets the timeout in milliseconds.
</summary>
            <value>The timeout in milliseconds.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.SmtpPort">
            <summary>
Gets or sets the SMTP port.
</summary>
            <value>The SMTP port.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.Password">
            <summary>
Gets or sets the password for SMTP access.
</summary>
            <value>The password for SMTP access.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.Host">
            <summary>
Gets or sets the SMTP host.
</summary>
            <value>The SMTP host.</value>
        </member>
        <member name="P:VxSdkNet.SmtpInfo.FromAddress">
            <summary>
Gets or sets the "Mail From" email address.
</summary>
            <value>The "Mail From" email address.</value>
        </member>
        <member name="T:VxSdkNet.SmtpInfo">
            <summary>
The SmtpInfo class represents the SMTP information needed to send an email.
</summary>
        </member>
        <member name="P:VxSdkNet.NewVolumeGroup.Name">
            <summary>
Gets or sets the friendly name of the volume group.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewVolumeGroup.IsArchiveGroup">
            <summary>
Gets or sets whether or not this volume group is an "archive volume group", which will act as storage for the
oldest available data.
</summary>
            <value>
                <c>true</c> to set this volume group an "archive volume group", otherwise <c>false</c>.</value>
        </member>
        <member name="T:VxSdkNet.NewVolumeGroup">
            <summary>
The NewVolumeGroup class represents a new volume group to be created.
</summary>
        </member>
        <member name="P:VxSdkNet.NewVolume.Username">
            <summary>
Gets or sets the username for access to the network path. Note: Ignored if the <see cref="P:VxSdkNet.NewVolume.Path" /> is not a UNC path.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.NewVolume.Path">
            <summary>
Gets or sets the fully qualified Windows directory path.
</summary>
            <value>The directory path.</value>
        </member>
        <member name="P:VxSdkNet.NewVolume.Password">
            <summary>
Gets or sets the password for access to the network path. Note: Ignored if the <see cref="P:VxSdkNet.NewVolume.Path" /> is not a UNC path.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.NewVolume.IsBandwidthReserved">
            <summary>
Gets or sets whether or not this is a NAS volume that shares bandwidth with data streams (bandwidth will be
reserved for NAS operations).
</summary>
            <value>
                <c>true</c> to share bandwidth with data streams, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.NewVolume.Domain">
            <summary>
Gets or sets the domain for the volume network path. Note: Ignored if the <see cref="P:VxSdkNet.NewVolume.Path" /> is not a UNC path.
</summary>
            <value>The domain name.</value>
        </member>
        <member name="P:VxSdkNet.NewVolume.Buffer">
            <summary>
Gets or sets the percentage of the volume to keep free.
</summary>
            <value>The buffer percentage (0 - 1).</value>
        </member>
        <member name="T:VxSdkNet.NewVolume">
            <summary>
The NewVolume class represents a new volume to be created.
</summary>
        </member>
        <member name="P:VxSdkNet.Volume.VolumeGroup">
            <summary>
Gets the volume group that this volume is in, if any.
</summary>
            <value>The volume group if present, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Username">
            <summary>
Gets or sets the username for access to the network path. Note: Ignored if the <see cref="P:VxSdkNet.Volume.Path" /> is not a UNC path.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Used">
            <summary>
Gets the amount of storage in use (in MB).
</summary>
            <value>The amount of storage in use (in MB).</value>
        </member>
        <member name="P:VxSdkNet.Volume.Total">
            <summary>
Gets the total amount of storage present (in MB).
</summary>
            <value>The total amount of storage present (in MB).</value>
        </member>
        <member name="P:VxSdkNet.Volume.Path">
            <summary>
Gets or sets the fully qualified Windows directory path.
</summary>
            <value>The directory path.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Password">
            <summary>
Sets the password for access to the network path. Note: Ignored if the <see cref="P:VxSdkNet.Volume.Path" /> is not a UNC path.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Volume.IsOnline">
            <summary>
Gets whether or not the storage is online and available.
</summary>
            <value>
                <c>true</c> if online, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Volume.IsBandwidthReserved">
            <summary>
Gets or sets whether or not this is a NAS volume that shares bandwidth with data streams (bandwidth will be
reserved for NAS operations).
</summary>
            <value>
                <c>true</c> to share bandwidth with data streams, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Id">
            <summary>
Gets the unique volume identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Domain">
            <summary>
Gets or sets the domain for the volume network path. Note: Ignored if the <see cref="P:VxSdkNet.Volume.Path" /> is not a UNC path.
</summary>
            <value>The domain name.</value>
        </member>
        <member name="P:VxSdkNet.Volume.Buffer">
            <summary>
Gets or sets the percentage of the volume to keep free.
</summary>
            <value>The buffer percentage (0 - 1).</value>
        </member>
        <member name="M:VxSdkNet.Volume.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Volume.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Volume.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Volume.#ctor(VxSdk.IVxVolume*)">
            <summary>
Constructor.
</summary>
            <param name="vxVolume">The vx volume.</param>
        </member>
        <member name="T:VxSdkNet.Volume">
            <summary>
The Volume class represents a storage volume.
</summary>
        </member>
        <member name="P:VxSdkNet.VolumeGroup.Volumes">
            <summary>
Gets the volumes that constitute this volume group.
</summary>
            <value>A <c>List</c> of volumes.</value>
        </member>
        <member name="P:VxSdkNet.VolumeGroup.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.VolumeGroup.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.VolumeGroup.IsArchiveGroup">
            <summary>
Gets or sets whether or not this volume group is an "archive volume group", which will act as storage for the
oldest available data.
</summary>
            <value>
                <c>true</c> to set this volume group as an "archive volume group", otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.VolumeGroup.Id">
            <summary>
Gets the unique volume group identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.VolumeGroup.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.VolumeGroup.GetVolumeRelations(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get all possible volume relations for this volume group (both linked and non-linked). Each linked volume
shall be included in the volume group while each non-linked volume shall be excluded. Note that a volume
may only be linked to 1 volume group.
<para>Available filters: AdvancedQuery, AllTags, AllPrivateTags, Linked.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of related volume resources.</returns>
        </member>
        <member name="M:VxSdkNet.VolumeGroup.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.VolumeGroup.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.VolumeGroup.#ctor(VxSdk.IVxVolumeGroup*)">
            <summary>
Constructor.
</summary>
            <param name="vxVolumeGroup">The vx volume group.</param>
        </member>
        <member name="T:VxSdkNet.VolumeGroup">
            <summary>
The VolumeGroup class represents a group of volumes that can be used together as a storage pool.
</summary>
        </member>
        <member name="P:VxSdkNet.NewUser.PhoneNumbers">
            <summary>
Gets or sets the telephone number(s) for the user.
</summary>
            <value>The telephone number(s) for the user.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.Password">
            <summary>
Gets or sets the user password.
</summary>
            <value>The user password.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.Note">
            <summary>
Gets or sets supplemental information about the user.
</summary>
            <value>Information about the user.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.Name">
            <summary>
Gets or sets the unique users friendly name.
</summary>
            <value>The unique friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.MustChangePassword">
            <summary>
Gets or sets whether the new user will be forced to change their password the first time they log in.
</summary>
            <value>
                <c>true</c> if the user must change its password, <c>false</c> if if not.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.LastName">
            <summary>
Gets or sets the last name of user.
</summary>
            <value>The last name of user.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.IsPasswordExpirationDisabled">
            <summary>
Gets or sets whether password expiration will be disabled for this account or if it will use the global
password expiration setting.
</summary>
            <value>
                <c>true</c> to disable password expiration, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.FirstName">
            <summary>
Gets or sets the first name of user.
</summary>
            <value>The first name of user.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.EmployeeId">
            <summary>
Gets or sets the employee identifier associated with the user.
</summary>
            <value>The employee identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.Email">
            <summary>
Gets or sets the email address of the user.
</summary>
            <value>The email address.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.Domain">
            <summary>
Gets or sets the network domain for this user.
</summary>
            <value>The network domain.</value>
        </member>
        <member name="P:VxSdkNet.NewUser.CanBypassLdap">
            <summary>
Gets or sets whether the user can login to the system using local credentials instead of using LDAP.
</summary>
            <value>
                <c>true</c> to allow using local credentials for login, otherwise <c>false</c>.</value>
        </member>
        <member name="M:VxSdkNet.NewUser.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewUser">
            <summary>
The NewUser class represents a new user.
</summary>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.VxSystemDn">
            <summary>
Gets or sets the site specific LDAP container; unique per VideoXpert site.
</summary>
            <value>The site specific LDAP container.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.VxRootDn">
            <summary>
Gets or sets the LDAP container under which VideoXpert system information for all sites is stored; this
should be the same for all sites.
</summary>
            <value>The LDAP container.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.Username">
            <summary>
Gets or sets the user login name.
</summary>
            <value>The user login name.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.UseLdapUsersAndRoles">
            <summary>
Gets or sets whether or not LDAP will be used to manage users and roles.
</summary>
            <value>
                <c>true</c> to use LDAP user and role management, <c>false</c> to use the VideoXpert system.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.SsoDomain">
            <summary>
Gets or sets the Active Directory/Kerberos domain used for single sign-on.
</summary>
            <value>The single sign-on domain.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.ServerPort">
            <summary>
Gets or sets the port number of the LDAP server.
</summary>
            <value>The port number.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.ServerName">
            <summary>
Gets or sets the hostname or IP address of the LDAP server.
</summary>
            <value>The the hostname or IP address.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.SearchDnPassword">
            <summary>
Gets or sets the password for the superuser DN account in the LDAP directory that performs searches.
</summary>
            <value>The password for the superuser DN account.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.SearchDnAccount">
            <summary>
Gets or sets the superuser DN account in the LDAP directory to use for performing searches there.
</summary>
            <value>The superuser DN account.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.SearchAttributes">
            <summary>
Gets or sets the attributes against which to match the user’s identity/name.
</summary>
            <value>The attributes.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.Password">
            <summary>
Gets or sets the user password.
</summary>
            <value>The user password.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.ObjectClasses">
            <summary>
Gets or sets the LDAP object classes to search for users.
</summary>
            <value>The LDAP object classes.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.IsTwoStageBindingEnabled">
            <summary>
Gets or sets whether or not two stage binding authentication is enabled.
</summary>
            <value>
                <c>true</c> to enable two stage binding authentication, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.IsSsoEnabled">
            <summary>
Gets or sets whether or not single sign-on is enabled.
</summary>
            <value>
                <c>true</c> to enable single sign-on, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.IsServerTlsEnabled">
            <summary>
Gets or sets whether or not SSL/TLS security is enabled for the LDAP server.
</summary>
            <value>
                <c>true</c> to enable SSL/TLS security, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.LdapValidationCredentials.BaseDn">
            <summary>
Gets or sets the location in the LDAP database that will be used to search for and authenticate user entries.
</summary>
            <value>The location in the LDAP database.</value>
        </member>
        <member name="T:VxSdkNet.LdapValidationCredentials">
            <summary>
The LdapValidationCredentials class represents credentials that are used to verify the connection to the LDAP
 server. The information will not be stored.
</summary>
        </member>
        <member name="P:VxSdkNet.Recording.StartTime">
            <summary>
Gets the time at which the recording should begin (may be in the recent past). The recording
<see cref="P:VxSdkNet.Recording.PreRecord" /> and <see cref="P:VxSdkNet.Recording.MaxRecordingTime" /> will reference to this time. Defaults to the time
at which the server processes the request.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the recording should begin.</value>
        </member>
        <member name="P:VxSdkNet.Recording.RecordingType">
            <summary>
Gets the type of this recording which will show up in the corresponding clips.
</summary>
            <value>The recording type.</value>
        </member>
        <member name="P:VxSdkNet.Recording.PreRecord">
            <summary>
Gets the amount of time, in seconds, to record prior to the recording start time.
</summary>
            <value>The time to record prior to the recording start time.</value>
        </member>
        <member name="P:VxSdkNet.Recording.PostRecord">
            <summary>
Gets the amount of time, in seconds, to record after the recording would otherwise be stopped.
</summary>
            <value>The time to record after the recording would otherwise be stopped.</value>
        </member>
        <member name="P:VxSdkNet.Recording.OwnerName">
            <summary>
Gets the name of the user that created this recording.
</summary>
            <value>The owner name.</value>
        </member>
        <member name="P:VxSdkNet.Recording.Name">
            <summary>
Gets the friendly name of the recording which can be used to identify recordings to stop.
</summary>
            <value>The friendly name of the recording.</value>
        </member>
        <member name="P:VxSdkNet.Recording.MaxRecordingTime">
            <summary>
Gets the maximum amount of time, in seconds, to record before stopping.
</summary>
            <value>The maximum recording time.</value>
        </member>
        <member name="P:VxSdkNet.Recording.Id">
            <summary>
Gets the unique recording identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Recording.Framerate">
            <summary>
Gets the framerate to record at.
</summary>
            <value>The framerate.</value>
        </member>
        <member name="P:VxSdkNet.Recording.EndEventSourceType">
            <summary>
Gets the type of resource that the <see cref="P:VxSdkNet.Recording.EndEventSourceId" /> specifies.
</summary>
            <value>The resource type.</value>
        </member>
        <member name="P:VxSdkNet.Recording.EndEventSourceId">
            <summary>
Gets the source ID that will be used to filter <see cref="P:VxSdkNet.Recording.EndEvent" />.
</summary>
            <value>The source ID.</value>
        </member>
        <member name="P:VxSdkNet.Recording.EndEvent">
            <summary>
Gets the situation type that will automatically end the recording when a matching event occurs.
</summary>
            <value>The situation type, if any.</value>
        </member>
        <member name="P:VxSdkNet.Recording.DataSourceId">
            <summary>
Gets the unique identifier of the data source that is being recorded.
</summary>
            <value>The unique identifier of the data source.</value>
        </member>
        <member name="P:VxSdkNet.Recording.DataSource">
            <summary>
Gets the data source that is being recorded.
</summary>
            <value>The data source being recorded.</value>
        </member>
        <member name="M:VxSdkNet.Recording.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Recording.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Recording.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Recording.#ctor(VxSdk.IVxRecording*)">
            <summary>
Constructor.
</summary>
            <param name="vxRecording">The vx recording.</param>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Timed">
            <summary>Time-based (continuous); no event.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Motion">
            <summary>Motion anayltic.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Manual">
            <summary>Manual user initiation.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Event">
            <summary>General system event.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Analytic">
            <summary>Video analytic (non-motion).</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Alarm">
            <summary>Hardware or software alarm.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Recording.RecordingTypes">
            <summary>
Values that represent the type of trigger that caused the recording.
</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingFramerates.Normal">
            <summary>Normal framerate.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingFramerates.Low">
            <summary>Low framerate.</summary>
        </member>
        <member name="F:VxSdkNet.Recording.RecordingFramerates.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Recording.RecordingFramerates">
            <summary>
Values that represent the video framerate level.
</summary>
        </member>
        <member name="T:VxSdkNet.Recording">
            <summary>
The Recording class represents an instance of an active recording (the action, not the recorded clip).
Each recording will cause its specified data source to be recorded by all data storages that the
data source is assigned to.
</summary>
        </member>
        <member name="P:VxSdkNet.Schedule.UseAllDataSources">
            <summary>
Gets or sets a value indicating whether the schedule applies to all data sources.
</summary>
            <value>
                <c>true</c> if this schedule applies to all data sources, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Schedule.ScheduleTriggers">
            <summary>
Gets the schedule triggers associated with this schedule.
</summary>
            <value>The <c>List</c> of schedule triggers associated with this schedule.</value>
        </member>
        <member name="P:VxSdkNet.Schedule.Name">
            <summary>
Gets or sets the friendly name of the schedule.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Schedule.LinkedDataSources">
            <summary>
Gets the data sources associated with this schedule.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.Schedule.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Schedule.Id">
            <summary>
Gets the unique identifier of the schedule.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Schedule.Action">
            <summary>
Gets or sets the action performed when the schedule is active.
</summary>
            <value>The <see cref="T:VxSdkNet.Schedule.Actions">Action</see>.</value>
        </member>
        <member name="M:VxSdkNet.Schedule.Unlink(System.Collections.Generic.List`1{VxSdkNet.DataSource})">
            <summary>
Delete existing data sources from the schedule.
</summary>
            <param name="dataSources">A <c>List</c> containing the data sources to be deleted.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Schedule.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Schedule.Link(System.Collections.Generic.List`1{VxSdkNet.DataSource})">
            <summary>
Add data sources to the schedule.
</summary>
            <param name="dataSources">A <c>List</c> containing the data sources to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Schedule.GetLinkedDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources linked to the schedule using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Schedule.DeleteScheduleTrigger(VxSdkNet.ScheduleTrigger)">
            <summary>
Delete a schedule trigger from the schedule.  This will delete the schedule trigger from any other schedules as well.
</summary>
            <param name="scheduleTrigger">The schedule trigger to delete.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the schedule trigger.</returns>
        </member>
        <member name="M:VxSdkNet.Schedule.AddScheduleTrigger(VxSdkNet.NewScheduleTrigger)">
            <summary>
Add a new schedule trigger to the schedule.
</summary>
            <param name="newScheduleTrigger">The new schedule trigger to add.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the schedule trigger.</returns>
        </member>
        <member name="M:VxSdkNet.Schedule.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Schedule.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Schedule.#ctor(VxSdk.IVxSchedule*)">
            <summary>
Constructor.
</summary>
            <param name="vxSchedule">The vx schedule.</param>
        </member>
        <member name="F:VxSdkNet.Schedule.Actions.Record">
            <summary>Record all resources associated with the schedule.</summary>
        </member>
        <member name="F:VxSdkNet.Schedule.Actions.EventSourceRecord">
            <summary>Record only the resource (associated with the Schedule) that was
the source of the event causing the schedule trigger to activate.</summary>
        </member>
        <member name="F:VxSdkNet.Schedule.Actions.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Schedule.Actions">
            <summary>
Values that represent schedule recording actions.
</summary>
        </member>
        <member name="T:VxSdkNet.Schedule">
            <summary>
The Schedule class represents a recording schedule. A schedule is a group of 0 or more resources associated with a
set of time and/or event based schedule triggers that, when any are active, cause the scheduled action to be performed.
</summary>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.TimeTableId">
            <summary>
Gets or sets the unique identifier of the time table assigned to the schedule trigger, if any.
</summary>
            <value>The unique time table identifier, if any.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.Timeout">
            <summary>
Gets or sets the amount of time, from 1 to 300 seconds, to consider the schedule trigger active immediately after it becomes
active ("duration recording").
</summary>
            <value>The timeout in seconds.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.PreTrigger">
            <summary>
Gets or sets the amount of time, from 0 to 30 seconds, to consider the schedule trigger active prior to when it becomes active
("pre alarm").
</summary>
            <value>The pre trigger time in seconds.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.PostTrigger">
            <summary>
Gets or sets the amount of time, from 0 to 300 seconds, to continue to consider the schedule trigger active when it becomes
inactive ("post alarm").
</summary>
            <value>The post trigger time in seconds.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.InactiveEventSituationType">
            <summary>
Gets or sets the type of event that will cause this schedule trigger to no longer be considered active. If
set, the schedule trigger event state will no longer be considered active. If not set, the schedule trigger
event status will immediately be considered inactive after event occurs.
<para>NOTE: This property is ignored if <see cref="P:VxSdkNet.NewScheduleTrigger.EventSituationType" /> is not set.</para></summary>
            <value>The event situation type.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.Id">
            <summary>
Gets or sets the unique identifier of the schedule trigger.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.Framerate">
            <summary>
Gets or sets the recording framerate level.
</summary>
            <value>The framerate level.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.EventProperties">
            <summary>
Gets or sets the event properties that will activate the schedule.
</summary>
            <value>A <c>List</c> containing the event properties.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.EventSituationType">
            <summary>
Gets or sets the type of event that will activate the schedule trigger. If set, the schedule trigger is
considered an "event" trigger, otherwise it is considered a "timed" trigger. If set, the schedule trigger
only activates when this type of event occurs.
<para>See <see cref="P:VxSdkNet.NewScheduleTrigger.InactiveEventSituationType" /> for information on when the trigger will deactivate.</para></summary>
            <value>The event situation type.</value>
        </member>
        <member name="P:VxSdkNet.NewScheduleTrigger.Action">
            <summary>
Gets or sets the action performed when the schedule trigger activates.
</summary>
            <value>The <see cref="T:VxSdkNet.ScheduleTrigger.Actions">Action</see>.</value>
        </member>
        <member name="M:VxSdkNet.NewScheduleTrigger.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewScheduleTrigger">
            <summary>
The NewScheduleTrigger class represents a new schedule trigger configuration that specifies a time
range and an optional event that together act as a trigger to activate a schedule.
</summary>
        </member>
        <member name="P:VxSdkNet.NewDigitalPtzPreset.Z">
            <summary>
Gets or sets the Z (zoom) coordinate absolute position relative to the 0 position. The 0 position is
minimum zoom while the 100 position is maximum zoom.
</summary>
            <value>The Z coordinate.</value>
        </member>
        <member name="P:VxSdkNet.NewDigitalPtzPreset.Y">
            <summary>
Gets or sets the Y (tilt) coordinate absolute position, in degrees, relative to the (0,0) position The -180
position is bottommost while the 180 position is topmost.
</summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:VxSdkNet.NewDigitalPtzPreset.X">
            <summary>
Gets or sets the X (pan) coordinate absolute position, in degrees, relative to the (0,0) position. The -180
position is leftmost while the 180 position is rightmost.
</summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:VxSdkNet.NewDigitalPtzPreset.Name">
            <summary>
Gets or sets the friendly name of the PTZ preset.
</summary>
            <value>The friendly name of the PTZ preset.</value>
        </member>
        <member name="P:VxSdkNet.NewDigitalPtzPreset.Description">
            <summary>
Gets or sets the friendly description for the new PTZ preset.
</summary>
            <value>The friendly description of the PTZ preset.</value>
        </member>
        <member name="T:VxSdkNet.NewDigitalPtzPreset">
            <summary>
The NewDigitalPtzPreset class represents a new digital PTZ preset.
</summary>
        </member>
        <member name="P:VxSdkNet.Event.Wakeup">
            <summary>
Gets the delay, in seconds, prior to bringing the event to the users attention; typically used for silencing the event.
</summary>
            <value>The delay, in seconds.</value>
        </member>
        <member name="P:VxSdkNet.Event.Time">
            <summary>
Gets the time at which the situation occurred.
</summary>
            <value>The event time.</value>
        </member>
        <member name="P:VxSdkNet.Event.SourceUserName">
            <summary>
Gets the name of the user that was the cause of the situation, if any.
</summary>
            <value>The user name.</value>
        </member>
        <member name="P:VxSdkNet.Event.SourceUser">
            <summary>
Gets the name of the user that was the cause of the situation, if any.
</summary>
            <value>The user name.</value>
        </member>
        <member name="P:VxSdkNet.Event.SourceDeviceName">
            <summary>
Gets the friendly name of the source device.
</summary>
            <value>The friendly name of the source device.</value>
        </member>
        <member name="P:VxSdkNet.Event.SourceDeviceId">
            <summary>
Gets the unique identifier of the device that the situation occurred on.
</summary>
            <value>The unique identifier of the source device.</value>
        </member>
        <member name="P:VxSdkNet.Event.SourceDevice">
            <summary>
Gets the unique identifier of the device that the situation occurred on.
</summary>
            <value>The unique identifier of the source device.</value>
        </member>
        <member name="P:VxSdkNet.Event.SourceClientId">
            <summary>
Gets the client identifier of the client that was the cause of the situation, if any.
</summary>
            <value>The client identifier.</value>
        </member>
        <member name="P:VxSdkNet.Event.SituationType">
            <summary>
Gets the type of the situation that led to the generation of this Event.
</summary>
            <value>The type of the situation.</value>
        </member>
        <member name="P:VxSdkNet.Event.SituationName">
            <summary>
Gets the name of the situation that led to the generation of this event.
</summary>
            <value>The name of the situation.</value>
        </member>
        <member name="P:VxSdkNet.Event.Situation">
            <summary>
Gets the type of the situation that led to the generation of this Event.
</summary>
            <value>The type of the situation.</value>
        </member>
        <member name="P:VxSdkNet.Event.ShouldAudiblyNotify">
            <summary>
Gets a value indicating whether a notification sound should play on supporting clients when an event is received.
</summary>
            <value>
                <c>true</c> if a notification sound should play, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Event.Severity">
            <summary>
Gets the severity of the event, from 1 (highest) to 10 (lowest).
</summary>
            <value>The event severity.</value>
        </member>
        <member name="P:VxSdkNet.Event.Properties">
            <summary>
Gets a list of the properties associated with the event, if any.
</summary>
            <value>The event properties.</value>
        </member>
        <member name="P:VxSdkNet.Event.IsInitial">
            <summary>
Gets a value indicating whether the event is in its initial generated state (its ackState has not been updated).
</summary>
            <value>
                <c>true</c> if the event is in its initial generated state, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Event.Id">
            <summary>
Gets the unique identifier created by the device that generated the event.
</summary>
            <value>The events unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Event.GeneratorDeviceName">
            <summary>
Gets the friendly name of the generator device, if any.
</summary>
            <value>The friendly name of the generator device.</value>
        </member>
        <member name="P:VxSdkNet.Event.GeneratorDeviceId">
            <summary>
Gets the unique identifier of the device that created and injected this
event into the system.
</summary>
            <value>The identifier of the generator device.</value>
        </member>
        <member name="P:VxSdkNet.Event.GeneratorDevice">
            <summary>
Gets the unique identifier of the device that created and injected this
event into the system.
</summary>
            <value>The identifier of the generator device.</value>
        </member>
        <member name="P:VxSdkNet.Event.AckUserName">
            <summary>
Gets the name of the user that set the current <see cref="P:VxSdkNet.Event.AckState" />, if any.
</summary>
            <value>The user name.</value>
        </member>
        <member name="P:VxSdkNet.Event.AckTime">
            <summary>
Gets the time at which the current <see cref="P:VxSdkNet.Event.AckState" /> was set.
</summary>
            <value>The event acknowledgement time.</value>
        </member>
        <member name="P:VxSdkNet.Event.AckState">
            <summary>
Gets the current acknowledgement state of the event.
</summary>
            <value>The current acknowledgement state.</value>
        </member>
        <member name="P:VxSdkNet.Event.AckClientName">
            <summary>
Gets the friendly name of the client that set the current <see cref="P:VxSdkNet.Event.AckState" />, if any.
</summary>
            <value>The friendly name of the client.</value>
        </member>
        <member name="P:VxSdkNet.Event.AckClientId">
            <summary>
Gets the identifier of the client that set the current ackState, if any.
</summary>
            <value>The client identifier.</value>
        </member>
        <member name="M:VxSdkNet.Event.Silence(System.Int32)">
            <summary>
Silence the event for a given amount of time.
</summary>
            <param name="wakeup">The delay, in seconds, to apply prior to the event being brought to
the user’s attention.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Event.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Event.Acknowledge">
            <summary>
Acknowledge the event.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Event.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Event.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Event.#ctor(VxSdk.IVxEvent*)">
            <summary>
Constructor.
</summary>
            <param name="vxEvent">The vx event.</param>
        </member>
        <member name="F:VxSdkNet.Event.AckStates.Silenced">
            <summary>The event has been silenced.</summary>
        </member>
        <member name="F:VxSdkNet.Event.AckStates.NoAckNeeded">
            <summary>No event acknowledgement is needed.</summary>
        </member>
        <member name="F:VxSdkNet.Event.AckStates.AutoAcked">
            <summary>The event is auto-acknowledged.</summary>
        </member>
        <member name="F:VxSdkNet.Event.AckStates.Acked">
            <summary>The event is acknowledged.</summary>
        </member>
        <member name="F:VxSdkNet.Event.AckStates.AckNeeded">
            <summary>The event needs acknowledgement.</summary>
        </member>
        <member name="F:VxSdkNet.Event.AckStates.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Event.AckStates">
            <summary>
Values that represent the current acknowledgement state of an event.
</summary>
        </member>
        <member name="T:VxSdkNet.Event">
            <summary>
The Event class represents an instance of a particular situation that has occurred.
</summary>
        </member>
        <member name="P:VxSdkNet.Situation.TypeOpposite">
            <summary>
Gets the situation type opposite of this situation, if any.
</summary>
            <value>The opposite situation type.</value>
        </member>
        <member name="P:VxSdkNet.Situation.Type">
            <summary>
Gets the situation type.
</summary>
            <value>The situation type.</value>
        </member>
        <member name="P:VxSdkNet.Situation.SourceDeviceTypes">
            <summary>
Gets a list of device types that may be the source of events for this situation.
</summary>
            <value>A <c>List</c> of device types.</value>
        </member>
        <member name="P:VxSdkNet.Situation.SourceDeviceId">
            <summary>
Gets the unique source identifier.
</summary>
            <value>The unique source identifier.</value>
        </member>
        <member name="P:VxSdkNet.Situation.SnoozeIntervals">
            <summary>
Gets or sets the default snooze intervals, in seconds, for a generated event.
</summary>
            <value>A <c>List</c> of snooze intervals in seconds.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ShouldPopupBanner">
            <summary>
Gets or sets whether clients should display a popup notification banner when receiving events of this type.
</summary>
            <value>
                <c>true</c> if a banner should popup, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ShouldNotify">
            <summary>
Gets or sets whether an event generated from the situation shall generate notifications.
</summary>
            <value>
                <c>true</c> if notifications will be sent, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ShouldLog">
            <summary>
Gets or sets whether events generated from this situation shall be persisted or immediately be discarded.
</summary>
            <value>
                <c>true</c> if events will be logged, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ShouldExpandBanner">
            <summary>
Gets or sets whether the notification banner on clients should be expanded by default.
</summary>
            <value>
                <c>true</c> if the banner should be expanded, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ShouldAudiblyNotify">
            <summary>
Gets or sets whether a notification sound should play on supporting clients when an event is received.
</summary>
            <value>
                <c>true</c> if audio should play on event notification, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Situation.Severity">
            <summary>
Gets or sets the severity of the generated event, from 1 (highest) to 10 (lowest).
</summary>
            <value>The event severity.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ServiceType">
            <summary>
Gets the resource type of the service corresponding to the source of this situation, if any.
</summary>
            <value>The service type for the source of this situation.</value>
        </member>
        <member name="P:VxSdkNet.Situation.ServicePropertyId">
            <summary>
Gets the name of the key in the properties map corresponding to the service identifier for the source of this situation, if any.
</summary>
            <value>The service property identifier for the source of this situation.</value>
        </member>
        <member name="P:VxSdkNet.Situation.Notifications">
            <summary>
Gets the notifications configured for this situation.
</summary>
            <value>A <c>List</c> of notifications.</value>
        </member>
        <member name="P:VxSdkNet.Situation.Name">
            <summary>
Gets or sets the situation friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Situation.LinkedDevices">
            <summary>
Gets the devices associated with this situation.
</summary>
            <value>A <c>List</c> of devices.</value>
        </member>
        <member name="P:VxSdkNet.Situation.LinkedDataSources">
            <summary>
Gets the data sources associated with this situation.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.Situation.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Situation.IsAckNeeded">
            <summary>
Gets or sets whether the generated events shall have an initial state of AckNeeded or NoAckNeeded.
</summary>
            <value>
                <c>true</c> if events will require acknowledgement, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Situation.AutoAcknowledge">
            <summary>
Gets or sets the number of seconds after which a generated event state will be set to AutoAcked.
</summary>
            <value>The number of seconds before auto-acknowledgement.</value>
        </member>
        <member name="P:VxSdkNet.Situation.AudiblePlayCount">
            <summary>
Gets or sets the amount of times to play audible notifications.
</summary>
            <value>The amount of times to play audible notifications.</value>
        </member>
        <member name="P:VxSdkNet.Situation.AudibleLoopDelay">
            <summary>
Gets or sets the seconds to wait between audible notifications.
</summary>
            <value>The seconds between audible notifications.</value>
        </member>
        <member name="M:VxSdkNet.Situation.UnLink(VxSdkNet.DataSource)">
            <summary>
Remove data source association from this situation.
</summary>
            <param name="dataSource">The data source to remove association with.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of unlinking the data source.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.UnLink(VxSdkNet.Device)">
            <summary>
Remove device association from this situation.
</summary>
            <param name="device">The device to remove association with.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of unlinking the device.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.SetAudioFile(System.String)">
            <summary>
Sets the custom audio file used by clients for audible notifications. The maximum allowable size
of the file is 5 MB.
</summary>
            <param name="audioFilePath">The local path to the audio file.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the audio file.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.RemoveNotification(VxSdkNet.Notification)">
            <summary>
Removes a notification from the list of notifications that this situation serves.
</summary>
            <param name="notification">The notification to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the notification.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.Link(VxSdkNet.Device)">
            <summary>
Associate a device with this situation.
</summary>
            <param name="device">The device to associate the situation with.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of linking the device.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.Link(VxSdkNet.DataSource)">
            <summary>
Associate a data source with this situation.
</summary>
            <param name="dataSource">The data source to associate the situation with.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of linking the data source.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.GetNotifications(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the notifications configured for this situation using an optional collection filter.
<para>Available filters: ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of notifications.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.GetLinkedDevices(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the devices associated with this situation using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of devices.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.GetLinkedDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources associated with this situation using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.GetAudioFileUri">
            <summary>
Gets the custom audio file uri, if any.
</summary>
            <returns>The audio file uri.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.DeleteAudioFile">
            <summary>
Deletes the custom audio file.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the custom audio file.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.AddNotification(VxSdkNet.NewNotification)">
            <summary>
Add a new notification to the list of notifications that this situation serves.
</summary>
            <param name="newNotification">The new notification to be added to the situation.</param>
            <returns>
                <c>nullptr</c> if it fails, else the new notification.</returns>
        </member>
        <member name="M:VxSdkNet.Situation.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Situation.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Situation.#ctor(VxSdk.IVxSituation*)">
            <summary>
Constructor.
</summary>
            <param name="vxSituation">The situation.</param>
        </member>
        <member name="T:VxSdkNet.Situation">
            <summary>
The Situation class represents a particular situation configuration that specifies
how corresponding events shall be generated and handled when the situation is detected.
</summary>
        </member>
        <member name="P:VxSdkNet.NewNotification.Users">
            <summary>
Gets or sets the users that should receive this notification.
</summary>
            <value>A <c>List</c> of users.</value>
        </member>
        <member name="P:VxSdkNet.NewNotification.Roles">
            <summary>
Gets or sets the roles that should receive this notification.
</summary>
            <value>A <c>List</c> of roles.</value>
        </member>
        <member name="M:VxSdkNet.NewNotification.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewNotification">
            <summary>
The NewNotification class represents a new notification.
</summary>
        </member>
        <member name="P:VxSdkNet.Notification.Users">
            <summary>
Gets the users that this notification serves.
</summary>
            <value>A <c>List</c> of users.</value>
        </member>
        <member name="P:VxSdkNet.Notification.UserIds">
            <summary>
Gets the user ids that this notification serves.
</summary>
            <value>A <c>List</c> of user ids.</value>
        </member>
        <member name="P:VxSdkNet.Notification.Roles">
            <summary>
Gets the roles that this notification serves.
</summary>
            <value>A <c>List</c> of roles.</value>
        </member>
        <member name="P:VxSdkNet.Notification.RoleIds">
            <summary>
Gets the role ids that this notification serves.
</summary>
            <value>A <c>List</c> of role ids.</value>
        </member>
        <member name="P:VxSdkNet.Notification.Id">
            <summary>
Gets the unique notification identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.Notification.RemoveUser(VxSdkNet.User)">
            <summary>
Remove a user from the list of users that this notification serves.
</summary>
            <param name="user">The user to remove from this notification.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the user.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.RemoveRole(VxSdkNet.Role)">
            <summary>
Remove a role from the list of roles that this notification serves.
</summary>
            <param name="role">The role to remove from this notification.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the role.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.GetUsers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the users that this notification serves using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, Internal, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the users on the system.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.GetRoles(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the roles that this notification serves using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, Internal, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the roles on the system.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.AddUser(VxSdkNet.User)">
            <summary>
Add a user to the list of users that this notification serves.
</summary>
            <param name="user">The user to add to this notification.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the user.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.AddRole(VxSdkNet.Role)">
            <summary>
Add a role to the list of roles that this notification serves.
</summary>
            <param name="role">The role to add to this notification.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the role.</returns>
        </member>
        <member name="M:VxSdkNet.Notification.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Notification.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Notification.#ctor(VxSdk.IVxNotification*)">
            <summary>
Constructor.
</summary>
            <param name="vxNotification">The vx notification.</param>
        </member>
        <member name="T:VxSdkNet.Notification">
            <summary>
The Notification class represents a particular notification configuration for a situation.
</summary>
        </member>
        <member name="P:VxSdkNet.MonitorWall.Name">
            <summary>
Gets or sets the friendly name of this monitor wall.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.MonitorWall.Monitors">
            <summary>
Gets the monitors associated with this monitor wall.
</summary>
            <value>A <c>List</c> of associated monitors.</value>
        </member>
        <member name="P:VxSdkNet.MonitorWall.MonitorPositions">
            <summary>
Gets or sets the monitor positions for this monitor wall.
</summary>
            <value>A <c>List</c> of monitor positions.</value>
        </member>
        <member name="P:VxSdkNet.MonitorWall.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.MonitorWall.Id">
            <summary>
Gets the unique monitor wall identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.MonitorWall.SetMonitorSelection(System.Int32,System.Int32,VxSdkNet.MonitorSelection.CellInputMode)">
            <summary>
Updates the monitor/cell selection (for this user) on the monitor wall.
<para>
Note that each user can independently select a different monitor/cell for remote-control of a monitor wall.
</para></summary>
            <param name="cellIndex">Index of the monitor cell to select within the monitor (1-based). If 0, the current monitor cell selection (if any) will be cleared.</param>
            <param name="monitorIndex">Index of the monitor to select within a monitor wall (1-based). If 0, the current monitor selection (if any) will be cleared.</param>
            <param name="inputMode">Input mode for the selected monitor cell. If <see cref="F:VxSdkNet.MonitorSelection.CellInputMode.Unknown" />, the current input mode will be used.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorWall.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorWall.GetMonitorSelections">
            <summary>
Gets the monitor selections associated with this monitor wall.
</summary>
            <returns>A <c>List</c> of monitor selections.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorWall.GetMonitors(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the monitors associated with this monitor wall using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, Number.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of associated monitors.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorWall.ClearMonitorSelection">
            <summary>
Clears the current monitor selection from this monitor wall.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorWall.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.MonitorWall.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.MonitorWall.#ctor(VxSdk.IVxMonitorWall*)">
            <summary>
Constructor.
</summary>
            <param name="vxMonitorWall">The vx monitor wall.</param>
        </member>
        <member name="T:VxSdkNet.MonitorWall">
            <summary>
The MonitorWall class represents a group of monitors.
</summary>
        </member>
        <member name="P:VxSdkNet.MonitorSelection.Owner">
            <summary>
Gets or sets the name of the user that owns this monitor selection.
</summary>
            <value>The owner name.</value>
        </member>
        <member name="P:VxSdkNet.MonitorSelection.Monitor">
            <summary>
Gets or sets the index of the selected monitor.
</summary>
            <value>The monitor index.</value>
        </member>
        <member name="P:VxSdkNet.MonitorSelection.LastModified">
            <summary>
Gets or sets the time of the last modification for this monitor selection.
</summary>
            <value>The last modified time.</value>
        </member>
        <member name="P:VxSdkNet.MonitorSelection.InputMode">
            <summary>
Gets or sets the input mode of the selected cell.
</summary>
            <value>The input mode.</value>
        </member>
        <member name="P:VxSdkNet.MonitorSelection.Cell">
            <summary>
Gets or sets the index of the selected cell within the selected monitor.
</summary>
            <value>The cell index.</value>
        </member>
        <member name="M:VxSdkNet.MonitorSelection.#ctor(VxSdk.VxMonitorSelection*)">
            <summary>
Constructor.
</summary>
            <param name="vxMonitorSelection">The vx monitor selection.</param>
        </member>
        <member name="F:VxSdkNet.MonitorSelection.CellInputMode.Ptz">
            <summary>PTZ mode.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorSelection.CellInputMode.Playback">
            <summary>Playback mode.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorSelection.CellInputMode.Navigation">
            <summary>Navigation mode.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorSelection.CellInputMode.DigitalPtz">
            <summary>Digital PTZ mode.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorSelection.CellInputMode.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.MonitorSelection.CellInputMode">
            <summary>
Values that represent the input mode for a monitor cell.
</summary>
        </member>
        <member name="T:VxSdkNet.MonitorSelection">
            <summary>
The MonitorSelection class represents information for a selected monitor/cell within a monitor wall.
</summary>
        </member>
        <member name="P:VxSdkNet.MonitorPosition.Position">
            <summary>
Gets or sets the position of the monitor.
</summary>
            <value>The position of the monitor.</value>
        </member>
        <member name="P:VxSdkNet.MonitorPosition.MonitorId">
            <summary>
Gets or sets the unique identifier of the monitor that this position represents.
</summary>
            <value>The unique identifier of the monitor.</value>
        </member>
        <member name="M:VxSdkNet.MonitorPosition.#ctor(VxSdk.VxMonitorPosition*)">
            <summary>
Constructor.
</summary>
            <param name="vxMonitorPosition">The vx monitor position.</param>
        </member>
        <member name="M:VxSdkNet.MonitorPosition.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.MonitorPosition">
            <summary>
The MonitorPosition class represents a monitor position that describes where a monitor resides in a
coordinate plane (specifically the IV quadrant of a Cartesian plane where 0,0 is the top left point).
</summary>
        </member>
        <member name="P:VxSdkNet.NewAnalyticSession.Source">
            <summary>
Gets or sets the RTSP URI to use as the source for the analytic session. This value can be used instead
of <see cref="P:VxSdkNet.NewAnalyticSession.DataEncodingId" /> to determine which stream to use. This value takes priority over
the <see cref="P:VxSdkNet.NewAnalyticSession.DataEncodingId" /> if both values are provided. Note: This field is required when sending
to a <c>Device::Types::AnalyticServer</c>.
</summary>
            <value>The source RTSP URI.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticSession.Id">
            <summary>
Gets or sets the unique identifier of the analytic session. The server will generate this value if not supplied.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticSession.DeviceId">
            <summary>
Gets or sets the unique identifier of the Device hosting this analytic session. The device must be of
type <c>Device::Types::AnalyticServer</c>.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticSession.DataSourceId">
            <summary>
Gets or sets the unique identifier of the video data source for this analytic session. The <see cref="P:VxSdkNet.NewAnalyticSession.Source" /> should
be pointing to an RTSP stream on this data source.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticSession.DataEncodingId">
            <summary>
Gets or sets the unique identifier specifying which data encoding to use as a source. This value can be used instead
of <see cref="P:VxSdkNet.NewAnalyticSession.Source" /> to determine which stream to use.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="T:VxSdkNet.NewAnalyticSession">
            <summary>
The NewAnalyticSession class represents a request for the creation of a new analytic session.
</summary>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.Source">
            <summary>
Gets or sets the RTSP URI to use as the source for the analytic session.
</summary>
            <value>The RTSP URI.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.Id">
            <summary>
Gets the unique analytic session identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.HostDevice">
            <summary>
Gets the device that hosts this analytic session.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.DataSource">
            <summary>
Gets the associated video data source.
</summary>
            <value>The associated video data source.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.DataEncodingId">
            <summary>
Gets or sets the unique identifier specifying which data encoding to use as a source. This value
can be used instead of <see cref="P:VxSdkNet.AnalyticSession.Source" /> to determine which stream to use.
</summary>
            <value>The data encoding unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticSession.AnalyticConfig">
            <summary>
Gets the analytic configuration for this session.
</summary>
            <value>The analytic configuration.</value>
        </member>
        <member name="M:VxSdkNet.AnalyticSession.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.AnalyticSession.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.AnalyticSession.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.AnalyticSession.#ctor(VxSdk.IVxAnalyticSession*)">
            <summary>
Constructor.
</summary>
            <param name="vxAnalyticSession">The vx analytic session.</param>
        </member>
        <member name="T:VxSdkNet.AnalyticSession">
            <summary>
The AnalyticSession class represents an analytic session for a single video data source on an analytic server.
</summary>
        </member>
        <member name="P:VxSdkNet.Export.Stream">
            <summary>
Gets the export stream for this export.
</summary>
            <value>The export stream for this export.</value>
        </member>
        <member name="P:VxSdkNet.Export.StatusReason">
            <summary>
Gets the optional reason for the current status of this export; typically
used to express the reason for a failure.
</summary>
            <value>The current export status reason.</value>
        </member>
        <member name="P:VxSdkNet.Export.Status">
            <summary>
Gets the current status of the export.
</summary>
            <value>The current export status.</value>
        </member>
        <member name="P:VxSdkNet.Export.SecondsRemaining">
            <summary>
Gets the estimated time remaining, in seconds, until the export is 100
percent complete.  If the export is complete this value will be 0.
</summary>
            <value>The seconds remaining.</value>
        </member>
        <member name="P:VxSdkNet.Export.PercentComplete">
            <summary>
Gets a value from 0 to 100. This specifies how close the export is to
completion. 0 indicates that the export has not been triggered; 100 indicates
that the export is complete.
</summary>
            <value>The percent complete.</value>
        </member>
        <member name="P:VxSdkNet.Export.Password">
            <summary>
Gets the plain text password for this export if it's protected.
</summary>
            <remarks>Note: Only available when logged in as the built-in admin user.</remarks>
            <value>The password if available, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.Export.OwnerName">
            <summary>
Gets the name of the user that has created this export, if any.
</summary>
            <value>The owner name.</value>
        </member>
        <member name="P:VxSdkNet.Export.Owner">
            <summary>
Gets the user that has created this export, if any.
</summary>
            <value>The user that owns this export.</value>
        </member>
        <member name="P:VxSdkNet.Export.Name">
            <summary>
Gets the friendly name of the export.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Export.IsTrashed">
            <summary>
Gets a value indicating whether this export has been trashed.
</summary>
            <value>
                <c>true</c> if this export has been trashed, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Export.IsProtected">
            <summary>
Gets a value indicating whether the export data is signed and encrypted.
</summary>
            <value>
                <c>true</c> if this export is protected, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Export.Initiated">
            <summary>
Gets the date and time at which the Export was requested.
</summary>
            <value>The <c>DateTime</c> when the export was initiated.</value>
        </member>
        <member name="P:VxSdkNet.Export.Id">
            <summary>
Gets the unique export identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Export.Format">
            <summary>
Gets the format of the export data.
</summary>
            <value>The export <see cref="T:VxSdkNet.Export.Formats">Format</see>.</value>
        </member>
        <member name="P:VxSdkNet.Export.FileSizeKb">
            <summary>
Gets the file size of the exported data in kilobytes (kB).
</summary>
            <value>The file size.</value>
        </member>
        <member name="P:VxSdkNet.Export.ExportPath">
            <summary>
Gets the storage path that the export data is saved to. May be empty if the servers default storage
location is being used.
</summary>
            <value>The export storage path.</value>
        </member>
        <member name="P:VxSdkNet.Export.ExportClips">
            <summary>
Gets the clips associated with this export.
</summary>
            <value>The <c>List</c> of clips contained in the export.</value>
        </member>
        <member name="P:VxSdkNet.Export.DataUri">
            <summary>
Gets the URI to the exported data.  It will only be present if
the exported data is completed and available for download.
</summary>
            <value>The data URI.</value>
        </member>
        <member name="P:VxSdkNet.Export.Completed">
            <summary>
Gets the date and time at which the triggered export completed the export operation.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> when the export completed.</value>
        </member>
        <member name="M:VxSdkNet.Export.TrashExport">
            <summary>
Trashes this export. Trashed exports may be removed by the server if additional space is needed.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of trashing the export.</returns>
        </member>
        <member name="M:VxSdkNet.Export.RestoreExport">
            <summary>
Restores this export to a non-trashed state.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of restoring the export.</returns>
        </member>
        <member name="M:VxSdkNet.Export.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Export.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Export.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Export.#ctor(VxSdk.IVxExport*)">
            <summary>
Constructor.
</summary>
            <param name="vxExport">The vx export.</param>
        </member>
        <member name="F:VxSdkNet.Export.StateReasons.ExportStorageUnavailable">
            <summary>The export storage is unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Export.StateReasons.ExportStorageUnauthenticated">
            <summary>The export storage is unauthenticated.</summary>
        </member>
        <member name="F:VxSdkNet.Export.StateReasons.ExportStorageFull">
            <summary>The export storage is full.</summary>
        </member>
        <member name="F:VxSdkNet.Export.StateReasons.ExportDataUnretrievable">
            <summary>The export data is unretrievable.</summary>
        </member>
        <member name="F:VxSdkNet.Export.StateReasons.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Export.StateReasons">
            <summary>
Values that represent the reason for the current status of an export.
</summary>
        </member>
        <member name="F:VxSdkNet.Export.States.Successful">
            <summary>The export has completed successfully.</summary>
        </member>
        <member name="F:VxSdkNet.Export.States.Pending">
            <summary>The export is queued to start.</summary>
        </member>
        <member name="F:VxSdkNet.Export.States.Failed">
            <summary>The export has failed.</summary>
        </member>
        <member name="F:VxSdkNet.Export.States.Exporting">
            <summary>The export is in progress.</summary>
        </member>
        <member name="F:VxSdkNet.Export.States.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Export.States">
            <summary>
Values that represent status of an export.
</summary>
        </member>
        <member name="F:VxSdkNet.Export.Formats.MkvZip">
            <summary>MKV file(s) contained withing a zip file.</summary>
        </member>
        <member name="F:VxSdkNet.Export.Formats.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Export.Formats">
            <summary>
Values that represent the format of exported data.
</summary>
        </member>
        <member name="T:VxSdkNet.Export">
            <summary>
The Export class represents an exported data set that is archived within the system.
</summary>
        </member>
        <member name="P:VxSdkNet.DbBackups.MaxBackupsToKeep">
            <summary>
Gets or sets the maximum number of backups to keep in the backup directory before overwriting the oldest.
</summary>
            <value>The maximum number of backups to keep.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.DatabaseBackups">
            <summary>
Gets the current collection of database backups.
</summary>
            <value>A <c>List</c> of database backups.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.BackupTime">
            <summary>
Gets or sets the time at which daily automatic database backups will begin.
</summary>
            <value>The time to run daily backups, from 00:00:00 to 23:59:59.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.BackupPathUsername">
            <summary>
Gets or sets the username used to access the backup storage location path.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.BackupPathPassword">
            <summary>
Sets the password used to access the backup storage location path.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.BackupPath">
            <summary>
Gets or sets the optional UNC network path to use for alternate backup storage (instead of the server default location).
</summary>
            <value>The UNC network path.</value>
        </member>
        <member name="P:VxSdkNet.DbBackups.BackupInterval">
            <summary>
Gets or sets the number of days between automatic database backups.
</summary>
            <value>The number of days between automatic database backups.</value>
        </member>
        <member name="M:VxSdkNet.DbBackups.ValidateBackupPath(System.String,System.String,System.String)">
            <summary>
Gets a value indicating whether a network storage path is available and valid as a backup storage.
</summary>
            <param name="backupPath">The UNC network storage path.</param>
            <param name="backupPathUsername">The username for access to the backup path, if any.</param>
            <param name="backupPathPassword">The password for access to the backup path, if any.</param>
            <returns>
                <c>true</c> if valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.DbBackups.TriggerBackup">
            <summary>
Initiates a new unscheduled database backup.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of initiating the backup.</returns>
        </member>
        <member name="M:VxSdkNet.DbBackups.DeleteDatabaseBackup(VxSdkNet.DbBackup)">
            <summary>
Delete a database backup. If the backup is in progress, it shall be halted first.
</summary>
            <param name="dbBackupItem">The database backup to be deleted.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the database backup.</returns>
        </member>
        <member name="M:VxSdkNet.DbBackups.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DbBackups.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DbBackups.#ctor(VxSdk.IVxDbBackups*)">
            <summary>
Constructor.
</summary>
            <param name="vxDbBackups">The vx database backups.</param>
        </member>
        <member name="T:VxSdkNet.DbBackups">
            <summary>
The DbBackups class represents a collection of database backups and provides database backup and control.
</summary>
        </member>
        <member name="P:VxSdkNet.DbBackup.StatusReason">
            <summary>
Gets the optional reason for the current status of this backup; typically used to express the reason
for a failure.
</summary>
            <value>The status reason.</value>
        </member>
        <member name="P:VxSdkNet.DbBackup.Status">
            <summary>
Gets the current status of this backup.
</summary>
            <value>The backup status.</value>
        </member>
        <member name="P:VxSdkNet.DbBackup.Initiated">
            <summary>
Gets the date and time at which this backup was initiated.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which this backup was initiated.</value>
        </member>
        <member name="P:VxSdkNet.DbBackup.Id">
            <summary>
Gets the unique identifier of this database backup.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DbBackup.Completed">
            <summary>
Gets the date and time at which this backup completed.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which this backup completed.</value>
        </member>
        <member name="M:VxSdkNet.DbBackup.Restore">
            <summary>
Restore this backup to the database.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of restoring the backup.</returns>
        </member>
        <member name="M:VxSdkNet.DbBackup.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DbBackup.Halt">
            <summary>
Halts the current backup operation that is in progress, if any.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of halting the backup.</returns>
        </member>
        <member name="M:VxSdkNet.DbBackup.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DbBackup.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DbBackup.#ctor(VxSdk.IVxDbBackup*)">
            <summary>
Constructor.
</summary>
            <param name="vxDbBackup">The vx database backup.</param>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatusReason.ShadowCopyMountFailure">
            <summary>Shadow copy mount failed.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatusReason.ShadowCopyCreationFailure">
            <summary>Shadow copy creation failed.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatusReason.BackupStorageUnavailable">
            <summary>Backup storage is unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatusReason.BackupStorageUnauthenticated">
            <summary>Backup storage unauthenticated.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatusReason.BackupStorageFull">
            <summary>Backup storage is full.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatusReason.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DbBackup.BackupStatusReason">
            <summary>
Values that represent the reason for the current status of a backup.
</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatus.Successful">
            <summary>Backup was successful.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatus.InProgress">
            <summary>Backup is in progress.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatus.Halted">
            <summary>Backup was halted.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatus.Failed">
            <summary>Backup has failed.</summary>
        </member>
        <member name="F:VxSdkNet.DbBackup.BackupStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DbBackup.BackupStatus">
            <summary>
Values that represent the status of a backup.
</summary>
        </member>
        <member name="T:VxSdkNet.DbBackup">
            <summary>
The DbBackup class represents a database backup.
</summary>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Version">
            <summary>
Gets the feature version.
</summary>
            <value>The feature version.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Used">
            <summary>
Gets the amount of the allowable count that is currently used by commissions.
</summary>
            <value>The amount of the allowable count that is currently used by commissions.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Name">
            <summary>
Gets the name of the feature.
</summary>
            <value>The name of the feature.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.LicensableDevices">
            <summary>
Gets the supported device types that may be licensed for use with this feature.
</summary>
            <value>A <c>List</c> of supported device types.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.IsPending">
            <summary>
Gets a value indicating whether this is a "pending" feature, which does not enable any device
functionality, or a normal feature that does.
</summary>
            <value>
                <c>true</c> if this is a "pending" feature, <c>false</c> if a normal feature.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Installation">
            <summary>
Gets the date and time at which the feature was installed on the host.
</summary>
            <value>The date and time at which the feature was installed on the host.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Id">
            <summary>
Gets the unique identifier of the feature.
</summary>
            <value>The unique identifier of the feature.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Expiration">
            <summary>
Gets the date and time at which the feature will expire.
</summary>
            <value>The date and time at which the feature will expire.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.Count">
            <summary>
Gets the allowable commissions count.
</summary>
            <value>The allowable commissions count.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.CommissionedDevices">
            <summary>
Gets the devices that have been commissioned for this feature.
</summary>
            <value>A <c>List</c> of devices that have been commissioned for this feature.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.CapabilityRequestEndpoint">
            <summary>
Gets the URI to the download location of the capability request.
</summary>
            <value>The capability request endpoint, if available.</value>
        </member>
        <member name="P:VxSdkNet.LicenseFeature.ActivationId">
            <summary>
Gets the activation identifier.
</summary>
            <value>The activation identifier.</value>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.UnLink(VxSdkNet.Device)">
            <summary>
Removes this license feature from the given device, releasing it for reuse (decrements the used count).
</summary>
            <param name="device">The device to remove this license feature from.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of unlinking the device.</returns>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.Link(VxSdkNet.Device)">
            <summary>
Applies this license feature to a device; doing so will consume an available count from the feature.
</summary>
            <param name="device">The device to apply this license feature to.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of linking the device.</returns>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.GetCommissionedDevices(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the devices that have been commissioned for this feature using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of devices that have been commissioned for this feature.</returns>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.LicenseFeature.#ctor(VxSdk.IVxLicenseFeature*)">
            <summary>
Constructor.
</summary>
            <param name="vxLicenseFeature">The vx license feature.</param>
        </member>
        <member name="T:VxSdkNet.LicenseFeature">
            <summary>
The LicenseFeature class represents device functionality that is enabled with a valid license.
</summary>
        </member>
        <member name="P:VxSdkNet.Report.Type">
            <summary>
Gets the type of this report.
</summary>
            <value>The type of this report.</value>
        </member>
        <member name="P:VxSdkNet.Report.Time">
            <summary>
Gets the date and time at which the report was generated.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the report was generated.</value>
        </member>
        <member name="P:VxSdkNet.Report.Template">
            <summary>
Gets the report template that this report was generated from.
</summary>
            <value>The report template.</value>
        </member>
        <member name="P:VxSdkNet.Report.StatusReason">
            <summary>
Gets the optional reason for the current generation status of this report; typically used to express the reason
for a failure.
</summary>
            <value>The reason for the current generation status of this report.</value>
        </member>
        <member name="P:VxSdkNet.Report.Status">
            <summary>
Gets the current generation status of this report.
</summary>
            <value>The current generation status of this report.</value>
        </member>
        <member name="P:VxSdkNet.Report.ReportEndpoint">
            <summary>
Gets the URI to the download location of the actual report data. This endpoint will only be present if the
report has been successfully generated and is available for download.
</summary>
            <value>The report endpoint, if available.</value>
        </member>
        <member name="P:VxSdkNet.Report.Owner">
            <summary>
Gets the owner of the report. If present, indicates that this resource is owned by a user (it is private)
and this is their username. If not present, indicates that this resource is not owned (it is public).
</summary>
            <value>The owner of the report.</value>
        </member>
        <member name="P:VxSdkNet.Report.Name">
            <summary>
Gets the friendly name of the report.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Report.Id">
            <summary>
Gets the unique identifier of the report.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Report.Format">
            <summary>
Gets the format of the contents of the report.
</summary>
            <value>The report format.</value>
        </member>
        <member name="M:VxSdkNet.Report.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Report.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Report.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Report.#ctor(VxSdk.IVxReport*)">
            <summary>
Constructor.
</summary>
            <param name="vxReport">The vx report.</param>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatusReason.Unauthorized">
            <summary>The report could not be generated because the user is not authorized to access the data required to create the report.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatusReason.StorageUnavailable">
            <summary>The configured storage location is unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatusReason.StorageUnauthenticated">
            <summary>The configured storage location cannot be used because the configured credentials are invalid.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatusReason.StorageFull">
            <summary>The configured storage location is full.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatusReason.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Report.ReportStatusReason">
            <summary>
Values that represent the reason for a report failing to be generated.
</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatus.Successful">
            <summary>The report was successfully generated.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatus.Pending">
            <summary>The report is queued to be generated.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatus.InProgress">
            <summary>The report is being generated.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatus.Failed">
            <summary>The report failed to be generated.</summary>
        </member>
        <member name="F:VxSdkNet.Report.ReportStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Report.ReportStatus">
            <summary>
Values that represent the status of a report.
</summary>
        </member>
        <member name="T:VxSdkNet.Report">
            <summary>
The Report class represents a generated (or generating) system report.
</summary>
        </member>
        <member name="P:VxSdkNet.TimeTable.WeeklyTimeRanges">
            <summary>
Gets or sets the active time ranges for this time table.
</summary>
            <value>The active time ranges.</value>
        </member>
        <member name="P:VxSdkNet.TimeTable.StartDate">
            <summary>
Gets or sets the start date of the time table, it will be considered active after this date.
</summary>
            <value>The start date.</value>
        </member>
        <member name="P:VxSdkNet.TimeTable.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.TimeTable.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.TimeTable.Id">
            <summary>
Gets the unique bookmark identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.TimeTable.EndDate">
            <summary>
Gets or sets the end date of the time table, it will be considered inactive after this date.
</summary>
            <value>The end date.</value>
        </member>
        <member name="M:VxSdkNet.TimeTable.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.TimeTable.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.TimeTable.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.TimeTable.#ctor(VxSdk.IVxTimeTable*)">
            <summary>
Constructor.
</summary>
            <param name="vxTimeTable">The vx time table.</param>
        </member>
        <member name="T:VxSdkNet.TimeTable">
            <summary>
The TimeTable class represents a named set of time ranges.
</summary>
        </member>
        <member name="P:VxSdkNet.ExportStream.StatusReason">
            <summary>
Gets the optional reason for the current status of this export stream.
</summary>
            <value>The current export stream status reason.</value>
        </member>
        <member name="P:VxSdkNet.ExportStream.Status">
            <summary>
Gets the current status of the export stream.
</summary>
            <value>The current export stream status.</value>
        </member>
        <member name="P:VxSdkNet.ExportStream.SecondsRemaining">
            <summary>
Gets the estimated time remaining, in seconds, until the export is 100% ready to be streamed. This
 will only be populated when the status is preparing or ready.
</summary>
            <value>The seconds remaining.</value>
        </member>
        <member name="P:VxSdkNet.ExportStream.PercentComplete">
            <summary>
Gets a value from 0 to 100. This specifies how close stream preparation is to completion, where 100
indicates that stream is ready for streaming. This will only be populated when the status is
preparing, failed, or ready. In a failed state, this represents how much progress was made (if any)
prior to the failure.
</summary>
            <value>The percent complete.</value>
        </member>
        <member name="P:VxSdkNet.ExportStream.ExportStreamClips">
            <summary>
Gets the export stream clips, which provide streaming playback information for each export clip.
</summary>
            <value>The <c>List</c> of export stream clips.</value>
        </member>
        <member name="M:VxSdkNet.ExportStream.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.ExportStream.Prepare">
            <summary>
Begins or re-starts preparation for streaming. May only be performed when the export stream needs
preparation or has failed.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of preparing the export stream.</returns>
        </member>
        <member name="M:VxSdkNet.ExportStream.Halt">
            <summary>
Halts any pending stream preparation. May only be performed when the export stream is being prepared.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of halting the export stream preparation.</returns>
        </member>
        <member name="M:VxSdkNet.ExportStream.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ExportStream.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ExportStream.#ctor(VxSdk.IVxExportStream*)">
            <summary>
Constructor.
</summary>
            <param name="vxExportStream">The vx export stream.</param>
        </member>
        <member name="F:VxSdkNet.ExportStream.StateReasons.ExportTempStorageFull">
            <summary>The temporary export storage is full.</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.StateReasons.ExportDataUnretrievable">
            <summary>The export data is unretrievable.</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.StateReasons.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.ExportStream.StateReasons">
            <summary>
Values that represent the reason for the current status of an export stream.
</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.States.Ready">
            <summary>The export stream is ready.</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.States.Preparing">
            <summary>The export stream is being prepared.</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.States.NeedsPreparation">
            <summary>The export stream needs preparation.</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.States.Failed">
            <summary>The export stream preparation has failed.</summary>
        </member>
        <member name="F:VxSdkNet.ExportStream.States.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.ExportStream.States">
            <summary>
Values that represent status of an export stream.
</summary>
        </member>
        <member name="T:VxSdkNet.ExportStream">
            <summary>
The ExportStream class represents streaming access information for an export resource.
</summary>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.VideoUrl">
            <summary>
Gets or sets the RTSP URL for streaming the video data of the export.
</summary>
            <value>The video RTSP URL.</value>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.VideoDataSourceId">
            <summary>
Gets or sets the unique identifier of the video data source that the exported clip came from.
</summary>
            <value>The unique identifier of the video data source.</value>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.StartTime">
            <summary>
Gets or sets the time at which the export media begins.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.RenderType">
            <summary>
Gets or sets the type of rendering required for the media data delivered by this interface. Clients
can utilize this to create the correct rendering pipeline. 
</summary>
            <value>The rendering type.</value>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.EndTime">
            <summary>
Gets or sets the time at which the export media ends.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.AudioUrl">
            <summary>
Gets or sets the RTSP URL for streaming the audio data of the export.
</summary>
            <value>The audio RTSP URL.</value>
        </member>
        <member name="P:VxSdkNet.ExportStreamClip.AudioDataSourceId">
            <summary>
Gets or sets the unique identifier of the audio data source that the exported clip came from.
</summary>
            <value>The unique identifier of the audio data source.</value>
        </member>
        <member name="M:VxSdkNet.ExportStreamClip.#ctor(VxSdk.VxExportStreamClip*)">
            <summary>
Constructor.
</summary>
            <param name="vxExportStreamClip">The vx export stream clip.</param>
        </member>
        <member name="T:VxSdkNet.ExportStreamClip">
            <summary>
The ExportStreamClip class represents streaming access to a single clip within an export.
</summary>
        </member>
        <member name="P:VxSdkNet.Gap.StartTime">
            <summary>
Gets the start time of the gap.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> of the start of the gap.</value>
        </member>
        <member name="P:VxSdkNet.Gap.ReasonData">
            <summary>
Gets a list of additional reason data, if any.
</summary>
            <value>Additional reason data.</value>
        </member>
        <member name="P:VxSdkNet.Gap.Reason">
            <summary>
Gets the reason for this gap.
</summary>
            <value>The reason for this gap.</value>
        </member>
        <member name="P:VxSdkNet.Gap.GapFillingStatus">
            <summary>
Gets the status of filling this gap.
</summary>
            <value>The status.</value>
        </member>
        <member name="P:VxSdkNet.Gap.EndTime">
            <summary>
Gets the end time of the gap.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> of the end of the gap.</value>
        </member>
        <member name="P:VxSdkNet.Gap.DataStorageId">
            <summary>
Gets the unique identifier of the data storage with the gap.
</summary>
            <value>The unique identifier of the data storage with the gap.</value>
        </member>
        <member name="P:VxSdkNet.Gap.DataSourceId">
            <summary>
Gets the unique identifier of the gapped data source.
</summary>
            <value>The unique identifier of the gapped data source.</value>
        </member>
        <member name="P:VxSdkNet.Gap.DataStorage">
            <summary>
Gets the data storage with the gap.
</summary>
            <value>The data storage with the gap.</value>
        </member>
        <member name="P:VxSdkNet.Gap.DataSource">
            <summary>
Gets the data source associated with this gap.
</summary>
            <value>The associated data source.</value>
        </member>
        <member name="M:VxSdkNet.Gap.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Gap.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Gap.#ctor(VxSdk.IVxGap*)">
            <summary>
Constructor.
</summary>
            <param name="vxGap">The vx gap.</param>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.WriteError">
            <summary>Write error.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.TransportChanged">
            <summary>Transport changed.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.TimeJump">
            <summary>Time jump.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.StreamSourceChanged">
            <summary>Stream source changed.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.StreamLoss">
            <summary>Stream loss.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.StorageOffline">
            <summary>Storage device offline.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.NotSupported">
            <summary>Not supported.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.CameraOffline">
            <summary>Camera offline.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapReasons.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Gap.GapReasons">
            <summary>
Values that represent the reason for a gap.
</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapFillerStatus.Unavailable">
            <summary>Gap filler status is unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapFillerStatus.Pending">
            <summary>Gap filling is pending.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapFillerStatus.Failed">
            <summary>Failed to fill the gap.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapFillerStatus.Disabled">
            <summary>Gap filler is disabled.</summary>
        </member>
        <member name="F:VxSdkNet.Gap.GapFillerStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Gap.GapFillerStatus">
            <summary>
Values that represent the status of gap filling.
</summary>
        </member>
        <member name="T:VxSdkNet.Gap">
            <summary>
The Gap class represents a span of time that a clip should exist for a particular data source on a particular data storage but
for some reason the clip does not exist. Not all instances of gaps may be detectable by the system and thus may not be reported.
</summary>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.Severity">
            <summary>
Gets or sets the severity value for events generated from this analytic behavior, from 1 (highest) to 10 (lowest).
If set, overrides the corresponding situation severity.
</summary>
            <value>The severity value.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.ObjectWrongWayZone">
            <summary>
Gets or sets the object wrong way zone data used to configure analytics of <see cref="P:VxSdkNet.NewAnalyticBehavior.BehaviorType" /> is set
to <see cref="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectWrongWay" />.
</summary>
            <value>The object wrong way zone.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.ObjectInZone">
            <summary>
Gets or sets the object in zone data used to configure analytics of <see cref="P:VxSdkNet.NewAnalyticBehavior.BehaviorType" /> is set
to <see cref="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectInZone" />.
</summary>
            <value>The object in zone.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.ObjectType">
            <summary>
Gets or sets the type of object this analytic pertains to.
</summary>
            <value>The analytic object type.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.ObjectLineCounter">
            <summary>
Gets or sets the object line counter data used when <see cref="P:VxSdkNet.NewAnalyticBehavior.BehaviorType" /> is set to
<see cref="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectLineCounter" />.
</summary>
            <value>The object line counter.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.Name">
            <summary>
Gets or sets the friendly name of the analytic behavior.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.IsEnabled">
            <summary>
Gets or sets whether or not this analytic behavior is enabled.
</summary>
            <value>
                <c>true</c> if enabled, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.Id">
            <summary>
Gets or sets the unique identifier of the analytic behavior. The server will generate this value if not supplied.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticBehavior.BehaviorType">
            <summary>
Gets or sets the type of analytic behavior being performed.
</summary>
            <value>The analytic behavior type.</value>
        </member>
        <member name="T:VxSdkNet.NewAnalyticBehavior">
            <summary>
The NewAnalyticBehavior class represents a request for the creation of a new analytic behavior.
</summary>
        </member>
        <member name="P:VxSdkNet.Bookmark.Time">
            <summary>
Gets the date and time at which the point of interest occurred.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the point of interest occurred.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.Lock">
            <summary>
Gets the lock configuration for this bookmark.
</summary>
            <value>The lock configuration.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.Id">
            <summary>
Gets the unique bookmark identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.GroupId">
            <summary>
Gets the unique bookmark group identifier.  Typically used to identify related bookmarks (such as
those bookmarking the same time on audio and video).
</summary>
            <value>The unique bookmark group identifier.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.Description">
            <summary>
Gets or sets the friendly description of the bookmark.
</summary>
            <value>The friendly description.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.DataSourceId">
            <summary>
Gets the unique identifier of the associated data source.
</summary>
            <value>The unique identifier of the associated data source.</value>
        </member>
        <member name="P:VxSdkNet.Bookmark.DataSource">
            <summary>
Gets the data source associated with this bookmark.
</summary>
            <value>The associated data source.</value>
        </member>
        <member name="M:VxSdkNet.Bookmark.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Bookmark.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Bookmark.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Bookmark.#ctor(VxSdk.IVxBookmark*)">
            <summary>
Constructor.
</summary>
            <param name="vxBookmark">The vx bookmark.</param>
        </member>
        <member name="T:VxSdkNet.Bookmark">
            <summary>
The Bookmark class represents a point in time of interest with reference to a particular data source.
</summary>
        </member>
        <member name="P:VxSdkNet.BookmarkLock.StartTime">
            <summary>
Gets or sets the time at which the bookmark lock begins. Must be after <see cref="P:VxSdkNet.BookmarkLock.EndTime">EndTime</see>.
</summary>
            <value>The time at which the bookmark lock begins.</value>
        </member>
        <member name="P:VxSdkNet.BookmarkLock.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.BookmarkLock.IsEnabled">
            <summary>
Gets or sets whether or not this bookmark lock is enabled.
</summary>
            <value>
                <c>true</c> if locked, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.BookmarkLock.EndTime">
            <summary>
Gets or sets the time at which the bookmark lock ends. Must be after <see cref="P:VxSdkNet.BookmarkLock.StartTime">StartTime</see>.
</summary>
            <value>The time at which the bookmark lock ends.</value>
        </member>
        <member name="M:VxSdkNet.BookmarkLock.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.BookmarkLock.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.BookmarkLock.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.BookmarkLock.#ctor(VxSdk.IVxBookmarkLock*)">
            <summary>
Constructor.
</summary>
            <param name="vxBookmarkLock">The vx bookmark lock.</param>
        </member>
        <member name="T:VxSdkNet.BookmarkLock">
            <summary>
The BookmarkLock class represents the lock configuration of a bookmark. An enabled lock will prevent
the media it locks from being garbage collected on recorders.
</summary>
        </member>
        <member name="P:VxSdkNet.ExportClip.StartTime">
            <summary>
Gets the time at which the export media begins.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.ExportClip.Id">
            <summary>
Gets the unique identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.ExportClip.EndTime">
            <summary>
Gets the time at which the export media ends.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.ExportClip.DataSourceId">
            <summary>
Gets the data source unique identifier of the export media.
</summary>
            <value>The unique identifier of the data source.</value>
        </member>
        <member name="M:VxSdkNet.ExportClip.#ctor(VxSdk.IVxExportClip*)">
            <summary>
Constructor.
</summary>
            <param name="vxClip">The vx clip.</param>
        </member>
        <member name="T:VxSdkNet.ExportClip">
            <summary>
The ExportClip class represents an individual range of media data belonging to an
Export. This data shall be exported when the Export is triggered.
</summary>
        </member>
        <member name="P:VxSdkNet.Monitor.ResolutionY">
            <summary>
Gets or sets the vertical resolution.
</summary>
            <value>The vertical resolution.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.ResolutionX">
            <summary>
Gets or sets the horizontal resolution.
</summary>
            <value>The horizontal resolution.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.SyncTimeAnchor">
            <summary>
Gets the wall clock time at which the data playback should begin.
</summary>
            <value>The time.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.SyncTime">
            <summary>
Gets or sets the time at which the data should initially seek to (does not track time as the data plays).
</summary>
            <value>The seek time.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.SyncSpeed">
            <summary>
Gets or sets the play speed of the display data.
</summary>
            <value>The play speed.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.Number">
            <summary>
Gets or sets the number used to designate this monitor.
</summary>
            <value>The monitor number.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.Name">
            <summary>
Gets or sets the friendly name of this monitor.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.MonitorCells">
            <summary>
Gets the cells currently active on this monitor.
</summary>
            <value>A <c>List</c> of the currently active cells.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.MaximizedCell">
            <summary>
Gets or sets the index of the full screen monitor cell (-1 if no cells are maximized).
</summary>
            <value>The index of the cell.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.Layout">
            <summary>
Gets or sets the current layout for this monitor.
</summary>
            <value>The cell layout.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.Id">
            <summary>
Gets the unique monitor identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.HostDevice">
            <summary>
Gets the device that hosts this monitor.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.Monitor.AvailableLayouts">
            <summary>
Gets the layouts available for this monitor.
</summary>
            <value>A <c>List</c> of the available layouts.</value>
        </member>
        <member name="M:VxSdkNet.Monitor.SetResolution(System.Int32,System.Int32)">
            <summary>
Sets the ResolutionX and ResolutionY properties.
</summary>
            <param name="resolutionX">The new ResolutionX value.</param>
            <param name="resolutionY">The new ResolutionY value.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Monitor.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Monitor.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Monitor.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Monitor.#ctor(VxSdk.IVxMonitor*)">
            <summary>
Constructor.
</summary>
            <param name="vxMonitor">The vx monitor.</param>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout8x8">
            <summary>A 8x8 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout6x6">
            <summary>A 6x6 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.MonitorWall">
            <summary>A monitor wall layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1plus4wide">
            <summary>A 1 plus 4 wide monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1plus4tall">
            <summary>A 1 plus 4 tall monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1plus1plus4">
            <summary>A 1 plus 1 plus 4 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout8plus2">
            <summary>A 8 plus 2 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout12plus1">
            <summary>A 12 plus 1 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1plus7">
            <summary>A 1 plus 7 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1plus5">
            <summary>A 1 plus 5 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout3plus4">
            <summary>A 3 plus 4 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout2plus8">
            <summary>A 2 plus 8 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1plus12">
            <summary>A 1 plus 12 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout5x5">
            <summary>A 5x5 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout4x4">
            <summary>A 4x4 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout4x3">
            <summary>A 4x3 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout3x3">
            <summary>A 3x3 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout3x2">
            <summary>A 3x2 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout2x3">
            <summary>A 2x3 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout2x2">
            <summary>A 2x2 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout2x1">
            <summary>A 2x1 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1x2">
            <summary>A 1x2 monitor layout.</summary>
        </member>
        <member name="F:VxSdkNet.Monitor.Layouts.CellLayout1x1">
            <summary>A 1x1 monitor layout.</summary>
        </member>
        <member name="T:VxSdkNet.Monitor.Layouts">
            <summary>
Values that represent the layouts of a monitor.
</summary>
        </member>
        <member name="T:VxSdkNet.Monitor">
            <summary>
The Monitor class represents a display for view data (typically video).
</summary>
        </member>
        <member name="P:VxSdkNet.MonitorCell.TimeAnchor">
            <summary>
Gets the wall clock time at which the data playback should begin.
</summary>
            <value>The time.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.Time">
            <summary>
Gets or sets the time at which the data should seek to (does not track time as the data plays).
</summary>
            <value>The seek time.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.Speed">
            <summary>
Gets or sets the play speed of the display data.
</summary>
            <value>The speed.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.Rotation">
            <summary>
Gets or sets the rotation applied to the video.
</summary>
            <value>The rotation.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.LocationZ">
            <summary>
Gets or sets the Z location of the immersive position.
</summary>
            <value>The Z location.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.LocationY">
            <summary>
Gets or sets the Y location of the crop bounds or immersive position.
</summary>
            <value>The Y location.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.LocationX">
            <summary>
Gets or sets the X location of the crop bounds or immersive position.
</summary>
            <value>The X location.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.IsStatisticsOverlayEnabled">
            <summary>
Gets or sets whether or not the statistics overlay is enabled.
</summary>
            <value>
                <c>true</c> to enable the statistics overlay, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.IsInSync">
            <summary>
Gets or sets whether or not the cell is part of the monitor's sync group.
</summary>
            <value>
                <c>true</c> to join the sync group, <c>false</c> to leave.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.IsAnalyticsOverlayEnabled">
            <summary>
Gets or sets whether or not the analytics overlay is enabled.
</summary>
            <value>
                <c>true</c> to enable the analytics overlay, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.Index">
            <summary>
Gets the unique index of this cell based on its position within the current layout.
</summary>
            <value>The index.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.DataSourceId">
            <summary>
Gets or sets the unique identifier of the data source that this cell shall display.
</summary>
            <value>The unique identifier of the data source.</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.CropWidth">
            <summary>
Gets or sets the width of the crop bounds expressed as a percentage (0-1).
</summary>
            <value>The width as a percentage (e.g. 0.5 for 50% of the video frame width).</value>
        </member>
        <member name="P:VxSdkNet.MonitorCell.CropHeight">
            <summary>
Gets or sets the height of the crop bounds expressed as a percentage (0-1).
</summary>
            <value>The height as a percentage (e.g. 0.5 for 50% of the video frame height).</value>
        </member>
        <member name="M:VxSdkNet.MonitorCell.SetLocation(System.Int32,System.Int32,System.Int32)">
            <summary>
Sets the X, Y and Z locations of the crop bounds or immersive position.
</summary>
            <param name="x">The x location.</param>
            <param name="y">The y location.</param>
            <param name="z">The z location.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the location.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorCell.SetCropBounds(System.Single,System.Single)">
            <summary>
Sets the height and width of the crop bounds applied to the video.
</summary>
            <param name="height">The height as a percentage (0-1).</param>
            <param name="width">The width as a percentage (0-1).</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the crop bounds.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorCell.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorCell.GoToLive">
            <summary>
Sets the position of the display data to live.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of going to live.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorCell.Disconnect">
            <summary>
Removes the active data source from this cell.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the active data source.</returns>
        </member>
        <member name="M:VxSdkNet.MonitorCell.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.MonitorCell.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.MonitorCell.#ctor(VxSdk.IVxMonitorCell*)">
            <summary>
Constructor.
</summary>
            <param name="vxMonitorCell">The monitor cell.</param>
        </member>
        <member name="F:VxSdkNet.MonitorCell.RotationType.Rotate270">
            <summary>270 degrees.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorCell.RotationType.Rotate180">
            <summary>180 degrees.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorCell.RotationType.Rotate90">
            <summary>90 degrees.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorCell.RotationType.Rotate0">
            <summary>0 degrees.</summary>
        </member>
        <member name="F:VxSdkNet.MonitorCell.RotationType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.MonitorCell.RotationType">
            <summary>
Values that represent rotation types (in 90 degree increments).
</summary>
        </member>
        <member name="T:VxSdkNet.MonitorCell">
            <summary>
The MonitorCell class represents a single viewport, hosted on a monitor, that can play media from a data source.
</summary>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Type">
            <summary>
Gets or sets the type of the report that this template represents.
</summary>
            <value>The report type.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.StorageLocation">
            <summary>
Gets or sets the network storage location to export the report data to. Ignored if <see cref="P:VxSdkNet.ReportTemplate.Recurrence" /> is not set.
</summary>
            <value>The network storage location.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.RecurrenceTime">
            <summary>
Gets the date and time at which the point of interest occurred.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the point of interest occurred.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Recurrence">
            <summary>
Gets or sets the days of the week to automatically generate a report from this template. Ignored if
<see cref="P:VxSdkNet.ReportTemplate.RecurrenceTime" /> is not set.
</summary>
            <value>The days of the week to generate a report.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Owner">
            <summary>
Gets the unique identifier of the associated data source.
</summary>
            <value>The unique identifier of the associated data source.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Language">
            <summary>
Gets or sets the language to use when creating the report.
</summary>
            <value>The language to use when creating the report.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Interval">
            <summary>
Gets or sets the time interval that is used to track data in the report (days, hours, etc).
</summary>
            <value>The time interval.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Id">
            <summary>
Gets the unique identifier of the associated data source.
</summary>
            <value>The unique identifier of the associated data source.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Format">
            <summary>
Gets the unique identifier of the associated data source.
</summary>
            <value>The unique identifier of the associated data source.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Filters">
            <summary>
Gets or sets the list of report filters to use to filter the contents of the report.
</summary>
            <value>The list of report filters.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Fields">
            <summary>
Gets or sets the ordered list of report fields available to include in the report.
</summary>
            <value>The the ordered list of report fields.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.EndTime">
            <summary>
Gets the date and time at which the point of interest occurred.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the point of interest occurred.</value>
        </member>
        <member name="P:VxSdkNet.ReportTemplate.Duration">
            <summary>
Gets or sets the duration of time, in hours, extending back from <see cref="P:VxSdkNet.ReportTemplate.EndTime" /> to limit collected report data
to. If 0, there is no limit.
</summary>
            <value>The duration of time, in hours.</value>
        </member>
        <member name="M:VxSdkNet.ReportTemplate.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.ReportTemplate.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ReportTemplate.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ReportTemplate.#ctor(VxSdk.IVxReportTemplate*)">
            <summary>
Constructor.
</summary>
            <param name="vxReportTemplate">The vx reportTemplate.</param>
        </member>
        <member name="T:VxSdkNet.ReportTemplate">
            <summary>
The ReportTemplate class represents a template for an available report type that may be created.
</summary>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Type">
            <summary>
Gets or sets the type of the report that this template represents.
</summary>
            <value>The report type.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.StorageLocation">
            <summary>
Gets or sets the network storage location to export the report data to. Ignored if <see cref="P:VxSdkNet.NewReportTemplate.Recurrence" /> is not set.
</summary>
            <value>The network storage location.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.RecurrenceTime">
            <summary>
Gets or sets the time at which to perform automatic report generation on given recur days, from 00:00:00 to 23:59:59.
Ignored if <see cref="P:VxSdkNet.NewReportTemplate.Recurrence" /> is not set.
</summary>
            <value>The automatic generation time.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Recurrence">
            <summary>
Gets or sets the days of the week to automatically generate a report from this template. Ignored if
<see cref="P:VxSdkNet.NewReportTemplate.RecurrenceTime" /> is not set.
</summary>
            <value>The days of the week to generate a report.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Name">
            <summary>
Gets or sets friendly name of the report template.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Language">
            <summary>
Gets or sets the language to use when creating the report.
</summary>
            <value>The language to use when creating the report.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Interval">
            <summary>
Gets or sets the time interval that is used to track data in the report (days, hours, etc).
</summary>
            <value>The time interval.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Format">
            <summary>
Gets or sets the desired format for the contents of the report.
</summary>
            <value>The format.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Filters">
            <summary>
Gets or sets the list of report filters to use to filter the contents of the report.
</summary>
            <value>The list of report filters.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Fields">
            <summary>
Gets or sets the ordered list of report fields available to include in the report.
</summary>
            <value>The the ordered list of report fields.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.EndTime">
            <summary>
Gets or sets the end time at which the collected report data is limited to. If not specified, report data will be
collected up to the current time at which the report is generated.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.NewReportTemplate.Duration">
            <summary>
Gets or sets the duration of time, in hours, extending back from <see cref="P:VxSdkNet.NewReportTemplate.EndTime" /> to limit collected report data
to. If 0, there is no limit.
</summary>
            <value>The duration of time, in hours.</value>
        </member>
        <member name="M:VxSdkNet.NewReportTemplate.#ctor(VxSdk.VxNewReportTemplate*)">
            <summary>
Constructor.
</summary>
            <param name="vxNewReportTemplate">The vx new report template.</param>
        </member>
        <member name="M:VxSdkNet.NewReportTemplate.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.UserAction">
            <summary>A report about user-related events.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.User">
            <summary>A report about users.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.SystemStatus">
            <summary>A report about the health of the system.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.Storage">
            <summary>A report about data storages.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.Role">
            <summary>A report about roles.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.RecordingGap">
            <summary>A report about gaps.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.LineCount">
            <summary>A report containing analytic line counting data from data sources.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.Event">
            <summary>A report about events.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.Device">
            <summary>A report about devices.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.CameraRoleAccess">
            <summary>A report about data sources accessibility by each role.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.Camera">
            <summary>A report about data sources.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.ReportType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.NewReportTemplate.ReportType">
            <summary>
Values that represent report types.
</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Turkish">
            <summary>Turkish language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Spanish">
            <summary>Spanish language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Russian">
            <summary>Russian language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Romanian">
            <summary>Romanian language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Portuguese">
            <summary>Portuguese language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Polish">
            <summary>Polish language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Korean">
            <summary>Korean language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Japanese">
            <summary>Japanese language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Italian">
            <summary>Italian language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Hungarian">
            <summary>Hungarian language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.German">
            <summary>German language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.French">
            <summary>French language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.English">
            <summary>English language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Czech">
            <summary>Czech language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Croatian">
            <summary>Croatian language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Chinese">
            <summary>Chinese language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Bulgarian">
            <summary>Bulgarian language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Arabic">
            <summary>Arabic language.</summary>
        </member>
        <member name="F:VxSdkNet.NewReportTemplate.VxLanguage.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.NewReportTemplate.VxLanguage">
            <summary>
Values that represent languages supported by VideoXpert.
</summary>
        </member>
        <member name="T:VxSdkNet.NewReportTemplate">
            <summary>
The NewReportTemplate class represents a new report template to be created.
</summary>
        </member>
        <member name="P:VxSdkNet.TimeRange.StartTime">
            <summary>
Gets or sets the time at which this range begins (inclusive).
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.TimeRange.EndTime">
            <summary>
Gets or sets the time at which this range ends (inclusive).
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.TimeRange.Day">
            <summary>
Gets or sets the day of the week that this time range applies to.
</summary>
            <value>The day of the week.</value>
        </member>
        <member name="M:VxSdkNet.TimeRange.#ctor(VxSdk.VxTimeRange*)">
            <summary>
Constructor.
</summary>
            <param name="vxTimeRange">The time range.</param>
        </member>
        <member name="M:VxSdkNet.TimeRange.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Sunday">
            <summary>Sunday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Saturday">
            <summary>Saturday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Friday">
            <summary>Friday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Thursday">
            <summary>Thursday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Wednesday">
            <summary>Wednesday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Tuesday">
            <summary>Tuesday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Monday">
            <summary>Monday.</summary>
        </member>
        <member name="F:VxSdkNet.TimeRange.DayOfWeek.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.TimeRange.DayOfWeek">
            <summary>
Values that represent days of the week.
</summary>
        </member>
        <member name="T:VxSdkNet.TimeRange">
            <summary>
The TimeRange class represents a range of time, specified by three mandatory fields.  If the start time
is greater than the end time, the range will be inactive.
</summary>
        </member>
        <member name="P:VxSdkNet.ReportFilter.Type">
            <summary>
Gets or sets the resource type.
</summary>
            <value>The resource type.</value>
        </member>
        <member name="P:VxSdkNet.ReportFilter.FilterIds">
            <summary>
Gets or sets the list of unique identifiers to filter by (based on type). For instance, if the type is a
data source, this will be the list of data source IDs to limit the report contents to.
</summary>
            <value>The list of resource IDs to filter.</value>
        </member>
        <member name="M:VxSdkNet.ReportFilter.#ctor(VxSdk.VxReportFilter*)">
            <summary>
Constructor.
</summary>
            <param name="vxReportFilter">The vx report filter.</param>
        </member>
        <member name="M:VxSdkNet.ReportFilter.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.User">
            <summary>A user report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.Situation">
            <summary>A situation report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.Role">
            <summary>A role report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.Device">
            <summary>A device report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.DataStorage">
            <summary>A data storage report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.DataSource">
            <summary>A data source report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.AnalyticBehavior">
            <summary>An analytic behavior report filter.</summary>
        </member>
        <member name="F:VxSdkNet.ReportFilter.ReportFilterType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.ReportFilter.ReportFilterType">
            <summary>
Values that represent a type of resource to filter by in a report.
</summary>
        </member>
        <member name="T:VxSdkNet.ReportFilter">
            <summary>
The ReportFilter class represents a filter within a report.
</summary>
        </member>
        <member name="P:VxSdkNet.ReportField.Type">
            <summary>
Gets or sets the report field type of this field or field group.
</summary>
            <value>The report field type.</value>
        </member>
        <member name="P:VxSdkNet.ReportField.Subfields">
            <summary>
Gets or sets the list of report field subfields. If not empty, indicates that this is a field group.
</summary>
            <value>The list of report field subfields, if any.</value>
        </member>
        <member name="P:VxSdkNet.ReportField.Name">
            <summary>
Gets or sets the friendly name of this field or field group.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.ReportField.IsEnabled">
            <summary>
Gets or sets whether or not to include this field in the report.
</summary>
            <value>
                <c>true</c> to include this field in the report; <c>false</c> to omit it.</value>
        </member>
        <member name="M:VxSdkNet.ReportField.#ctor(VxSdk.VxReportField*)">
            <summary>
Constructor.
</summary>
            <param name="vxReportField">The vx report field.</param>
        </member>
        <member name="M:VxSdkNet.ReportField.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserRoleNames">
            <summary>The user role names report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserPhoneNumber">
            <summary>The user phone number report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserPasswordExpiration">
            <summary>The user password expiration report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserNote">
            <summary>The user note report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserName">
            <summary>The user name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserLastName">
            <summary>The user last name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserId">
            <summary>The user id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserFirstName">
            <summary>The user first name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.UserEmployeeId">
            <summary>The user employee id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemNumVideoDatasources">
            <summary>The system num video data sources report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemNumUsers">
            <summary>The system num users report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemNumDevices">
            <summary>The system num devices report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemNumDatastorages">
            <summary>The system num data storages report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemNumAudioDatasources">
            <summary>The system num audio data sources report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemName">
            <summary>The system name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SystemId">
            <summary>The system id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.StatusServiceState">
            <summary>The status service state report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.StatusRtsp">
            <summary>The status rtsp report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.StatusHttp">
            <summary>The status http report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.SituationName">
            <summary>The situation name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.RoleName">
            <summary>The role name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.RoleId">
            <summary>The role id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PropertyOther">
            <summary>The property other report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PropertyMods">
            <summary>The property mods report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PropertyIds">
            <summary>The property ids report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PrivilegeRestricted">
            <summary>The privilege restricted report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PrivilegePriority">
            <summary>The privilege priority report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PrivilegePermission">
            <summary>The privilege permission report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionSysRecording">
            <summary>The permission system recording report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionSurveilVideoRecord">
            <summary>The permission surveillance video record report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionSurveilVideoPtzLock">
            <summary>The permission surveillance video ptz lock report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionSurveilVideoPtz">
            <summary>The permission surveillance video ptz report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionSurveilVideo">
            <summary>The permission surveillance video report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionSuperPtzpresets">
            <summary>The permission super ptz presets report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionInvestClipsMarksLocks">
            <summary>The permission invest clips marks locks report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionInvestClipsMarks">
            <summary>The permission invest clips marks report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionInvestClips">
            <summary>The permission invest clips report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.PermissionDevSettings">
            <summary>The permission dev settings report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterType">
            <summary>The line counter type report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterStartTime">
            <summary>The line counter start time report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterOutCountCorrection">
            <summary>The line counter out count correction report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterOutCount">
            <summary>The line counter out count report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterName">
            <summary>The line counter name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterInCountCorrection">
            <summary>The line counter in count correction report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterInCount">
            <summary>The line counter in count report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterEndTime">
            <summary>The line counter end time report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterCountCorrection">
            <summary>The line counter count correction report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.LineCounterCount">
            <summary>The line counter count report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.GapStart">
            <summary>The gap start report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.GapReason">
            <summary>The gap reason report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.GapFillerStatus">
            <summary>The gap filler status report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.GapEnd">
            <summary>The gap end report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.FieldGroupStreamConfiguration">
            <summary>The field group stream configuration report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.FieldGroupPrivileges">
            <summary>The field group privileges report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.FieldGroupCameraAssignments">
            <summary>The field group camera assignments report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.FieldGroup">
            <summary>The field group report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventTime">
            <summary>The event time report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventSourceUserName">
            <summary>The event source user name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventSourceDeviceName">
            <summary>The event source device name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventSourceDeviceId">
            <summary>The event source device id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventSourceClientId">
            <summary>The event source client id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventSituationType">
            <summary>The event situation type report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventSeverity">
            <summary>The event severity report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventId">
            <summary>The event id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventAckUser">
            <summary>The event ack user report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventAckTime">
            <summary>The event ack time report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventAckState">
            <summary>The event ack state report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventAckClientName">
            <summary>The event ack client name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.EventAckClientId">
            <summary>The event ack client id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceVersion">
            <summary>The device version report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceVendor">
            <summary>The device vendor report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceType">
            <summary>The device type report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceState">
            <summary>The device state report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceSerial">
            <summary>The device serial report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DevicePort">
            <summary>The device port report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceName">
            <summary>The device name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceModel">
            <summary>The device model report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceIp">
            <summary>The device ip report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceId">
            <summary>The device id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceHostname">
            <summary>The device hostname report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DeviceCommissioned">
            <summary>The device commissioned report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatastorageType">
            <summary>The data storage type report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatastorageRetention">
            <summary>The data storage retention report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatastorageName">
            <summary>The data storage name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatastorageId">
            <summary>The data storage id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatastorageFailover">
            <summary>The data storage failover report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceType">
            <summary>The data source type report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceState">
            <summary>The data source state report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceRecording">
            <summary>The data source recording report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceNumber">
            <summary>The data source number report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceName">
            <summary>The data source name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceIp">
            <summary>The data source ip report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.DatasourceId">
            <summary>The data source id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.ConfiguredMaxRetention">
            <summary>The configured max retention report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.CameraStreamResolution">
            <summary>The camera stream resolution report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.CameraStreamFramerate">
            <summary>The camera stream framerate report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.CameraStreamFormat">
            <summary>The camera stream format report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.CameraStreamEncodingId">
            <summary>The camera stream encoding id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.CameraStreamBitrate">
            <summary>The camera stream bitrate report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.AlarmInputName">
            <summary>The alarm input name report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.AlarmInputId">
            <summary>The alarm input id report field.</summary>
        </member>
        <member name="F:VxSdkNet.ReportField.ReportFieldType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.ReportField">
            <summary>
The ReportField class represents a field or field group within a report.
</summary>
        </member>
        <member name="P:VxSdkNet.User.Tags">
            <summary>
Gets the tags currently assigned to this user.
</summary>
            <value>A <c>List</c> of assigned tags.</value>
        </member>
        <member name="P:VxSdkNet.User.Roles">
            <summary>
Gets the roles currently assigned to this user.
</summary>
            <value>A <c>List</c> of assigned roles.</value>
        </member>
        <member name="P:VxSdkNet.User.PhoneNumbers">
            <summary>
Gets or sets the telephone number(s) for the user.
</summary>
            <value>The telephone number(s) for the user.</value>
        </member>
        <member name="P:VxSdkNet.User.PasswordExpiration">
            <summary>
Gets the time at which the user’s password will expire.
</summary>
            <value>The password experation date.</value>
        </member>
        <member name="P:VxSdkNet.User.Note">
            <summary>
Gets or sets supplemental information about the user.
</summary>
            <value>Information about the user.</value>
        </member>
        <member name="P:VxSdkNet.User.Name">
            <summary>
Gets or sets the friendly name, within the domain, of the user.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.User.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.User.LastName">
            <summary>
Gets or sets the last name of user.
</summary>
            <value>The last name of user.</value>
        </member>
        <member name="P:VxSdkNet.User.Id">
            <summary>
Gets the unique identifier of the user.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.User.FirstName">
            <summary>
Gets or sets the first name of user.
</summary>
            <value>The first name of user.</value>
        </member>
        <member name="P:VxSdkNet.User.EmployeeId">
            <summary>
Gets or sets the employee identifier associated with the user.
</summary>
            <value>The employee identifier.</value>
        </member>
        <member name="P:VxSdkNet.User.Email">
            <summary>
Gets or sets the email address of the user.
</summary>
            <value>The email address.</value>
        </member>
        <member name="P:VxSdkNet.User.Domain">
            <summary>
Gets or sets the network domain for this user.
</summary>
            <value>The network domain.</value>
        </member>
        <member name="P:VxSdkNet.User.DataObjects">
            <summary>
Gets all private data objects owned by this user and all public data objects. Other user’s private data
objects will not be returned.
</summary>
            <value>A <c>List</c> of data objects.</value>
        </member>
        <member name="P:VxSdkNet.User.AccountState">
            <summary>
Gets or sets the state of the user account, either enabled or disabled.
</summary>
            <value>The state of the user account.</value>
        </member>
        <member name="P:VxSdkNet.User.Account">
            <summary>
Gets the user account configuration for this user.
</summary>
            <value>The user account.</value>
        </member>
        <member name="M:VxSdkNet.User.SetPassword(System.String,System.Boolean)">
            <summary>
Submit a request for a password change.
</summary>
            <param name="newPassword">The new password.</param>
            <param name="mustChangePassword">If <c>True</c>, the password will immediately be expired the first time it is used to login.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the password.</returns>
        </member>
        <member name="M:VxSdkNet.User.RemoveFromRole(VxSdkNet.Role)">
            <summary>
Remove this user from a role.
</summary>
            <param name="role">The role to remove this user from.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the user.</returns>
        </member>
        <member name="M:VxSdkNet.User.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.User.GetTags(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the tags currently assigned to this user using an optional collection filter.
<para>Available filters: AdvancedQuery, Folder, Id, ModifiedSince, Name, Owned, Owner, ParentId, ResourceId, ResourceType.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <value>A <c>List</c> of assigned tags.</value>
        </member>
        <member name="M:VxSdkNet.User.GetRoles(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the roles currently assigned to this user using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, Internal, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of assigned roles.</returns>
        </member>
        <member name="M:VxSdkNet.User.GetDataObjects(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets all private data objects owned by this user and all public data objects using an optional collection filter. Other user’s private data
objects will not be returned.
<para>Available filters: ClientType, ModifiedSince, Owned, Owner.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data objects.</returns>
        </member>
        <member name="M:VxSdkNet.User.AddToRole(VxSdkNet.Role)">
            <summary>
Add this user to a role.
</summary>
            <param name="role">The role to add this user to.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the user.</returns>
        </member>
        <member name="M:VxSdkNet.User.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.User.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.User.#ctor(VxSdk.IVxUser*)">
            <summary>
Constructor.
</summary>
            <param name="vxUser">The vx user.</param>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.WorkFax">
            <summary>Work fax number.</summary>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.Work">
            <summary>Work number.</summary>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.Pager">
            <summary>Pager number.</summary>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.Other">
            <summary>Other number.</summary>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.Mobile">
            <summary>Mobile number.</summary>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.HomeFax">
            <summary>Home fax number.</summary>
        </member>
        <member name="F:VxSdkNet.User.PhoneType.Home">
            <summary>Home number.</summary>
        </member>
        <member name="T:VxSdkNet.User.PhoneType">
            <summary>
Values that represent the type of a phone number.
</summary>
        </member>
        <member name="T:VxSdkNet.User">
            <summary>
The User class represents information about a system user.
</summary>
        </member>
        <member name="P:VxSdkNet.UserAccount.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.UserAccount.IsPasswordExpirationDisabled">
            <summary>
Gets or sets whether or not password expiration is enabled for this user account.
</summary>
            <value>If <c>true</c>, password expiration will be disabled for this account; <c>false</c> will use the
global password expiration setting for this account.</value>
        </member>
        <member name="P:VxSdkNet.UserAccount.IsEnabled">
            <summary>
Gets or sets whether or not this user account is enabled. A disabled account will not be able to access the
system unless the account is re-enabled.
</summary>
            <value>
                <c>true</c> if user account is enabled, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.UserAccount.CanBypassLdap">
            <summary>
Gets or sets whether or not the user can login to the system using local credentials instead of using the
LDAP authentication.
</summary>
            <value>
                <c>true</c> to allow using local credentials instead of LDAP, otherwise <c>false</c>.</value>
        </member>
        <member name="M:VxSdkNet.UserAccount.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.UserAccount.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.UserAccount.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.UserAccount.#ctor(VxSdk.IVxUserAccount*)">
            <summary>
Constructor.
</summary>
            <param name="vxUserAccount">The vx user account.</param>
        </member>
        <member name="T:VxSdkNet.UserAccount">
            <summary>
The UserAccount class represents account information for a specific user.
</summary>
        </member>
        <member name="P:VxSdkNet.Tag.OwnerName">
            <summary>
Gets the name of the user that owns this tag.
</summary>
            <value>The name of the user that owns this tag.</value>
        </member>
        <member name="P:VxSdkNet.Tag.Owner">
            <summary>
Gets the user that owns this tag.
</summary>
            <value>The user that owns this tag.</value>
        </member>
        <member name="P:VxSdkNet.Tag.Parent">
            <summary>
Gets or sets the parent of this tag, if any.
</summary>
            <value>The parent tag if set, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.Tag.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Tag.LinkedDevices">
            <summary>
Gets the devices associated with this tag.
</summary>
            <value>A <c>List</c> of devices.</value>
        </member>
        <member name="P:VxSdkNet.Tag.LinkedDataSources">
            <summary>
Gets the data sources associated with this tag.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.Tag.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Tag.IsFolder">
            <summary>
Gets whether this tag is part of a folder-like hierarchy where it has a reference to a
parent tag or is a top-level folder tag.
</summary>
            <value>
                <c>true</c> if the tag is a folder, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Tag.Id">
            <summary>
Gets the unique identifier for this tag.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.Tag.Unlink(System.Collections.Generic.List`1{VxSdkNet.Device})">
            <summary>
Remove device associations from this tag.
</summary>
            <param name="devices">A <c>List</c> containing the devices to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the devices.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.Unlink(System.Collections.Generic.List`1{VxSdkNet.DataSource})">
            <summary>
Remove data source associations from this tag.
</summary>
            <param name="dataSources">A <c>List</c> containing the data sources to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.Merge(VxSdkNet.Tag)">
            <summary>
Merge this tag into the given tag. All links associated with this tag will be re-associated
with the given tag; this tag will then be deleted.
</summary>
            <param name="tag">The tag to merge into.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of merging the tag.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.Link(System.Collections.Generic.List`1{VxSdkNet.Device})">
            <summary>
Associate devices with this tag. If the device is deleted, the association with this tag
shall also be removed.
</summary>
            <param name="devices">A <c>List</c> containing the devices to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the devices.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.Link(System.Collections.Generic.List`1{VxSdkNet.DataSource})">
            <summary>
Associate data sources with this tag. If the data source is deleted, the association with
this tag shall also be removed.
</summary>
            <param name="dataSources">A <c>List</c> containing the data sources to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.GetLinkedDevices(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the devices associated with this tag using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of devices.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.GetLinkedDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources associated with this tag using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Tag.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Tag.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Tag.#ctor(VxSdk.IVxTag*)">
            <summary>
Constructor.
</summary>
            <param name="vxTag">The vx tag.</param>
        </member>
        <member name="T:VxSdkNet.Tag">
            <summary>
The Tag class represents a non-hierarchical identifier typically associated with one or
more resources (i.e. device or data source). A tag helps to describe a resource and allows it
to be found more efficiently.
</summary>
        </member>
        <member name="P:VxSdkNet.Role.Users">
            <summary>
Gets the users assigned to this role.
</summary>
            <value>A <c>List</c> of users.</value>
        </member>
        <member name="P:VxSdkNet.Role.Privileges">
            <summary>
Gets the privileges assigned to this role.
</summary>
            <value>A <c>List</c> of privileges.</value>
        </member>
        <member name="P:VxSdkNet.Role.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Role.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Role.IsReadOnly">
            <summary>
Indicates that the role was created internally on the server and is read-only.
</summary>
            <value>The read-only value.</value>
        </member>
        <member name="P:VxSdkNet.Role.Id">
            <summary>
Gets the unique identifier for this role.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.Role.RemovePrivilege(VxSdkNet.Privilege)">
            <summary>
Remove a privilege from the role.
</summary>
            <param name="privilegeItem">The privilege to remove.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the privilege.</returns>
        </member>
        <member name="M:VxSdkNet.Role.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Role.GetUsers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the users assigned to this role using an optional collection filter.
<para>Available filters: AdvancedQuery, FirstName, LastName, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of users.</returns>
        </member>
        <member name="M:VxSdkNet.Role.AddPrivilege(VxSdkNet.NewPrivilege)">
            <summary>
Add a new privilege to the role.
</summary>
            <param name="newPrivilege">The new privilege to add.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the privilege.</returns>
        </member>
        <member name="M:VxSdkNet.Role.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Role.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Role.#ctor(VxSdk.IVxRole*)">
            <summary>
Constructor.
</summary>
            <param name="vxRole">The vx role.</param>
        </member>
        <member name="T:VxSdkNet.Role">
            <summary>
The Role class represents a collection of permissions which can be assigned to a user.
</summary>
        </member>
        <member name="P:VxSdkNet.NewPrivilege.Priority">
            <summary>
Gets or sets the relative priority for the privilege, from 1 to 250. Smaller numbers have higher
priority than larger numbers (e.g. 1 is the highest priority).
</summary>
            <value>The priority.</value>
        </member>
        <member name="P:VxSdkNet.NewPrivilege.PermissionId">
            <summary>
Gets or sets the identifier of the permission being granted by this privilege.
</summary>
            <value>The permission identifier.</value>
        </member>
        <member name="T:VxSdkNet.NewPrivilege">
            <summary>
The NewTag class represents a new privilege.
</summary>
        </member>
        <member name="P:VxSdkNet.Privilege.UnLinkedUsers">
            <summary>
Gets the users not associated with this privilege.
</summary>
            <value>A <c>List</c> of users.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.UnLinkedRelayOutputs">
            <summary>
Gets the relay outputs not associated with this privilege.
</summary>
            <value>A <c>List</c> of relay outputs.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.UnLinkedDrawings">
            <summary>
Gets the drawings not associated with this privilege.
</summary>
            <value>A <c>List</c> of drawings.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.UnLinkedDevices">
            <summary>
Gets the devices not associated with this privilege.
</summary>
            <value>A <c>List</c> of devices.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.UnLinkedDataSources">
            <summary>
Gets the data sources not associated with this privilege.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.ResourceType">
            <summary>
Gets the resource type, if any, that can be linked to this privilege.
</summary>
            <value>The resource type.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.Priority">
            <summary>
Gets or sets the relative priority for the privilege, from 1 to 250. Smaller numbers have higher
priority than larger numbers (e.g. 1 is the highest priority).
</summary>
            <value>The priority.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.PermissionId">
            <summary>
Gets the identifier of the permission being granted by this privilege.
</summary>
            <value>The permission identifier.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.LinkedUsers">
            <summary>
Gets the users associated with this privilege.
</summary>
            <value>A <c>List</c> of users.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.LinkedRelayOutputs">
            <summary>
Gets the relay outputs associated with this privilege.
</summary>
            <value>A <c>List</c> of relay outputs.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.LinkedDrawings">
            <summary>
Gets the drawings associated with this privilege.
</summary>
            <value>A <c>List</c> of drawings.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.LinkedDevices">
            <summary>
Gets the devices associated with this privilege.
</summary>
            <value>A <c>List</c> of devices.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.LinkedDataSources">
            <summary>
Gets the data sources associated with this privilege.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.IsRestricted">
            <summary>
Gets or sets whether the privilege is restricted to the associated resources.
</summary>
            <value>
                <c>true</c> if restricted, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.IsExcludeRestricted">
            <summary>
Gets or sets whether the privilege is excluded from the associated resources.
</summary>
            <value>
                <c>true</c> if the privilege is excluded, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Privilege.Id">
            <summary>
Gets the unique identifier for this privilege.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.Privilege.Unlink(System.Collections.Generic.List`1{VxSdkNet.User})">
            <summary>
Remove user associations from this privilege.
</summary>
            <param name="users">A <c>List</c> containing the users to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the users.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Unlink(System.Collections.Generic.List`1{VxSdkNet.RelayOutput})">
            <summary>
Remove relay outputs associations from this privilege.
</summary>
            <param name="relayOutputs">A <c>List</c> containing the relay outputs to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the relay outputs.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Unlink(System.Collections.Generic.List`1{VxSdkNet.Drawing})">
            <summary>
Remove drawings associations from this privilege.
</summary>
            <param name="drawings">A <c>List</c> containing the drawings to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the drawings.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Unlink(System.Collections.Generic.List`1{VxSdkNet.Device})">
            <summary>
Remove device associations from this privilege.
</summary>
            <param name="devices">A <c>List</c> containing the devices to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the devices.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Unlink(System.Collections.Generic.List`1{VxSdkNet.DataSource})">
            <summary>
Remove data source associations from this privilege.
</summary>
            <param name="dataSources">A <c>List</c> containing the data sources to be removed.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of removing the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Link(System.Collections.Generic.List`1{VxSdkNet.User})">
            <summary>
Associate users with this privilege.
</summary>
            <param name="users">A <c>List</c> containing the data sources to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Link(System.Collections.Generic.List`1{VxSdkNet.RelayOutput})">
            <summary>
Associate relay outputs with this privilege.
</summary>
            <param name="relayOutputs">A <c>List</c> containing the relay outputs to be linked.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of linking the relay outputs.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Link(System.Collections.Generic.List`1{VxSdkNet.Drawing})">
            <summary>
Associate drawings with this privilege.
</summary>
            <param name="drawings">A <c>List</c> containing the drawings to be linked.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of linking the drawings.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Link(System.Collections.Generic.List`1{VxSdkNet.Device})">
            <summary>
Associate devices with this privilege.
</summary>
            <param name="devices">A <c>List</c> containing the devices to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the devices.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Link(System.Collections.Generic.List`1{VxSdkNet.DataSource})">
            <summary>
Associate data sources with this privilege.
</summary>
            <param name="dataSources">A <c>List</c> containing the data sources to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetUnLinkedUsers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the users not associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of users.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetUnLinkedRelayOutputs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the relay outputs not associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of relay outputs.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetUnLinkedDrawings(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the drawings not associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of drawings.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetUnLinkedDevices(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the devices not associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of devices.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetUnLinkedDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources not associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetLinkedUsers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the users associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of users.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetLinkedRelayOutputs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the relay outputs associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of relay outputs.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetLinkedDrawings(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the drawings associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of drawings.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetLinkedDevices(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the devices associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of devices.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.GetLinkedDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources associated with this privilege using an optional collection filter.
<para>Available filters: AdvancedQuery, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Privilege.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Privilege.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Privilege.#ctor(VxSdk.IVxPrivilege*)">
            <summary>
Constructor.
</summary>
            <param name="vxPrivilege">The vx privilege.</param>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.Monitor">
            <summary>A monitor resource.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.RelayOutput">
            <summary>A relay output resource.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.Tag">
            <summary>A user resource.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.DataStorage">
            <summary>A drawing resource.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.Drawing">
            <summary>A drawing resource.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.User">
            <summary>A user.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.Device">
            <summary>A device.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.DataSource">
            <summary>A data source.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.ResourceTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Privilege.ResourceTypes">
            <summary>
Values that represent a type of resource.
</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SystemManagement">
            <summary>[Group] Access, licensing, and management of entire systems.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.DeviceManagement">
            <summary>[Group] Access, licensing, and management of edge devices in the system (e.g. cameras and recorders).</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.UserManagement">
            <summary>[Group] Management of user accounts, roles, and authorizations.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.EventManagement">
            <summary>[Group] Access and management of system events.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SupervisionAndReports">
            <summary>[Group] Supervisory activities aimed at “shift leaders”.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.PlugIns">
            <summary>[Group] Permissions related to plug-in capabilities such as mapping and external events.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.Investigation">
            <summary>[Group] Investigative activities such as viewing/managing recorded media, initiating and retrieving exports, etc.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.Surveillance">
            <summary>[Group] Standard surveillance activities such as viewing live media, PTZ controls, initiating recording, etc.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageMyReports">
            <summary>Manage My Reports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.StreamExports">
            <summary>Stream Exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.DownloadExports">
            <summary>Download Exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewExports">
            <summary>View Exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.CreatePrivateExportsTo">
            <summary>Create Private Exports To.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.StreamPrivateExports">
            <summary>Stream Private Exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.DownloadPrivateExports">
            <summary>Download Private Exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManagePrivateExports">
            <summary>Manage Private Exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.AccessOnCameraStorage">
            <summary>Access On-Camera Storage.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SendVideo">
            <summary>Send Video.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewFullCameraDetails">
            <summary>View Full Camera Details.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageMemberSystems">
            <summary>Manage member systems.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageSystemServers">
            <summary>Manage system servers.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewSystemHealth">
            <summary>View system health.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ConfigureRecording">
            <summary>Configure recording.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.DefineSystemShortcuts">
            <summary>Define system shortcuts.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SetSystemLocaleOptions">
            <summary>Set system locale options.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageSystemLicenses">
            <summary>Manage system licenses.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ConfigureMonitorWallDecoders">
            <summary>Configure monitor wall decoders.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageDisplayDevices">
            <summary>Manage display devices.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SetupEdgeDevices">
            <summary>Setup edge devices.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.UpdateDeviceSoftware">
            <summary>Update device software.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageDeviceLicenses">
            <summary>Manage device licenses.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageIO">
            <summary>Manage I/O.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageSystemTags">
            <summary>Manage system tags.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageRoles">
            <summary>Manage roles.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ResetUserPasswords">
            <summary>Reset user passwords.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.AssignRolesToUsers">
            <summary>Assign roles to users.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageUserAccounts">
            <summary>Manage user accounts.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ConfigureEvents">
            <summary>Configure events.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.HandleEvents">
            <summary>Handle events.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewEventHistory">
            <summary>View event history.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.MultiviewQty">
            <summary>Multiview qty.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.AuditUserActivity">
            <summary>AuditUser activity.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageSystemWorkspaces">
            <summary>Manage system workspaces.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.AccessUserWorkspaces">
            <summary>Access user workspaces.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageCameraTours">
            <summary>Manage camera tours.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.DefinePtzPresets">
            <summary>Define ptz presets.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageMapFiles">
            <summary>Manage map files.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.PlaceCamerasOnMap">
            <summary>Place cameras on map.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewMaps">
            <summary>View maps.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.UseMap">
            <summary>Use map.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ManageExports">
            <summary>Manage exports.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ExportMediaClips">
            <summary>Export media clips.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SystemLocks">
            <summary>System locks.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.SystemBookmarks">
            <summary>System bookmarks.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewRecordedMedia">
            <summary>View recorded media.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.AccessRelays">
            <summary>Access relays.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.AccessAlarms">
            <summary>Access alarms.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.LaunchSavedViewsRemotely">
            <summary>Launch saved views remotely.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.RecordMedia">
            <summary>Record media.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.LockPtzMode">
            <summary>Lock PTZ mode.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.UsePtzMode">
            <summary>Use PTZ mode.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.ViewLiveMedia">
            <summary>View live media.</summary>
        </member>
        <member name="F:VxSdkNet.Privilege.PermissionIds.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Privilege">
            <summary>
The Privilege class represents a specific permission that is given to a role.
</summary>
        </member>
        <member name="P:VxSdkNet.Drawing.ShowCameraNumbers">
            <summary>
Gets or sets whether the camera number text overlays should be displayed. 
</summary>
            <value>
                <c>true</c> to display camera number text overlays, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.Provider">
            <summary>
Gets the provider of the drawing
</summary>
            <value>The drawing <see cref="T:VxSdkNet.Drawing.DrawingProvider">Provider</see>.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.MimeType">
            <summary>
Gets the image mime type
</summary>
            <value>The Mime type.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.MarkerSize">
            <summary>
Gets or sets the size, in pixels, of marker icons.
</summary>
            <value>The size, in pixels.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.Markers">
            <summary>
Gets the markers associated with this drawing.
</summary>
            <value>A <c>List</c> of the associated markers.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.LastModified">
            <summary>
Gets the last modified date of the drawing.
</summary>
            <value>Last modified date.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.Id">
            <summary>
Gets the unique drawing identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.CameraNumberColor">
            <summary>
Gets or sets an integer that defines an ARGB color for the camera number text.
</summary>
            <value>An integer that defines an ARGB color.</value>
        </member>
        <member name="P:VxSdkNet.Drawing.BackgroundColor">
            <summary>
Gets or sets an integer that defines an ARGB color for the map background.
</summary>
            <value>An integer that defines an ARGB color.</value>
        </member>
        <member name="M:VxSdkNet.Drawing.SetLock">
            <summary>
Sets a resource lock on this drawing, owned by the current user.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.SetImage(System.String)">
            <summary>
Sets the binary drawing image data. The maximum allowable size of the image is 128 MB.
Supported file types are DWG, JPG and PNG.
</summary>
            <param name="imagePath">The local path to the image file.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.HasMarkerWithResource(System.String)">
            <summary>
Determines if a drawing contains a marker with the given resource id.
</summary>
            <returns>
                <c>true</c> if this drawing has a marker with the given resource id, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.GetMarkers(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the markers associated with this drawing using an optional collection filter.
<para>Available filters: LayerName, ModifiedSince, ResourceId.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of the associated markers.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.GetLock">
            <summary>
Gets the resource lock, if any.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.GetImageUri">
            <summary>
Gets the image uri, if any.
</summary>
            <returns>The image uri.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.DeleteMarker(VxSdkNet.Marker)">
            <summary>
Deletes a marker.
</summary>
            <param name="marker">The marker to be deleted.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.DeleteLock">
            <summary>
Deletes the resource lock, if any.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the lock.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.DeleteImage">
            <summary>
Deletes the binary drawing image data.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the image.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.AddMarker(VxSdkNet.NewMarker)">
            <summary>
Creates a new marker.
</summary>
            <param name="newMarker">The new marker to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Drawing.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Drawing.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Drawing.#ctor(VxSdk.IVxDrawing*)">
            <summary>
Constructor.
</summary>
            <param name="vxDrawing">The vx Drawing.</param>
        </member>
        <member name="F:VxSdkNet.Drawing.DrawingProvider.Serenity">
            <summary>Serenity drawing provider</summary>
        </member>
        <member name="F:VxSdkNet.Drawing.DrawingProvider.Esri">
            <summary>Esri drawing provider</summary>
        </member>
        <member name="F:VxSdkNet.Drawing.DrawingProvider.Unknown">
            <summary>Unset or unknown provider</summary>
        </member>
        <member name="T:VxSdkNet.Drawing.DrawingProvider">
            <summary>
Values that represent which provider is associated with a drawing
</summary>
        </member>
        <member name="T:VxSdkNet.Drawing">
            <summary>
The Drawing class represents a diagrammatic representation of an area. A drawing may
contain any number of markers to represent points of interest within the area.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLock.Owner">
            <summary>
Gets the owner.
</summary>
            <value>The owner.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLock.Id">
            <summary>
Gets the unique resource lock identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLock.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ResourceLock.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ResourceLock.#ctor(VxSdk.IVxResourceLock*)">
            <summary>
Constructor.
</summary>
            <param name="vxResourceLock">The vx resource lock.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLock">
            <summary>
The ResourceLock class represents a lock upon a resource. A resource that has been locked shall
permit only the owner of the lock access to modify the resource.
</summary>
        </member>
        <member name="P:VxSdkNet.NewMarker.Y">
            <summary>
Gets or sets the Y coordinate.
</summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:VxSdkNet.NewMarker.X">
            <summary>
Gets or sets the X coordinate.
</summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:VxSdkNet.NewMarker.Name">
            <summary>
Gets or sets the friendly name of the marker.
</summary>
            <value>The friendly name of the marker.</value>
        </member>
        <member name="P:VxSdkNet.NewMarker.LayerName">
            <summary>
Gets or sets the layer name of the marker, if any.
</summary>
            <value>The friendly name of the marker.</value>
        </member>
        <member name="P:VxSdkNet.NewMarker.Direction">
            <summary>
Gets or sets the angular coordinate indicating the direction, if any, that the marker is
facing on a polar grid(e.g.: 0 (right), 90 (up), 180 (left), 270 (down)).
</summary>
            <value>The angular direction.</value>
        </member>
        <member name="P:VxSdkNet.NewMarker.AssociatedDataSourceId">
            <summary>
Gets or sets the data source id to associate with the marker.
</summary>
            <value>The data source id.</value>
        </member>
        <member name="T:VxSdkNet.NewMarker">
            <summary>
The NewMarker class represents a new Marker.
</summary>
        </member>
        <member name="P:VxSdkNet.Marker.Y">
            <summary>
Gets the Y coordinate.
</summary>
            <value>The Y coordinate.</value>
        </member>
        <member name="P:VxSdkNet.Marker.X">
            <summary>
Gets the X coordinate.
</summary>
            <value>The X coordinate.</value>
        </member>
        <member name="P:VxSdkNet.Marker.Name">
            <summary>
Gets or sets the friendly name of the marker.
</summary>
            <value>The friendly name of the marker.</value>
        </member>
        <member name="P:VxSdkNet.Marker.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Marker.LayerName">
            <summary>
Gets or sets the layer name for the marker.
</summary>
            <value>The layer name of the marker.</value>
        </member>
        <member name="P:VxSdkNet.Marker.Id">
            <summary>
Gets the unique marker identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Marker.Drawing">
            <summary>
Gets the drawing that this marker belongs to.
</summary>
            <value>The drawing that this marker belongs to.</value>
        </member>
        <member name="P:VxSdkNet.Marker.Direction">
            <summary>
Gets or sets the angular coordinate indicating the direction, if any, that the marker is
facing on a polar grid(e.g.: 0 (right), 90 (up), 180 (left), 270 (down)).
</summary>
            <value>The angular direction.</value>
        </member>
        <member name="P:VxSdkNet.Marker.AssociatedResourceType">
            <summary>
Gets the type of resource associated with this marker, if any.
</summary>
            <value>The resource type.</value>
        </member>
        <member name="P:VxSdkNet.Marker.AssociatedDrawing">
            <summary>
Gets the drawing associated with this marker, if any.
</summary>
            <value>The associated drawing if present, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.Marker.AssociatedDataSource">
            <summary>
Gets the data source associated with this marker, if any.
</summary>
            <value>The associated data source if present, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="M:VxSdkNet.Marker.SetCoordinates(System.Single,System.Single)">
            <summary>
Sets the location of the marker on the associated drawing.
</summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the coordinates.</returns>
        </member>
        <member name="M:VxSdkNet.Marker.SetAssociation(VxSdkNet.Drawing)">
            <summary>
Sets the drawing associated with this marker.
</summary>
            <param name="drawing">The drawing to associate with this marker.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdkNet.Marker.SetAssociation(VxSdkNet.DataSource)">
            <summary>
Sets the data source associated with this marker.
</summary>
            <param name="dataSource">The data source to associate with this marker.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdkNet.Marker.RemoveAssociation">
            <summary>
Removes any resource that is associated with this marker.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Marker.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Marker.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Marker.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Marker.#ctor(VxSdk.IVxMarker*)">
            <summary>
Constructor.
</summary>
            <param name="vxMarker">The vx Marker.</param>
        </member>
        <member name="T:VxSdkNet.Marker">
            <summary>
The Marker class represents the location of a resource on a drawing.
</summary>
        </member>
        <member name="P:VxSdkNet.Device.WebappUrl">
            <summary>
Gets the product webapp URL.
</summary>
            <value>The product webapp URL.</value>
        </member>
        <member name="P:VxSdkNet.Device.VirtualIp">
            <summary>
Gets the virtual IP of the device, if any.
</summary>
            <value>The virtual IP.</value>
        </member>
        <member name="P:VxSdkNet.Device.Version">
            <summary>
Gets or sets the current version of software running on the device.
</summary>
            <value>The software version.</value>
        </member>
        <member name="P:VxSdkNet.Device.Vendor">
            <summary>
Gets the device vendor, if any.
</summary>
            <value>The name of the devices vendor.</value>
        </member>
        <member name="P:VxSdkNet.Device.Username">
            <summary>
Gets or sets the account username used to communicate with the device, if any.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.Device.Type">
            <summary>
Gets the type of device.
</summary>
            <value>The device <see cref="T:VxSdkNet.Device.Types">Type</see>.</value>
        </member>
        <member name="P:VxSdkNet.Device.TimeConfig">
            <summary>
Gets the time configuration.
</summary>
            <value>The time configuration.</value>
        </member>
        <member name="P:VxSdkNet.Device.ThermalEtdConfig">
            <summary>
Gets the thermal elevated temperature detection configuration.
</summary>
            <value>The thermal elevated temperature detection configuration.</value>
        </member>
        <member name="P:VxSdkNet.Device.Status">
            <summary>
Gets the current device status.
</summary>
            <value>A device status <c>List</c>.</value>
        </member>
        <member name="P:VxSdkNet.Device.State">
            <summary>
Gets the current operational state of the device.
</summary>
            <value>The current state of the device.</value>
        </member>
        <member name="P:VxSdkNet.Device.Serial">
            <summary>
Gets the serial number.
</summary>
            <value>The serial number.</value>
        </member>
        <member name="P:VxSdkNet.Device.RelayOutputs">
            <summary>
Gets the relay outputs hosted by this device.
</summary>
            <value>A <c>List</c> of relay outputs.</value>
        </member>
        <member name="P:VxSdkNet.Device.Port">
            <summary>
Gets the Port of the device.
</summary>
            <value>The Port.</value>
        </member>
        <member name="P:VxSdkNet.Device.Password">
            <summary>
Sets the account password used to communicate with the device, if any.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.Device.Name">
            <summary>
Gets or sets the friendly name of the device.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Device.Monitors">
            <summary>
Gets the monitors residing on the device, if any.
</summary>
            <value>A <c>List</c> of monitors.</value>
        </member>
        <member name="P:VxSdkNet.Device.Model">
            <summary>
Gets the device model.
</summary>
            <value>The model name.</value>
        </member>
        <member name="P:VxSdkNet.Device.MacAddress">
            <summary>
Gets the device MAC address.
</summary>
            <value>The MAC address.</value>
        </member>
        <member name="P:VxSdkNet.Device.Logs">
            <summary>
Gets the logs for this device.
</summary>
            <value>A <c>List</c> of logs.</value>
        </member>
        <member name="P:VxSdkNet.Device.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Device.LicensedFeatures">
            <summary>
Gets the list of supported features that are currently licensed for use by this device.
</summary>
            <value>A <c>List</c> of licensed features.</value>
        </member>
        <member name="P:VxSdkNet.Device.LicensableFeatures">
            <summary>
Gets the list of supported features that may be licensed for use by this device.
</summary>
            <value>A <c>List</c> of licensable features.</value>
        </member>
        <member name="P:VxSdkNet.Device.IsLicenseRequired">
            <summary>
Gets a value indicating whether a license is required for commissioning the device.
</summary>
            <value>
                <c>true</c> if license required, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Device.IsCommissioned">
            <summary>
Gets a value indicating whether the device is commissioned.
</summary>
            <value>
                <c>true</c> if commissioned, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Device.Ip">
            <summary>
Gets or sets the IP of the device.
</summary>
            <value>The IP.</value>
        </member>
        <member name="P:VxSdkNet.Device.InitializationStatusReason">
            <summary>
Gets the error status reason when device initialization failed.
</summary>
            <value>The initialization error status reason.</value>
        </member>
        <member name="P:VxSdkNet.Device.Id">
            <summary>
Gets the unique identifier of the device.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Device.Hostname">
            <summary>
Gets or sets the hostname of the device. If set, takes precedence over the ip. The combination
of <c>Hostname</c>, <c>Ip</c>, <c>Port</c> and <c>Type</c> must be unique.
</summary>
            <value>The hostname.</value>
        </member>
        <member name="P:VxSdkNet.Device.HasDeviceDiagnostics">
            <summary>
Gets a value indicating whether this device provides any diagnostic information.
</summary>
            <value>
                <c>true</c> if this device provides diagnostic information, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Device.Endpoints">
            <summary>
Gets or sets the list of source URIs that the device will support.
</summary>
            <value>A <c>List</c> of source URIs.</value>
        </member>
        <member name="P:VxSdkNet.Device.DriverTypeId">
            <summary>
Gets the driver type identifier.
</summary>
            <value>The driver type identifier.</value>
        </member>
        <member name="P:VxSdkNet.Device.DriverDeviceId">
            <summary>
Gets the driver device identifier.
</summary>
            <value>The driver device identifier.</value>
        </member>
        <member name="P:VxSdkNet.Device.Discovered">
            <summary>
Gets the time when this device was discovered.
</summary>
            <value>The time when this device was discovered.</value>
        </member>
        <member name="P:VxSdkNet.Device.DeviceDiagnostics">
            <summary>
Gets any diagnostics provided by this device.
</summary>
            <value>The device diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Device.DeviceAssignments">
            <summary>
Gets the assignments to a data storage for this device.
</summary>
            <value>A <c>List</c> of device assignments.</value>
        </member>
        <member name="P:VxSdkNet.Device.DataStorage">
            <summary>
Gets the data storage hosted by this device, if any.
</summary>
            <value>The data storage hosted by this device if available, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.Device.DataSources">
            <summary>
Gets the data sources hosted by this device.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.Device.DatabaseBackups">
            <summary>
Gets the database backup information for this device, if any.
</summary>
            <value>The database backups for the device if available, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.Device.CanCreateLogs">
            <summary>
Gets a value indicating whether this device is capable of generating logs.
</summary>
            <value>
                <c>true</c> if this device is capable of generating logs, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.Device.AuthConfig">
            <summary>
Gets the authorization configuration.
</summary>
            <value>The authorization configuration.</value>
        </member>
        <member name="P:VxSdkNet.Device.AnalyticSessions">
            <summary>
Gets all of the analytic sessions for this device.
</summary>
            <value>A <c>List</c> of analytic sessions.</value>
        </member>
        <member name="P:VxSdkNet.Device.AlarmInputs">
            <summary>
Gets the alarm inputs hosted by this device.
</summary>
            <value>A <c>List</c> of alarm inputs.</value>
        </member>
        <member name="P:VxSdkNet.Device.AccessPoints">
            <summary>
Gets the access points hosted by this device.
</summary>
            <value>A <c>List</c> of access points.</value>
        </member>
        <member name="M:VxSdkNet.Device.UpdateSoftware(VxSdkNet.VxFile)">
            <summary>
Updates the software running on the device.
</summary>
            <param name="updateFile">The software update file.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the software.</returns>
        </member>
        <member name="M:VxSdkNet.Device.TriggerRefresh">
            <summary>
Triggers a refresh of this device&gt; on the VideoXpert system; updating it by retrieving the latest
information directly from the device.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of refreshing the device.</returns>
        </member>
        <member name="M:VxSdkNet.Device.Silence">
            <summary>
Silences all audible alarms on the device.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Device.RestoreBackup(System.String)">
            <summary>
Restores a backup of the device configuration.
</summary>
            <param name="backupPath">The local path to the backup file.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.Device.Replace(System.String)">
            <summary>
Replaces an offline device with a new device. Not available for all types of devices.
</summary>
            <param name="replacementDeviceId">The ID of the replacement device.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of replacing this device.</returns>
        </member>
        <member name="M:VxSdkNet.Device.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetRelayOutputs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the relay outputs hosted by this device using an optional collection filter.
<para>Available filters: AdvancedQuery, Enabled, Id, ModifiedSince, Name, State.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of relay outputs.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetMonitors(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the monitors residing on the device, if any, using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, Number.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of monitors.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetLogs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the logs for this device using an optional collection filter.
<para>Available filters: Initiated, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of logs.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetDeviceAssignments(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the assignments to a data storage for this device using an optional collection filter.
<para>Available filters: DataSourceId, DataStorageId, DeviceId, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of device assignments.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources hosted by this device using an optional collection filter.
<para>Available filters: AdvancedQuery, AllTags, Capturing, Commissioned, Enabled, Encoding, HasFolderTags, Id, Ip, ManualRecording, ModifiedSince, Name, Number, Recording, State, Type, Unassigned.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetBackupUri">
            <summary>
Gets the uri to the backup file of the device configuration, if any.
</summary>
            <returns>The backup file uri.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetAnalyticSessions(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the analytic sessions for this device.
<para>Available filters: AdvancedQuery, DataSourceId, DeviceId, Id, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of analytic sessions.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetAlarmInputs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the alarm inputs hosted by this device using an optional collection filter.
<para>Available filters: AdvancedQuery, Id, ModifiedSince, Name, State.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of alarm inputs.</returns>
        </member>
        <member name="M:VxSdkNet.Device.GetAccessPoints(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the access points residing on the device.
<para>Available filters: kAdvancedQuery, kHasStatus, kId, kModifiedSince, kName, kState, kType.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of access points.</returns>
        </member>
        <member name="M:VxSdkNet.Device.DeleteLog(VxSdkNet.Log)">
            <summary>
Delete a log from this device.
</summary>
            <param name="logItem">The log to be deleted from this device.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the log.</returns>
        </member>
        <member name="M:VxSdkNet.Device.DeleteAnalyticSession(VxSdkNet.AnalyticSession)">
            <summary>
Delete an analytic session from this device.
</summary>
            <param name="analyticSession">The analytic session to be deleted from the device.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the analytic session.</returns>
        </member>
        <member name="M:VxSdkNet.Device.CreateLog">
            <summary>
Creates a new log for this device, the contents of which shall be determined by the server by default.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of creating the log.</returns>
        </member>
        <member name="M:VxSdkNet.Device.AddAnalyticSession(VxSdkNet.NewAnalyticSession)">
            <summary>
Adds a new analytic session for this device.
</summary>
            <param name="newAnalyticSession">The new analytic session to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the analytic session.</returns>
        </member>
        <member name="M:VxSdkNet.Device.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Device.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Device.#ctor(VxSdk.IVxDevice*)">
            <summary>
Constructor.
</summary>
            <param name="vxDevice">The vx device.</param>
        </member>
        <member name="F:VxSdkNet.Device.Types.Database">
            <summary>A VideoXpert database.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.AnalyticServer">
            <summary>An analytic server.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Ui">
            <summary>A UI device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Recorder">
            <summary>A network storage device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Monitor">
            <summary>A monitor device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Mg">
            <summary>A VideoXpert MediaGateway device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Generic">
            <summary>A generic device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.External">
            <summary>An external device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Encoder">
            <summary>An encoder device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Decoder">
            <summary>A decoder device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Core">
            <summary>A VideoXpert Core device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Camera">
            <summary>A camera device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.AllInOne">
            <summary>An All in One VideoXpert server (VxPro).</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.AccessController">
            <summary>An AccessController device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.Types.Acc">
            <summary>A VideoXpert Accessory Server.</summary>
        </member>
        <member name="T:VxSdkNet.Device.Types">
            <summary>
Values that represent device types.
</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.Unauthenticated">
            <summary>Invalid/missing credentials.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.TimedOut">
            <summary>Timed out while waiting for a response from a device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.SoapFault">
            <summary>Encountered a SOAP fault while setting up communication with the device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.ServerOffline">
            <summary>A server has gone offline during device discovery.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.NotSupported">
            <summary>Device not supported.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.NoResponse">
            <summary>No response from the device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.ConnectFailed">
            <summary>Failed to establish a connection to the device.</summary>
        </member>
        <member name="F:VxSdkNet.Device.InitializationStatusReasons.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Device.InitializationStatusReasons">
            <summary>
Values that represent initialization status reason indicators.
</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.UserRequired">
            <summary>User required.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.FailedToInitialize">
            <summary>Initialization failure.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.AuthExpired">
            <summary>Expired credentials..</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.NsmMember">
            <summary>NSM5200 member.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.NsmManager">
            <summary>NSM5200 manager.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.IdInconsistent">
            <summary>Device identity mismatch.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.Unauthenticated">
            <summary>Invalid/missing credentials.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.Initializing">
            <summary>Being prepared for use.</summary>
        </member>
        <member name="F:VxSdkNet.Device.DeviceStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Device.DeviceStatus">
            <summary>
Values that represent the operational state of a device.
</summary>
        </member>
        <member name="T:VxSdkNet.Device">
            <summary>
The Device class represents a particular physical device in the system.
</summary>
        </member>
        <member name="P:VxSdkNet.RelayOutput.State">
            <summary>
Gets the current state of this relay output.
</summary>
            <value>The relay output state.</value>
        </member>
        <member name="P:VxSdkNet.RelayOutput.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.RelayOutput.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.RelayOutput.IsEnabled">
            <summary>
Gets or sets the whether or not the relay output is enabled.
</summary>
            <value>
                <c>true</c> if enabled, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.RelayOutput.Id">
            <summary>
Gets the unique relay output identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.RelayOutput.HostDevice">
            <summary>
Gets the device that hosts this relay output.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.RelayOutput.Description">
            <summary>
Gets or sets the friendly description of the relay output.
</summary>
            <value>The friendly description.</value>
        </member>
        <member name="M:VxSdkNet.RelayOutput.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.RelayOutput.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.RelayOutput.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.RelayOutput.#ctor(VxSdk.IVxRelayOutput*)">
            <summary>
Constructor.
</summary>
            <param name="vxRelayOutput">The vx relay output.</param>
        </member>
        <member name="F:VxSdkNet.RelayOutput.RelayStates.Inactive">
            <summary>The relay output is inactive.</summary>
        </member>
        <member name="F:VxSdkNet.RelayOutput.RelayStates.Active">
            <summary>The relay output is active.</summary>
        </member>
        <member name="F:VxSdkNet.RelayOutput.RelayStates.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.RelayOutput.RelayStates">
            <summary>
Values that represent the state of a relay output.
</summary>
        </member>
        <member name="T:VxSdkNet.RelayOutput">
            <summary>
The RelayOutput class represents a physical relay output.
</summary>
        </member>
        <member name="P:VxSdkNet.VxFile.Id">
            <summary>
Gets the unique identifier of the file.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.VxFile.Filename">
            <summary>
Gets the filename of the associated file data.
</summary>
            <value>The filename.</value>
        </member>
        <member name="P:VxSdkNet.VxFile.FileEndpoint">
            <summary>
Gets the URI to the download location of the actual file data.
</summary>
            <returns>The file endpoint, if available.</returns>
        </member>
        <member name="M:VxSdkNet.VxFile.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.VxFile.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.VxFile.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.VxFile.#ctor(VxSdk.IVxFile*)">
            <summary>
Constructor.
</summary>
            <param name="vxFile">The vx file.</param>
        </member>
        <member name="T:VxSdkNet.VxFile">
            <summary>
The VxFile class represents a file (e.g. camera firmware).
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Temperatures">
            <summary>
Gets the temperature diagnostics.
</summary>
            <value>The temperature diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Storages">
            <summary>
Gets the storage diagnostics.
</summary>
            <value>The storage diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.RetentionInfo">
            <summary>
Gets the retention diagnostics.
</summary>
            <value>The retention diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Powers">
            <summary>
Gets the power supply diagnostics.
</summary>
            <value>The power supply diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Networks">
            <summary>
Gets the network diagnostics.
</summary>
            <value>The network diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Loads">
            <summary>
Gets the load diagnostics.
</summary>
            <value>The load diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Hdds">
            <summary>
Gets the hdd diagnostics.
</summary>
            <value>The hdd diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Fans">
            <summary>
Gets the fan diagnostics.
</summary>
            <value>The fan diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.EventingInfo">
            <summary>
Gets the eventing diagnostics.
</summary>
            <value>The eventing diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Databases">
            <summary>
Gets the database diagnostics.
</summary>
            <value>The database diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.BackupPowers">
            <summary>
Gets the backup power diagnostics.
</summary>
            <value>The backup power diagnostics.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.AssignmentsInfo">
            <summary>
Gets the assignment diagnostics.
</summary>
            <value>The assignment diagnostics.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.#ctor(VxSdk.VxDiagnostics*)">
            <summary>
Constructor.
</summary>
            <param name="vxDiagnostics">The vx diagnostic.</param>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Temperature.ThresholdLow">
            <summary>
Gets the temperature threshold under which normal operating temperature is exceeded (in Celsius).
</summary>
            <value>The temperature threshold.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Temperature.ThresholdHigh">
            <summary>
Gets the temperature threshold over which normal operating temperature is exceeded (in Celsius).
</summary>
            <value>The temperature threshold.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Temperature.Degrees">
            <summary>
Gets the temperature reading (in Celsius).
</summary>
            <value>The temperature.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Temperature.Id">
            <summary>
Gets the identifier of the temperature.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Temperature.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Temperature.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Temperature.#ctor(VxSdk.VxDiagnostics.Temperature*)">
            <summary>
Constructor.
</summary>
            <param name="temperature">The temperature diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Temperature">
            <summary>
The Temperature class represents temperature sensor diagnostic information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Storage.Used">
            <summary>
Gets the amount of storage in use (in MB).
</summary>
            <value>Storage amount in MB.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Storage.Total">
            <summary>
Gets the total amount of storage present (in MB).
</summary>
            <value>Storage amount in MB.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Storage.IsOnline">
            <summary>
Gets a value indicating whether or not the storage is online and available.
</summary>
            <value>
                <c>true</c> if storage is online and available, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Storage.Id">
            <summary>
Gets the identifier of the storage.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Storage.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Storage.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Storage.#ctor(VxSdk.VxDiagnostics.Storage*)">
            <summary>
Constructor.
</summary>
            <param name="storage">The storage diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Storage">
            <summary>
The Storage class represents storage diagnostic information. Contains
information on the capacity and usage of local storage.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Retention.RetentionTime">
            <summary>
Gets the current media storage retention time (in hours).
</summary>
            <value>Retention time in hours.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Retention.#ctor(VxSdk.VxDiagnostics.Retention)">
            <summary>
Constructor.
</summary>
            <param name="retention">The retention diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Retention">
            <summary>
The Retention class represents storage retention information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Power.IsOk">
            <summary>
Gets a value indicating whether or not the power supply is online.
</summary>
            <value>
                <c>true</c> if power supply is online, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Power.Id">
            <summary>
Gets the identifier of the power supply.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Power.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Power.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Power.#ctor(VxSdk.VxDiagnostics.Power*)">
            <summary>
Constructor.
</summary>
            <param name="power">The power diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Power">
            <summary>
The Power class represents power supply diagnostic information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Network.BandwidthUsed">
            <summary>
Gets the amount of bandwidth in use (in kbps).
</summary>
            <value>The bandwidth in kbps.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Network.BandwidthTotal">
            <summary>
Gets the total amount of bandwidth available (in kbps).
</summary>
            <value>The bandwidth in kbps.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Network.Id">
            <summary>
Gets the identifier of the network.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Network.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Network.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Network.#ctor(VxSdk.VxDiagnostics.Network*)">
            <summary>
Constructor.
</summary>
            <param name="network">The network diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Network">
            <summary>
The Network class represents network diagnostic information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Load.Type">
            <summary>
Gets the type of load this resource is referencing.
</summary>
            <value>The load type.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Load.Percent">
            <summary>
Gets the percentage of the resource being used.
</summary>
            <value>The percentage used.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Load.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Load.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Load.#ctor(VxSdk.VxDiagnostics.Load*)">
            <summary>
Constructor.
</summary>
            <param name="load">The load diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Load">
            <summary>
The Load class represents load diagnostic information. May be used to
indicate load on a CPU, application, etc. The <see cref="P:VxSdkNet.Diagnostics.Load.Type" /> will
distinguish the entity being represented.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Hdd.Status">
            <summary>
Gets the current drive health status.
</summary>
            <value>The drive health status.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Hdd.StatusProgress">
            <summary>
Gets how close the current status operation is to completion (e.g. rebuilding). 
</summary>
            <value>The progress status percentage. Defaults to 0 if no ongoing status operation is in progress.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Hdd.Model">
            <summary>
Gets the model name of the disk.
</summary>
            <value>The model name.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Hdd.Id">
            <summary>
Gets the identifier of the disk.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Hdd.IsOk">
            <summary>
Gets a value indicating whether or not the drive is ok.
</summary>
            <value>
                <c>true</c> if the drive status is ok, <c>false</c> if the drive is failed.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Hdd.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Hdd.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Hdd.#ctor(VxSdk.VxDiagnostics.Hdd*)">
            <summary>
Constructor.
</summary>
            <param name="hdd">The hdd diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Hdd">
            <summary>
The Hdd class represents hard disk drive (HDD) diagnostic information.
Contains information on the health of individual hard disks.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Fan.Rpm">
            <summary>
Gets the RPM of the fan.
</summary>
            <value>The fan RPM.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Fan.Id">
            <summary>
Gets the identifier of the fan.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Fan.IsOk">
            <summary>
Gets a value indicating whether or not the fan is ok.
</summary>
            <value>
                <c>true</c> if the fan status is ok, <c>false</c> if the fan is failed.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Fan.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Fan.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Fan.#ctor(VxSdk.VxDiagnostics.Fan*)">
            <summary>
Constructor.
</summary>
            <param name="fan">The fan diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Fan">
            <summary>
The Fan class represents fan specific diagnostic information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Eventing.EventRate">
            <summary>
Gets the average event rate (events per hour).
</summary>
            <value>The event rate.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Eventing.#ctor(VxSdk.VxDiagnostics.Eventing)">
            <summary>
Constructor.
</summary>
            <param name="eventing">The eventing diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Eventing">
            <summary>
The Eventing class represents eventing information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Database.StatusProgress">
            <summary>
Gets how close the current status operation is to completion (e.g. rebuilding). 
</summary>
            <value>The progress status percentage. Defaults to 0 if no ongoing status operation is in progress.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Database.Id">
            <summary>
Gets the identifier of the database.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Database.Status">
            <summary>
Gets the database health status.
</summary>
            <value>The database health status.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Database.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Database.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Database.#ctor(VxSdk.VxDiagnostics.Database*)">
            <summary>
Constructor.
</summary>
            <param name="database">The database diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Database">
            <summary>
The Database class represents database health information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.BackupPower.Remaining">
            <summary>
Gets the estimated backup time remaining (in minutes).
</summary>
            <value>The remaining backup time (in minutes), 0 if no backup is available.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.BackupPower.Id">
            <summary>
Gets the identifier of the backup power.
</summary>
            <value>The identifier.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.BackupPower.isEnabled">
            <summary>
Gets a value indicating whether or not backup power is in use.
</summary>
            <value>
                <c>true</c> if currently on backup power, <c>false</c> otherwise.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.BackupPower.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.BackupPower.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Diagnostics.BackupPower.#ctor(VxSdk.VxDiagnostics.BackupPower*)">
            <summary>
Constructor.
</summary>
            <param name="backupPower">The backup power diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.BackupPower">
            <summary>
The BackupPower class represents backup power diagnostic information.
</summary>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Assignments.MaxDataSources">
            <summary>
Gets the maximum number of <see cref="T:VxSdkNet.DataSource" /> that may be assigned.
</summary>
            <value>The maximum number of assigned <see cref="T:VxSdkNet.DataSource" />.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Assignments.DataSources">
            <summary>
Gets the number of <see cref="T:VxSdkNet.DataSource" /> currently assigned.
</summary>
            <value>The number of assigned <see cref="T:VxSdkNet.DataSource" />.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Assignments.MaxBitrate">
            <summary>
Gets the maximum bitrate that may be assigned.
</summary>
            <value>The maximum bitrate.</value>
        </member>
        <member name="P:VxSdkNet.Diagnostics.Assignments.Bitrate">
            <summary>
Gets the total bitrate that is currently assigned.
</summary>
            <value>The total bitrate.</value>
        </member>
        <member name="M:VxSdkNet.Diagnostics.Assignments.#ctor(VxSdk.VxDiagnostics.Assignments)">
            <summary>
Constructor.
</summary>
            <param name="assignments">The assignments diagnostic.</param>
        </member>
        <member name="T:VxSdkNet.Diagnostics.Assignments">
            <summary>
The Assignments class represents data session information.
</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.LoadType.Memory">
            <summary>Memory load.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.LoadType.Gpu">
            <summary>GPU load.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.LoadType.Cpu">
            <summary>CPU load.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.LoadType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Diagnostics.LoadType">
            <summary>
Values that represent the type of load being referenced.
</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.HddStatus.Unconfigured">
            <summary>The disk has not been configured.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.HddStatus.Rebuilding">
            <summary>The disk is rebuilding.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.HddStatus.Ok">
            <summary>The disk is OK.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.HddStatus.Missing">
            <summary>The disk missing.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.HddStatus.Failed">
            <summary>The disk has failed.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.HddStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Diagnostics.HddStatus">
            <summary>
Values that represent the health status of a drive.
</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.DatabaseStatus.Recovering">
            <summary>The database is recovering.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.DatabaseStatus.Rebuilding">
            <summary>The database is rebuilding.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.DatabaseStatus.Ok">
            <summary>The database is OK.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.DatabaseStatus.Failed">
            <summary>The database has failed.</summary>
        </member>
        <member name="F:VxSdkNet.Diagnostics.DatabaseStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Diagnostics.DatabaseStatus">
            <summary>
Values that represent the health status of a database.
</summary>
        </member>
        <member name="T:VxSdkNet.Diagnostics">
            <summary>
The Diagnostics class represents a collection of device diagnostics. Each
diagnostic is represented by a list of that diagnostic’s type. When multiple
diagnostics exist in the list, the diagnostic identifier may be used to
distinguish between them.
</summary>
        </member>
        <member name="P:VxSdkNet.DataStorage.Type">
            <summary>
Gets the type of data storage.
</summary>
            <value>The data storage <see cref="T:VxSdkNet.DataStorage.DataStorageTypes">type</see>.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.Retentions">
            <summary>
Gets the resource retention information for this data storage.
</summary>
            <value>A <c>List</c> of retentions.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.Name">
            <summary>
Gets or sets the friendly name of the data storage.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.IsFailover">
            <summary>
Gets a value indicating whether the data storage is configured as a failover unit.
</summary>
            <value>
                <c>true</c> if the data storage is a failover unit, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.Id">
            <summary>
Gets the unique identifier of the data storage.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.HostDevice">
            <summary>
Gets the device that hosts this data storage.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.DeviceAssignments">
            <summary>
Gets the device assignments for this data storage.
</summary>
            <value>A <c>List</c> of device assignments.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.DataSources">
            <summary>
Gets the data sources assigned to this data storage.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="P:VxSdkNet.DataStorage.Configuration">
            <summary>
Gets the device assignments for this data storage.
</summary>
            <value>A <c>List</c> of device assignments.</value>
        </member>
        <member name="M:VxSdkNet.DataStorage.UnassignDevice(VxSdkNet.Device)">
            <summary>
Unassign a device from this data storage.
</summary>
            <param name="device">The device to be unassigned from the data storage.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of unassigning the device.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.GetRetentions(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the resource retention information for this data storage.
<para>Available filters: Id, ResourceId.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of retentions.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.GetDeviceAssignments(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the device assignments for this data storage using an optional collection filter.
<para>Available filters: DataSourceId, DataStorageId, DeviceId, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of device assignments.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.GetDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources assigned to this data storage using an optional collection filter.
<para>Available filters: AdvancedQuery, AllTags, Capturing, Commissioned, Enabled, Encoding, HasFolderTags, Id, Ip, ManualRecording, ModifiedSince, Name, Number, Recording, State, Type, Unassigned.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.AssignDevice(VxSdkNet.NewDeviceAssignment)">
            <summary>
Assign a device to this data storage to be managed and recorded based on its configuration.
</summary>
            <param name="newDeviceAssignment">The new device assignment to be added to the data storage.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of assigning the device.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.AddClip(VxSdkNet.NewClip)">
            <summary>
Saves the data specified in the new clip to this data storage. Once saved, the data will
be represented as a new clip (not immediately available). Data that is already saved will
not be retrieved again. If there is overlap with data that is already saved, only the new
data will be saved.
</summary>
            <param name="newClip">The new clip to add to the data storage.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.DataStorage.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataStorage.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataStorage.#ctor(VxSdk.IVxDataStorage*)">
            <summary>
Constructor.
</summary>
            <param name="vxDataStorage">The vx data storage.</param>
        </member>
        <member name="F:VxSdkNet.DataStorage.DataStorageTypes.Edge">
            <summary>An edge storage device.</summary>
        </member>
        <member name="F:VxSdkNet.DataStorage.DataStorageTypes.VideoXpertStorage">
            <summary>A VideoXpert storage device.</summary>
        </member>
        <member name="F:VxSdkNet.DataStorage.DataStorageTypes.NSM">
            <summary>An NSM network video recorder device.</summary>
        </member>
        <member name="F:VxSdkNet.DataStorage.DataStorageTypes.DigitalSentry">
            <summary>A Digital Sentry device.</summary>
        </member>
        <member name="F:VxSdkNet.DataStorage.DataStorageTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataStorage.DataStorageTypes">
            <summary>
Values that represent data storage hardware types.
</summary>
        </member>
        <member name="T:VxSdkNet.DataStorage">
            <summary>
The DataStorage class represents a data storage provider in the system (e.g. an NSM5200
storage pool or a VxRecorder) hosted by a system device. The DataStorage can be directed
to store media produced by a device by assigning the device to it.
</summary>
        </member>
        <member name="P:VxSdkNet.Retention.Resource">
            <summary>
Gets or sets the reference to the resource.
</summary>
            <value>The resource reference.</value>
        </member>
        <member name="P:VxSdkNet.Retention.OldestRecording">
            <summary>
Gets or sets the time of the oldest recording for the resource.
</summary>
            <value>The oldest recording time.</value>
        </member>
        <member name="M:VxSdkNet.Retention.#ctor(VxSdk.VxRetention*)">
            <summary>
Constructor.
</summary>
            <param name="vxRetention">The vx retention.</param>
        </member>
        <member name="M:VxSdkNet.Retention.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.Retention">
            <summary>
The Retention class represents retention information for a referenced resource.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceRef.Type">
            <summary>
Gets or sets the type of resource being referenced.
</summary>
            <value>The resource type.</value>
        </member>
        <member name="P:VxSdkNet.ResourceRef.Id">
            <summary>
Gets or sets the unique resource identifier. This must match exactly with the unique identifier of
the resource being referenced.
</summary>
            <value>The unique resource identifier.</value>
        </member>
        <member name="M:VxSdkNet.ResourceRef.#ctor(VxSdk.VxResourceRef*)">
            <summary>
Constructor.
</summary>
            <param name="vxResourceRef">The resource ref.</param>
        </member>
        <member name="M:VxSdkNet.ResourceRef.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.Tag">
            <summary>A tag resource.</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.DataStorage">
            <summary>A data storage resource.</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.Drawing">
            <summary>A drawing resource.</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.User">
            <summary>A user resource.</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.Device">
            <summary>A device resource.</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.DataSource">
            <summary>A data source resource.</summary>
        </member>
        <member name="F:VxSdkNet.ResourceRef.ResourceType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.ResourceRef.ResourceType">
            <summary>
Values that represent a type of resource.
</summary>
        </member>
        <member name="T:VxSdkNet.ResourceRef">
            <summary>
The ResourceRef class represents a reference to a resource on the VideoXpert system (i.e. a device, datasource, tag, etc.).
</summary>
        </member>
        <member name="P:VxSdkNet.Driver.Version">
            <summary>
Gets the driver version number.
</summary>
            <value>The version number.</value>
        </member>
        <member name="P:VxSdkNet.Driver.Vendor">
            <summary>
Gets the name of the vendor that manufactured the device that the driver is for.
</summary>
            <value>The name of the vendor.</value>
        </member>
        <member name="P:VxSdkNet.Driver.Type">
            <summary>
Gets the driver type identifier.
</summary>
            <value>The driver type identifier.</value>
        </member>
        <member name="P:VxSdkNet.Driver.Name">
            <summary>
Gets the friendly name of the driver.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="M:VxSdkNet.Driver.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Driver.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Driver.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Driver.#ctor(VxSdk.IVxDriver*)">
            <summary>
Constructor.
</summary>
            <param name="vxDriver">The vx driver.</param>
        </member>
        <member name="T:VxSdkNet.Driver">
            <summary>
The Driver class represents a device communication driver.
</summary>
        </member>
        <member name="P:VxSdkNet.NewDeviceAssignment.VolumeGroupId">
            <summary>
Gets or sets the unique ID of the volume group to use for this device. If not provided, a volume
group will be selected automatically.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewDeviceAssignment.DeviceId">
            <summary>
Gets or sets the unique ID of the device to assign.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.NewDeviceAssignment.DataSourceIds">
            <summary>
Gets the data sources that will be included in this device assignment.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="M:VxSdkNet.NewDeviceAssignment.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewDeviceAssignment">
            <summary>
The NewDeviceAssignment class represents a new device assignment.
</summary>
        </member>
        <member name="P:VxSdkNet.NewClip.StartTime">
            <summary>
Gets or sets the time at which to begin the clip.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.NewClip.EndTime">
            <summary>
Gets or sets the time at which to end the clip.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.NewClip.DataStorageId">
            <summary>
Gets or sets the unique identifier of the data storage to retrieve the data from. The host device type must be
<c>Camera</c> (it must be a camera supporting edge storage).
</summary>
            <value>The unique identifier of the data storage.</value>
        </member>
        <member name="P:VxSdkNet.NewClip.DataSourceId">
            <summary>
Gets or sets the unique identifier of the data source that generated the desired data.
</summary>
            <value>The unique identifier of the data source.</value>
        </member>
        <member name="T:VxSdkNet.NewClip">
            <summary>
The NewClip class represents a request to create a new clip on a data storage using data from another data storage. The new
clip will have the same recording type as the data it is based on, defaulting to Timed. Typically this is used to save data
from a camera supporting edge storage to a recorder.
</summary>
        </member>
        <member name="P:VxSdkNet.DeviceAssignment.VolumeGroupId">
            <summary>
Gets or sets the unique identifier of the volume group to use for this device. If not provided, a volume
group will be selected automatically.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DeviceAssignment.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DeviceAssignment.Id">
            <summary>
Gets the unique identifier of the device assignment.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DeviceAssignment.Device">
            <summary>
Gets the assigned device.
</summary>
            <value>The assigned <see cref="P:VxSdkNet.DeviceAssignment.Device" />.</value>
        </member>
        <member name="P:VxSdkNet.DeviceAssignment.DataStorage">
            <summary>
Gets the data storage that this device assignment is for.
</summary>
            <value>The <see cref="P:VxSdkNet.DeviceAssignment.DataStorage" /> for this assignment.</value>
        </member>
        <member name="P:VxSdkNet.DeviceAssignment.DataSources">
            <summary>
Gets the data sources assigned by this device assignment.
</summary>
            <value>A <c>List</c> of data sources.</value>
        </member>
        <member name="M:VxSdkNet.DeviceAssignment.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DeviceAssignment.GetDataSources(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data sources assigned by this device assignment using an optional collection filter.
<para>Available filters: AdvancedQuery, AllTags, Capturing, Commissioned, Enabled, Encoding, HasFolderTags, Id, Ip, ManualRecording, ModifiedSince, Name, Number, Recording, State, Type, Unassigned.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of data sources.</returns>
        </member>
        <member name="M:VxSdkNet.DeviceAssignment.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DeviceAssignment.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DeviceAssignment.#ctor(VxSdk.IVxDeviceAssignment*)">
            <summary>
Constructor.
</summary>
            <param name="vxDeviceAssignment">The vx device assignment.</param>
        </member>
        <member name="T:VxSdkNet.DeviceAssignment">
            <summary>
The DeviceAssignment class represents a device assignment.
</summary>
        </member>
        <member name="P:VxSdkNet.AlarmInput.Type">
            <summary>
Gets or sets the particular type of this alarm input
</summary>
            <value>The alarm input type.</value>
        </member>
        <member name="P:VxSdkNet.AlarmInput.State">
            <summary>
Gets the current state of this alarm input.
</summary>
            <value>The alarm input state.</value>
        </member>
        <member name="P:VxSdkNet.AlarmInput.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.AlarmInput.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.AlarmInput.Id">
            <summary>
Gets the unique alarm input identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.AlarmInput.HostDevice">
            <summary>
Gets the device that hosts this alarm input.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.AlarmInput.Description">
            <summary>
Gets or sets the friendly description of the alarm input.
</summary>
            <value>The friendly description.</value>
        </member>
        <member name="M:VxSdkNet.AlarmInput.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.AlarmInput.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.AlarmInput.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.AlarmInput.#ctor(VxSdk.IVxAlarmInput*)">
            <summary>
Constructor.
</summary>
            <param name="vxAlarmInput">The vx alarm input.</param>
        </member>
        <member name="F:VxSdkNet.AlarmInput.AlarmInputTypes.Fire">
            <summary>The alarm input is a fire alarm.</summary>
        </member>
        <member name="F:VxSdkNet.AlarmInput.AlarmInputTypes.Alarm">
            <summary>The alarm input is a generic alarm.</summary>
        </member>
        <member name="F:VxSdkNet.AlarmInput.AlarmInputTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AlarmInput.AlarmInputTypes">
            <summary>
Values that represent the types of alarm inputs.
</summary>
        </member>
        <member name="F:VxSdkNet.AlarmInput.AlarmStates.Inactive">
            <summary>The alarm input is inactive.</summary>
        </member>
        <member name="F:VxSdkNet.AlarmInput.AlarmStates.Active">
            <summary>The alarm input is active.</summary>
        </member>
        <member name="F:VxSdkNet.AlarmInput.AlarmStates.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AlarmInput.AlarmStates">
            <summary>
Values that represent the state of an alarm input.
</summary>
        </member>
        <member name="T:VxSdkNet.AlarmInput">
            <summary>
The AlarmInput class represents a physical alarm input.
</summary>
        </member>
        <member name="P:VxSdkNet.AccessPoint.Type">
            <summary>
Gets or sets the particular type of the access point.
</summary>
            <value>The type of access point.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.Status">
            <summary>
Gets a list of the current access point statuses.
</summary>
            <value>An access point status <c>List</c>.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.State">
            <summary>
Gets the current operational state of the access point.
</summary>
            <value>The access point state.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.LinkedRelations">
            <summary>
Gets all possible resource relations for this access point (both linked and non-linked). Each linked resource shall be considered to be related to this access point.
</summary>
            <value>A <c>List</c> of linked resource relations.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.Id">
            <summary>
Gets the unique access point identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.AccessPoint.HostDevice">
            <summary>
Gets the device that hosts this access point.
</summary>
            <value>The host device.</value>
        </member>
        <member name="M:VxSdkNet.AccessPoint.Unlock(System.Int32)">
            <summary>
Unlocks the access point for the given amount of time (in seconds).
</summary>
            <param name="seconds">The unlock time (in seconds). If 0, stay unlocked indefinitely.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of disabling this access point.</returns>
        </member>
        <member name="M:VxSdkNet.AccessPoint.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.AccessPoint.Lock(System.Int32)">
            <summary>
Locks the access point for the given amount of time (in seconds).
</summary>
            <param name="seconds">The lock time (in seconds). If 0, stay locked indefinitely.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of disabling this access point.</returns>
        </member>
        <member name="M:VxSdkNet.AccessPoint.GetRelations(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets all possible resource relations for this access point (both linked and non-linked). Each linked
resource shall be considered to be related to this access point.
<para>Available filters: kAdvancedQuery, kAllTags, kAllPrivateTags, kLinked.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of related resources.</returns>
        </member>
        <member name="M:VxSdkNet.AccessPoint.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.AccessPoint.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.AccessPoint.#ctor(VxSdk.IVxAccessPoint*)">
            <summary>
Constructor.
</summary>
            <param name="vxAccessPoint">The vx access point.</param>
        </member>
        <member name="F:VxSdkNet.AccessPoint.DeviceStates.Online">
            <summary>The device is online.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.DeviceStates.Offline">
            <summary>The device is offline.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.DeviceStates.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AccessPoint.DeviceStates">
            <summary>
Values that represent the operational state of a device.
</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Unlocked">
            <summary>The access point is unlocked.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Propped">
            <summary>The access point has been propped.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Opened">
            <summary>The access point is open.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Locked">
            <summary>The access point is locked.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Forced">
            <summary>The access point has been forced.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Faulted">
            <summary>The access point has faulted.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Closed">
            <summary>The access point is closed.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AccessPoint.AccessStatus">
            <summary>
Values that represent possible statuses for an access point.
</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessPointType.Gate">
            <summary>A gate.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessPointType.DoorWithReader">
            <summary>A door with a reader.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessPointType.Door">
            <summary>A door.</summary>
        </member>
        <member name="F:VxSdkNet.AccessPoint.AccessPointType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AccessPoint.AccessPointType">
            <summary>
Values that represent a particular type of access point.
</summary>
        </member>
        <member name="T:VxSdkNet.AccessPoint">
            <summary>
The AccessPoint class represents an access control service (e.g. a door control
or badge reader), typically hosted by an access controller <see cref="T:VxSdkNet.Device" />.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceRel.Resource">
            <summary>
Gets the related resource.
</summary>
            <value>The related resource.</value>
        </member>
        <member name="P:VxSdkNet.ResourceRel.IsLinked">
            <summary>
Gets or sets whether the resource is linked to its parent.
</summary>
            <value>
                <c>true</c> if this resource is linked to its parent, <c>false</c> if not linked.</value>
        </member>
        <member name="M:VxSdkNet.ResourceRel.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.ResourceRel.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ResourceRel.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ResourceRel.#ctor(VxSdk.IVxResourceRel*)">
            <summary>
Constructor.
</summary>
            <param name="vxResourceRel">The vx relative resource.</param>
        </member>
        <member name="T:VxSdkNet.ResourceRel">
            <summary>
The ResourceRel class represents a related resource; that is, a resource that is related in some way
to a parent resource.  This related resource may be linked to its parent resource for some effect.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSource.VxLinkedPtzInfo">
            <summary>
Gets information on any data sources that are tracking this data source. Only available if this data
source supports linked PTZ. 
</summary>
            <value>A <c>List</c> of linked PTZ info resources.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.VideoRelations">
            <summary>
Gets all possible video resource relations for this data source (both linked and non-linked).
Each linked resource shall be considered to be associated to this data source while non-linked resources
shall not be (they are available to be associated).
</summary>
            <value>A <c>List</c> of related video resources.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.VideoEncodingConfigurations">
            <summary>
Gets the video encoding configurations for this data source, if supported.
</summary>
            <value>A <c>List</c> of the video encoding configurations for this data source.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Type">
            <summary>
Gets the type of media this data source contains.
</summary>
            <value>The media type.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Tags">
            <summary>
Gets the tags associated with this data source.
</summary>
            <value>A <c>List</c> of the associated tags.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.State">
            <summary>
Gets the current operational state of the associated device.
</summary>
            <value>The current device state.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.SourceEndpoint">
            <summary>
Gets the source URI of the data source.
</summary>
            <value>The source URI.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.SnapshotUri">
            <summary>
Gets the URI to retrieve the current live frame.
</summary>
            <value>The JPEG URI.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.SmartCompressionConfiguration">
            <summary>
Gets the smart compression configuration for this data source, if supported.
</summary>
            <value>The smart compression if supported by this data source, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.RtspEndpoint">
            <summary>
Gets the RTSP stream endpoint URI.
</summary>
            <value>The RTSP endpoint.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.RetentionLimit">
            <summary>
Gets or sets the maximum retention (in hours) that the system will keep recorded data for this data
source. Any recorded data that exceeds this limit will be deleted. If <see cref="P:VxSdkNet.Configuration.Storage.RetentionLimit" />
is also set, the lowest non-zero value will be used. A value of 0 means no retention limit will be used.
</summary>
            <value>The retention limit (in hours).</value>
        </member>
        <member name="P:VxSdkNet.DataSource.PTZController">
            <summary>
Gets the <see cref="T:VxSdkNet.PtzController" /> associated with this data source.
</summary>
            <value>
                <c>nullptr</c> if PTZ is not supported on the device, else the <see cref="T:VxSdkNet.PtzController" />.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.PtzConfiguration">
            <summary>
Gets the PTZ configuration for this data source, if supported.
</summary>
            <value>The PTZ if supported by this data source, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.PruningThreshold">
            <summary>
Gets or sets the threshold, in hours, after which recordings older than this are eligible for pruning.
Any recorded media retained longer than the threshold will be pruned as needed to free space on disk
for recording. If set, this value overrides the threshold in Configuration::Storage. This is only
applicable when the data source type is video. A value of 0 will disable pruning.
</summary>
            <value>The threshold, in hours.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Number">
            <summary>
Gets or sets the number used to designate the data source.
</summary>
            <value>The data source number.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Name">
            <summary>
Gets or sets the friendly name.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.MultiviewInfo">
            <summary>
Gets the multiple viewer information for this data source.  This information contains details on the
current viewers of this data source.
</summary>
            <value>A <c>List</c> of user information for all viewers of this data source.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.MotionConfig">
            <summary>
Gets the motion detection configuration for this data source, if supported.
</summary>
            <value>The motion configuration if supported by this data source, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.MotionConfiguration">
            <summary>
[DEPRECATED] Gets the motion detection configuration for this data source, if supported.
</summary>
            <value>The motion configuration if supported by this data source, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.MetadataRelations">
            <summary>
Gets all possible metadata resource relations for this data source (both linked and non-linked).
Each linked resource shall be considered to be associated to this data source while non-linked resources
shall not be (they are available to be associated).
</summary>
            <value>A <c>List</c> of related audio resources.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.MemberSystem">
            <summary>
Gets the member system that this data source resides in.
</summary>
            <value>The member.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.LinkedMetadataRelations">
            <summary>
Gets the currently linked metadata resource relations for this data source, if any.
</summary>
            <value>A <c>List</c> of linked metadata resource relations.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.LinkedAudioRelation">
            <summary>
Gets the currently linked audio resource relation for this data source, if any.
</summary>
            <value>The linked audio resource if available, otherwise <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.IsEnabled">
            <summary>
Gets a value indicating whether the data source is currently recording.
</summary>
            <value>
                <c>true</c> if recording, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.IsPTZ">
            <summary>
Gets a value indicating whether PTZ is enabled.
</summary>
            <value>
                <c>true</c> if PTZ is enabled, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.IsRecording">
            <summary>
Gets a value indicating whether the data source is currently recording.
</summary>
            <value>
                <c>true</c> if recording, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.IsManuallyRecording">
            <summary>
Gets a value indicating whether the data source is currently being manually recorded (by one
or more data storage).
</summary>
            <value>
                <c>true</c> if manually recording, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.IsCapturing">
            <summary>
Gets a value indicating whether this data source is currently being captured by a recorder.
</summary>
            <value>
                <c>true</c> if capturing, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Ip">
            <summary>
Gets the IP.
</summary>
            <value>The IP.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Index">
            <summary>
Gets the zero-based index (per host device) indicating the "position" of the data source (per data source type)
within the host device.
</summary>
            <value>The data source index.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Id">
            <summary>
Gets the unique identifier for this data source.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.HostDevice">
            <summary>
Gets the device that hosts this data source.
</summary>
            <value>The host device.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.HasRecordedVideo">
            <summary>
Gets a value indicating whether the recorded video is available.
</summary>
            <value>
                <c>true</c> if recorded video is available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.HasLiveStream">
            <summary>
Gets a value indicating whether the live stream is available.
</summary>
            <value>
                <c>true</c> if live is available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Gaps">
            <summary>
Gets the gaps for this data source.
</summary>
            <value>A <c>List</c> of gaps for this data source.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Encoding">
            <summary>
Gets the encoding mime type.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSource.EdgeClips">
            <summary>
Gets the edge clips associated with this data source; may take a long time (minutes).
</summary>
            <value>A <c>List</c> of the associated edge clips.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.DataStorages">
            <summary>
Gets the data storages that this data source is associated with.
</summary>
            <value>A <c>List</c> of the associated data storages.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.DataInterfaces">
            <summary>
Gets all interfaces available for retrieval of data from this data source.
</summary>
            <value>A <c>List</c> of the data interfaces.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Clips">
            <summary>
Gets the clips associated with this data source.
</summary>
            <value>A <c>List</c> of the associated clips.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Capabilities">
            <summary>
Gets the list of capabilities supported by this data source, if any.
</summary>
            <value>A <c>List</c> of supported capabilities.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.CanPixelSearch">
            <summary>
Gets a value indicating whether pixel search is available for this data source.
</summary>
            <value>
                <c>true</c> if pixel search is available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.Bookmarks">
            <summary>
Gets the bookmarks associated with this data source.
</summary>
            <value>A <c>List</c> of all associated bookmarks.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.AvailableAnalyticBehaviorTypes">
            <summary>
Gets the list of analytic behavior types available for this data source, if any.
</summary>
            <value>A <c>List</c> of available analytic behavior types.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.AudioRelations">
            <summary>
Gets all possible audio resource relations for this data source (both linked and non-linked).
Each linked resource shall be considered to be associated to this data source while non-linked resources
shall not be (they are available to be associated).
</summary>
            <value>A <c>List</c> of related audio resources.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.AnalyticSessions">
            <summary>
Gets all of the analytic sessions for this data source.
</summary>
            <value>A <c>List</c> of analytic sessions.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.AnalyticConfigs">
            <summary>
Get the analytic configurations for this data source.
</summary>
            <value>A <c>List</c> of analytic configurations.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.AnalyticCapabilities">
            <summary>
Gets the list of analytic capabilities supported by this data source, if any.
</summary>
            <value>A <c>List</c> of supported analytic capabilities.</value>
        </member>
        <member name="P:VxSdkNet.DataSource.AllDataStorages">
            <summary>
Gets all data storages associated with this data source; includes edge and failover data storages.
</summary>
            <value>A <c>List</c> of all associated data storages.</value>
        </member>
        <member name="M:VxSdkNet.DataSource.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetVideoRelations(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get all possible video resource relations for this data source (both linked and non-linked) using an optional collection filter.
Each linked resource shall be considered to be associated to this data source while non-linked resources
shall not be (they are available to be associated).
<para>Available filters: AdvancedQuery, AllTags, AllPrivateTags, Linked.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of related video resources.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetTags(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the tags associated with this data source using an optional collection filter.
<para>Available filters: AdvancedQuery, Folder, Id, ModifiedSince, Name, Owned, Owner, ParentId, ResourceId, ResourceType.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of the associated tags.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetMetadataSnapshotEndpoint(System.ValueType!System.DateTime!System.Runtime.CompilerServices.IsBoxed)">
            <summary>
Gets the URI to the download location of a metadata "snapshot" from this data source. 
</summary>
            <param name="time">The point in time of the metadata to return (defaults to the current time if <c>null</c>).</param>
            <returns>The metadata snapshot endpoint (when present).</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetMetadataRelations(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get all possible metadata resource relations for this data source (both linked and non-linked) using an optional collection filter.
Each linked resource shall be considered to be associated to this data source while non-linked resources
shall not be (they are available to be associated).
<para>Available filters: AdvancedQuery, AllTags, AllPrivateTags, Linked.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of related audio resources.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetLineCounts(VxSdkNet.LineCountingRequest)">
            <summary>
Gets the requested line counts for this data source.
</summary>
            <param name="lineCountingRequest">The requested line counts.</param>
            <returns>A <c>List</c> of line counts for this data source, if any.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetGaps(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the gaps for this data source using an optional collection filter.
<para>Available filters: DataStorageId, SearchEndTime, SearchStartTime, StartTime.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of gaps for this data source.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetEdgeClips(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the edge clips associated with this data source using an optional collection filter; may take a long time (minutes).
<para>Available filters: DataSourceId, EndTime, Event, Framerate, SearchEndTime, SearchStartTime, StartTime.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of the associated edge clips.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetDataStorages(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the data storages that this data source is associated with using an optional collection filter.
<para>Available filters: AdvancedQuery, Commissioned, Id, ModifiedSince, Name, Type.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of the associated data storages.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetClips(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the clips associated with this data source using an optional collection filter.
<para>Available filters: DataSourceId, EndTime, Event, Framerate, SearchEndTime, SearchStartTime, StartTime.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of the associated clips.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetBookmarks(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the bookmarks associated with this data source using an optional collection filter.
<para>Available filters: AdvancedQuery, DataSourceId, DataSourceType, Description, GroupId, Id, Locked, ModifiedSince, Name, SearchEndTime, SearchStartTime, Time.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of all associated bookmarks.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetAudioRelations(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get all possible audio resource relations for this data source (both linked and non-linked) using an optional collection filter.
Each linked resource shall be considered to be associated to this data source while non-linked resources
shall not be (they are available to be associated).
<para>Available filters: AdvancedQuery, AllTags, AllPrivateTags, Linked.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of related audio resources.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetAnalyticConfigs(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the analytic configs for this data source.
<para>Available filters: AdvancedQuery, PtzPresetName, Id, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of analytic configs.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetAnalyticSessions(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Gets the analytic sessions for this data source.
<para>Available filters: AdvancedQuery, DataSourceId, DeviceId, Id, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of analytic sessions.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.GetAllDataStorages(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get all data storages associated with this data source; includes edge and failover data storages using an optional collection filter.
<para>Available filters: AdvancedQuery, Commissioned, Id, ModifiedSince, Name, Type.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of all associated data storages.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.DeletePixelSearch(VxSdkNet.PixelSearch)">
            <summary>
Delete a pixel search result.
</summary>
            <param name="pixelSearchItem">The pixel search to be deleted.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the pixel search.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.DeleteAnalyticSession(VxSdkNet.AnalyticSession)">
            <summary>
Delete an analytic session from this data source.
</summary>
            <param name="analyticSession">The analytic session to be deleted from the data source.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the analytic session.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.DeleteAnalyticConfig(VxSdkNet.AnalyticConfig)">
            <summary>
Delete an analytic config from this data source.
</summary>
            <param name="analyticConfig">The analytic config to be deleted from the data source.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the analytic config.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.CreatePixelSearch(VxSdkNet.NewPixelSearch)">
            <summary>
Create a new pixel search for this data source.
</summary>
            <param name="newPixelSearch">The new pixel search to be created.</param>
            <returns>
                <c>nullptr</c> if it fails, else the new pixel search result.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.CreateMjpegStream">
            <summary>
Create a new MJPEG stream.
</summary>
            <returns>
                <c>nullptr</c> if it fails, else the new MJPEG streams <see cref="T:VxSdkNet.DataSession" />.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.AddAnalyticSession(VxSdkNet.NewAnalyticSession)">
            <summary>
Adds a new analytic session for this data source.
</summary>
            <param name="newAnalyticSession">The new analytic session to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the analytic session.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.AddAnalyticConfig(VxSdkNet.NewAnalyticConfig)">
            <summary>
Adds a new analytic config for this data source.
</summary>
            <param name="newAnalyticConfig">The new analytic config to be added.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the analytic config.</returns>
        </member>
        <member name="M:VxSdkNet.DataSource.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSource.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSource.#ctor(VxSdk.IVxDataSource*)">
            <summary>
Constructor.
</summary>
            <param name="vxDataSource">The vx data source.</param>
        </member>
        <member name="F:VxSdkNet.DataSource.Types.Metadata">
            <summary>A metadata data source.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.Types.Audio">
            <summary>An audio data source.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.Types.Video">
            <summary>A video data source.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.Types.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSource.Types">
            <summary>
Values that represent the particular type of a data source.
</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.States.Online">
            <summary>The device is online.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.States.Offline">
            <summary>The device is offline.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.States.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSource.States">
            <summary>
Values that represent the operational state of a device.
</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.DataSourceCapability.Zoom">
            <summary>Zoom capability.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.DataSourceCapability.PanTilt">
            <summary>Pan/tilt capability.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.DataSourceCapability.Iris">
            <summary>Iris capability.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.DataSourceCapability.Focus">
            <summary>Focus capability.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.DataSourceCapability.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSource.DataSourceCapability">
            <summary>
Values that represent a capability supported by a data source.
</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticCapability.ObjectLineCounterReset">
            <summary>Capable of resetting the count values of an object line counter behavior.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticCapability.ObjectLineCounterEvents">
            <summary>Line-based object counting events related to the object line counter behavior.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticCapability.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSource.AnalyticCapability">
            <summary>
Values that represent analytic capabilities that are supported for analytic configs.
</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticBehaviorType.ObjectWrongWay">
            <summary>Object wrong-way zone AnalyticBehavior.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticBehaviorType.ObjectInZone">
            <summary>Object detected in zone analytic.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticBehaviorType.ObjectLineCounter">
            <summary>Object line counting analytic.</summary>
        </member>
        <member name="F:VxSdkNet.DataSource.AnalyticBehaviorType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSource.AnalyticBehaviorType">
            <summary>
Values that represent the type of analytic behavior being performed.
</summary>
        </member>
        <member name="T:VxSdkNet.DataSource">
            <summary>
The DataSource class represents a data producer in the system hosted by a device. Each
DataSource provides a list of DataInterface, each of which provides a particular protocol
used to transmit and control the data produced by this DataSource.
</summary>
        </member>
        <member name="P:VxSdkNet.PtzController.Z">
            <summary>
Gets or sets the Z coordinate absolute position (zoom).
</summary>
            <value>The current Z coordinate.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.Y">
            <summary>
Gets or sets the Y coordinate absolute position (tilt).
</summary>
            <value>The current Y coordinate.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.X">
            <summary>
Gets or sets the X coordinate absolute position (pan).
</summary>
            <value>The current X coordinate.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.PTZLock">
            <summary>
Gets the <see cref="T:VxSdkNet.PtzLock" /> associated with this ptz controller.
</summary>
            <value>
                <c>nullptr</c> if no ptz lock is available, else the <see cref="T:VxSdkNet.PtzLock" />.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.PTZLimits">
            <summary>
Gets the <see cref="T:VxSdkNet.PtzLimits" /> for this ptz controller.
</summary>
            <value>
                <c>nullptr</c> if no ptz limits are available, else the <see cref="T:VxSdkNet.PtzLimits" />.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.Presets">
            <summary>
Gets the available presets.
</summary>
            <returns>A <c>List</c> of presets.</returns>
        </member>
        <member name="P:VxSdkNet.PtzController.Patterns">
            <summary>
Gets the available patterns.
</summary>
            <returns>A <c>List</c> of patterns.</returns>
        </member>
        <member name="P:VxSdkNet.PtzController.LockExpireTime">
            <summary>
Gets the time remaining (in seconds) until the PTZ lock expires.
</summary>
            <value>The expire time in seconds.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.PtzController.IsLocked">
            <summary>
Gets a value indicating whether the PTZ control is locked.
</summary>
            <value>
                <c>true</c> if locked, <c>false</c> if not.</value>
        </member>
        <member name="M:VxSdkNet.PtzController.TriggerRefresh">
            <summary>
Triggers a refresh of this <see cref="T:VxSdkNet.PtzController" /> on the VideoXpert system; updating its <see cref="T:VxSdkNet.Pattern">patterns</see>
and <see cref="T:VxSdkNet.Preset">presets</see> based on the current camera configuration.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of refreshing the <see cref="T:VxSdkNet.PtzController" />.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.TriggerPreset(VxSdkNet.Preset)">
            <summary>
Trigger a preset.
</summary>
            <param name="preset">The <see cref="T:VxSdkNet.Preset" /> to trigger.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of triggering the preset.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.TriggerPreset(System.Int32)">
            <summary>
Triggers a preset by index.
</summary>
            <param name="index">The index of the preset to trigger.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of triggering the preset.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.TriggerPattern(VxSdkNet.Pattern)">
            <summary>
Trigger a pattern.
</summary>
            <param name="pattern">The <see cref="T:VxSdkNet.Pattern" /> to trigger.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of triggering the pattern.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.Stop">
            <summary>
Stops all PTZ actions.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the stop call.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.RepositionPreset(VxSdkNet.Preset)">
            <summary>
Repositions a preset to the current PTZ spatial coordinates.
</summary>
            <param name="preset">The <see cref="T:VxSdkNet.Preset" /> to reposition.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of repositioning the preset.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32)">
            <summary>
Moves the camera position within a percentage relative to the device’s current field of view.
</summary>
            <remarks>
The rotational x and y parameters are used to move within a percentage of the current field of view of the camera. For
instance, if the x parameter were 50 and the y parameter were -50, the pan/tilt would move halfway to the edge of
the field of view along the x axis and halfway to the field of view along the negative y axis from its present position.
</remarks>
            <param name="percentageX">Percentage of the current field of view of the camera (X axis). Positive values are to the
right, negative  values are to the left. Range: -100 to 100.</param>
            <param name="percentageY">Percentage of the current field of view of the camera (Y axis). Positive values are
up, negative values are down. Range: -100 to 100.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the relative percentage move.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.RelativeMove(System.Int32,System.Int32,System.Int32)">
            <summary>
Moves the camera position relative to the current position.
</summary>
            <param name="deltaX">The degree to pan relative to the current X position.  Negative values pan  left, positive
values pan right.</param>
            <param name="deltaY">The degree to tilt relative to the current Y position.  Negative values pan left, positive
values pan right.</param>
            <param name="deltaZ">The magnification level relative to the current Z position.  Negative values pan left, positive
values pan right.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the relative move.
</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.GetPresets(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the available presets using an optional collection filter.
<para>Available filters: ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of presets.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.GetPatterns(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the available patterns using an optional collection filter.
<para>Available filters: ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of patterns.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.DeletePreset(VxSdkNet.Preset)">
            <summary>
Deletes a preset from the system.
</summary>
            <param name="preset">The <see cref="T:VxSdkNet.Preset" /> to delete.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the preset.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.ContinuousMoveAtSpeed(System.Int32,System.Int32,System.Int32)">
            <summary>
Continuously move the field of view at the given speed until stopped.
</summary>
            <remarks>
The minimum/maximum speed values for each parameter may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="speedX">Pan speed. Negative values pan left, positive values pan right.</param>
            <param name="speedY">Tilt speed. Negative values tilt downward, positive values tilt upward.</param>
            <param name="speedZ">Zoom speed. Negative values zoom out, positive values zoom in.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the continuous move.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.ContinuousMove(System.Int32,System.Int32,VxSdkNet.PtzController.ZoomDirections)">
            <summary>
Continuously move the field of view at the given speed percentage until stopped.
</summary>
            <param name="speedX">Pan speed. Negative values pan left, positive values pan right.</param>
            <param name="speedY">Tilt speed. Negative values tilt downward, positive values tilt upward.</param>
            <param name="inOut">The direction to zoom.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the continuous move.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.ContinuousIrisAtSpeed(System.Int32)">
            <summary>
Continuously opens or closes the iris at the given speed.
</summary>
            <remarks>
The minimum/maximum iris speed values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="irisSpeed">Iris speed. Negative values close the iris, positive values open the iris.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the iris call.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.ContinuousIris(VxSdkNet.PtzController.IrisDirections)">
            <summary>
Open or close the iris until the user wants to stop.
</summary>
            <param name="openClose">The direction to change the iris.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the iris call.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.ContinuousFocusAtSpeed(System.Int32)">
            <summary>
Continuously focuses near or far at the given speed.
</summary>
            <remarks>
The minimum/maximum focus speed values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="focusSpeed">Focus speed. Negative values focus near, positive values focus far.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the focus call.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.ContinuousFocus(VxSdkNet.PtzController.FocusDirections)">
            <summary>
Focus near or far until the user wants to stop.
</summary>
            <param name="nearFar">The direction to focus.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the focus call.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AddPreset(System.Int32)">
            <summary>
Creates a new preset using the current PTZ spatial coordinates.
</summary>
            <param name="index">The unique index value for the new preset.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the adding the preset.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AddDigitalPreset(VxSdkNet.NewDigitalPtzPreset)">
            <summary>
Creates a new digital PTZ preset. This preset will represent the given spatial coordinates.
</summary>
            <param name="newDigitalPtzPreset">The new digital PTZ preset.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the adding the digital PTZ preset.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AbsoluteZoom(System.Int32)">
            <summary>
Zoom to the absolute position of the given coordinates.
</summary>
            <remarks>
The minimum/maximum Z coordinate values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="positionZ">The Z coordinate absolute position (zoom).</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the absolute zoom.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AbsoluteTilt(System.Int32)">
            <summary>
Tilt to the absolute position of the given coordinate.
</summary>
            <remarks>
The minimum/maximum Y coordinate values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the absolute tilt.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AbsolutePan(System.Int32)">
            <summary>
Pan to the absolute position of the given coordinate.
</summary>
            <remarks>
The minimum/maximum X coordinate values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the absolute pan.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AbsoluteMove(System.Int32,System.Int32,System.Int32)">
            <summary>
Move to the absolute position of the given coordinates.
</summary>
            <remarks>
The minimum/maximum X, Y, and Z coordinate values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <param name="positionZ">The Z coordinate absolute position (zoom).</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the absolute move.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.AbsoluteMove(System.Int32,System.Int32)">
            <summary>
Move to the absolute position of the given coordinates.
</summary>
            <remarks>
The minimum/maximum X and Y coordinate values may be retrieved from <c>PtzLimits</c>.
</remarks>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the absolute move.</returns>
        </member>
        <member name="M:VxSdkNet.PtzController.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.PtzController.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.PtzController.#ctor(VxSdk.IVxPtzController*)">
            <summary>
Constructor.
</summary>
            <param name="ptzController">The ptz controller.</param>
        </member>
        <member name="F:VxSdkNet.PtzController.ZoomDirections.Out">
            <summary>Zoom out.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.ZoomDirections.In">
            <summary>Zoom in.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.ZoomDirections.Stop">
            <summary>Stop zoom movement.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.ZoomDirections.None">
            <summary>Do not perform a zoom action.</summary>
        </member>
        <member name="T:VxSdkNet.PtzController.ZoomDirections">
            <summary>
Values that represent zoom directions.
</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.FocusDirections.Near">
            <summary>Focus near.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.FocusDirections.Far">
            <summary>Focus far.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.FocusDirections.Stop">
            <summary>Stop focus movement.</summary>
        </member>
        <member name="T:VxSdkNet.PtzController.FocusDirections">
            <summary>
Values that represent focus directions.
</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.IrisDirections.Open">
            <summary>Open the iris.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.IrisDirections.Close">
            <summary>Close the iris.</summary>
        </member>
        <member name="F:VxSdkNet.PtzController.IrisDirections.Stop">
            <summary>Stop iris movement.</summary>
        </member>
        <member name="T:VxSdkNet.PtzController.IrisDirections">
            <summary>
Values that represent iris directions.
</summary>
        </member>
        <member name="T:VxSdkNet.PtzController">
            <summary>
The PtzController class can be created for a device that has pan, tilt, and/or zoom functionality.
</summary>
        </member>
        <member name="P:VxSdkNet.PtzLock.Owner">
            <summary>
Gets the name of the user that has locked the ptz controller, if any.
</summary>
            <value>The owner if it is set, else <c>nullptr</c>.</value>
        </member>
        <member name="P:VxSdkNet.PtzLock.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.PtzLock.IsLocked">
            <summary>
Gets a value indicating whether the lock is active.
</summary>
            <value>
                <c>true</c> if locked, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLock.Id">
            <summary>
Gets the unique identifier of the ptz lock.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.PtzLock.ExpireTime">
            <summary>
Gets the amount of time (in seconds) that the ptz lock will be held.
</summary>
            <value>The lock expire time in seconds.</value>
        </member>
        <member name="M:VxSdkNet.PtzLock.Unlock">
            <summary>
Unlock the ptz control.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.PtzLock.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.PtzLock.Lock(System.Int32)">
            <summary>
Lock the ptz control.
</summary>
            <param name="expireTime">The amount of time (in seconds) that the ptz lock will be
held. The lock will not expire until it is explicitly unlocked if set to 0.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdkNet.PtzLock.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.PtzLock.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.PtzLock.#ctor(VxSdk.IVxPtzLock*)">
            <summary>
Constructor.
</summary>
            <param name="vxPtzLock">The ptz lock.</param>
        </member>
        <member name="T:VxSdkNet.PtzLock">
            <summary>
The PtzLock class represents a lock for a ptz controller.
</summary>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinSpeedZ">
            <summary>
Gets the zoom speed minimum limit.
</summary>
            <value>The minimum zoom speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinSpeedY">
            <summary>
Gets the tilt speed minimum limit.
</summary>
            <value>The minimum tilt speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinSpeedX">
            <summary>
Gets the pan speed minimum limit.
</summary>
            <value>The minimum pan speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinSpeedIris">
            <summary>
Gets the iris speed minimum limit.
</summary>
            <value>The minimum iris speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinSpeedFocus">
            <summary>
Gets the focus speed minimum limit.
</summary>
            <value>The minimum focus speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinPositionZ">
            <summary>
Gets the Z coordinate minimum limit.
</summary>
            <value>The minimum Z coordinate, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinPositionY">
            <summary>
Gets the Y coordinate minimum limit.
</summary>
            <value>The minimum Y coordinate, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MinPositionX">
            <summary>
Gets the X coordinate minimum limit.
</summary>
            <value>The minimum X coordinate, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxSpeedZ">
            <summary>
Gets the zoom speed maximum limit.
</summary>
            <value>The maximum zoom speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxSpeedY">
            <summary>
Gets the tilt speed maximum limit.
</summary>
            <value>The maximum tilt speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxSpeedX">
            <summary>
Gets the pan speed maximum limit.
</summary>
            <value>The maximum pan speed.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxSpeedIris">
            <summary>
Gets the iris speed maximum limit.
</summary>
            <value>The maximum iris speed, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxSpeedFocus">
            <summary>
Gets the focus speed maximum limit.
</summary>
            <value>The maximum focus speed, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxPositionZ">
            <summary>
Gets the Z coordinate maximum limit.
</summary>
            <value>The maximum Z coordinate, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxPositionY">
            <summary>
Gets the Y coordinate maximum limit.
</summary>
            <value>The maximum Y coordinate, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.MaxPositionX">
            <summary>
Gets the X coordinate maximum limit.
</summary>
            <value>The maximum X coordinate, 0 if limit is unavailable.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitSpeedZ">
            <summary>
Gets a value indicating whether the Z speed limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitSpeedY">
            <summary>
Gets a value indicating whether the Y speed limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitSpeedX">
            <summary>
Gets a value indicating whether the X speed limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitSpeedIris">
            <summary>
Gets a value indicating whether the iris speed limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitSpeedFocus">
            <summary>
Gets a value indicating whether the focus speed limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitPositionZ">
            <summary>
Gets a value indicating whether the Z coordinate limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitPositionY">
            <summary>
Gets a value indicating whether the Y coordinate limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.PtzLimits.HasLimitPositionX">
            <summary>
Gets a value indicating whether the X coordinate limits are available.
</summary>
            <value>
                <c>true</c> if the limits are available, <c>false</c> if not.</value>
        </member>
        <member name="M:VxSdkNet.PtzLimits.#ctor(VxSdk.VxPtzLimits*)">
            <summary>
Constructor.
</summary>
            <param name="vxPtzLimits">The ptz limits.</param>
        </member>
        <member name="T:VxSdkNet.PtzLimits">
            <summary>
The PtzLimits class represents the value limits for a ptz controller.
</summary>
        </member>
        <member name="P:VxSdkNet.Preset.Z">
            <summary>
Gets the Z (zoom) coordinate absolute position relative to the 0 position.
The 0 position is minimum zoom while the 100 position is maximum zoom (digital presets only).
</summary>
            <value>The z coordinate.</value>
        </member>
        <member name="P:VxSdkNet.Preset.Y">
            <summary>
Gets the Y (tilt) coordinate absolute position, in degrees, relative to the (0, 0) position.
The -180 position is bottommost while the 180 position is topmost (digital presets only).
</summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:VxSdkNet.Preset.X">
            <summary>
Gets the X (pan) coordinate absolute position, in degrees, relative to the (0, 0) position.
The -180 position is leftmost while the 180 position is rightmost (digital presets only).
</summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:VxSdkNet.Preset.Name">
            <summary>
Gets the friendly name of the preset.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Preset.IsDigital">
            <summary>
Gets whether this preset is digital.
</summary>
            <value>
                <c>true</c> if a digital preset, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Preset.Index">
            <summary>
Gets the unique numerical sequence value of this preset.
</summary>
            <value>The unique numerical sequence value.</value>
        </member>
        <member name="P:VxSdkNet.Preset.Description">
            <summary>
Gets the friendly description of the preset.
</summary>
            <value>The friendly description.</value>
        </member>
        <member name="M:VxSdkNet.Preset.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Preset.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Preset.#ctor(VxSdk.IVxPreset*)">
            <summary>
Constructor.
</summary>
            <param name="vxPreset">The vx preset.</param>
        </member>
        <member name="T:VxSdkNet.Preset">
            <summary>
The Preset class represents a predefined point that a PTZ device can PTZ to when triggered.
</summary>
        </member>
        <member name="P:VxSdkNet.NewPixelSearch.Zones">
            <summary>
Gets or sets the rectangular areas indicating the selected zones to search (0,0 to 999,999).
</summary>
            <value>The search zones.</value>
        </member>
        <member name="P:VxSdkNet.NewPixelSearch.SearchStartTime">
            <summary>
Gets or sets the inclusive bounds to the latest results to retrieve. Defaults to the most current results available.
</summary>
            <value>The search start time.</value>
        </member>
        <member name="P:VxSdkNet.NewPixelSearch.SearchEndTime">
            <summary>
Gets or sets the inclusive bounds to the earliest results to retrieve. Defaults to the oldest results available.
</summary>
            <value>The search end time.</value>
        </member>
        <member name="P:VxSdkNet.NewPixelSearch.Rows">
            <summary>
Gets or sets the number of rows in the search grid (1 to 1000).
</summary>
            <value>The rows in the search grid.</value>
        </member>
        <member name="P:VxSdkNet.NewPixelSearch.Columns">
            <summary>
Gets or sets the number of columns in the search grid (1 to 1000).
</summary>
            <value>The columns in the search grid.</value>
        </member>
        <member name="M:VxSdkNet.NewPixelSearch.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewPixelSearch">
            <summary>
The NewPixelSearch class represents a new pixel search request. It uses a square grid composed of rows and columns
with zones indicating the areas of the grid to search. The grid uses a cartesian coordinate system with 0-based indices.
</summary>
        </member>
        <member name="P:VxSdkNet.Rect.Width">
            <summary>
Gets or sets the width.
</summary>
            <value>The width value.</value>
        </member>
        <member name="P:VxSdkNet.Rect.Top">
            <summary>
Gets or sets the top coordinate position.
</summary>
            <value>The top coordinate position.</value>
        </member>
        <member name="P:VxSdkNet.Rect.Left">
            <summary>
Gets or sets the left coordinate position.
</summary>
            <value>The left coordinate position.</value>
        </member>
        <member name="P:VxSdkNet.Rect.Height">
            <summary>
Gets or sets the height.
</summary>
            <value>The height value.</value>
        </member>
        <member name="M:VxSdkNet.Rect.#ctor(VxSdk.VxRect*)">
            <summary>
Constructor.
</summary>
            <param name="vxRect">The vx monitor position.</param>
        </member>
        <member name="M:VxSdkNet.Rect.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.Rect">
            <summary>
The Rect class represents rectangular integer coordinates indicated by a combination of left, top, width, and height values.
a monitor position that describes where a monitor resides in a
coordinate plane (specifically the IV quadrant of a Cartesian plane where 0,0 is the top left point).
</summary>
        </member>
        <member name="P:VxSdkNet.PixelSearch.Status">
            <summary>
Gets the current status of the pixel search.
</summary>
            <value>A the current status of the pixel search.</value>
        </member>
        <member name="P:VxSdkNet.PixelSearch.Clips">
            <summary>
Gets the clips that were found as a result of the pixel search. New clips may continue to be available
while the search is in progress.
</summary>
            <value>A <c>List</c> of clips found.</value>
        </member>
        <member name="M:VxSdkNet.PixelSearch.GetClips(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the clips that were found as a result of the pixel search using an optional collection filter. New clips may continue to be available
while the search is in progress.
<para>Available filters: DataSourceId, EndTime, Event, Framerate, SearchEndTime, SearchStartTime, StartTime.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> of clips.</returns>
        </member>
        <member name="M:VxSdkNet.PixelSearch.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.PixelSearch.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.PixelSearch.#ctor(VxSdk.IVxPixelSearch*)">
            <summary>
Constructor.
</summary>
            <param name="vxPixelSearch">The vx pixel search.</param>
        </member>
        <member name="F:VxSdkNet.PixelSearch.SearchStatus.InProgress">
            <summary>The search is in progress.</summary>
        </member>
        <member name="F:VxSdkNet.PixelSearch.SearchStatus.Complete">
            <summary>The search has completed.</summary>
        </member>
        <member name="F:VxSdkNet.PixelSearch.SearchStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.PixelSearch.SearchStatus">
            <summary>
Values that represent the status of a search.
</summary>
        </member>
        <member name="T:VxSdkNet.PixelSearch">
            <summary>
The PixelSearch class represents a pixel search.
</summary>
        </member>
        <member name="P:VxSdkNet.NewAnalyticConfig.Size">
            <summary>
Gets or sets the resolution of the grid used for all analytic behaviors. The origin
for the grid is the upper left corner.
</summary>
            <value>The grid resolution.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticConfig.PtzPresetName">
            <summary>
Gets or sets the name of the PTZ preset that this configuration relates to. 
PTZ cameras supporting analytics can only be configured on PTZ presets.
</summary>
            <value>The PTZ preset name.</value>
        </member>
        <member name="P:VxSdkNet.NewAnalyticConfig.MinConfidence">
            <summary>
Gets or sets the minimum confidence filtering value for detected objects in a video
scene. Objects that have a detected confidence value less than the minimum will
not be processed by the associated list of analytic behaviors.
</summary>
            <value>The minimum confidence filtering value.</value>
        </member>
        <member name="M:VxSdkNet.NewAnalyticConfig.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NewAnalyticConfig">
            <summary>
The NewAnalyticConfig class represents a request for the creation of a new analytic config.
</summary>
        </member>
        <member name="P:VxSdkNet.Member.Username">
            <summary>
Gets or sets the username for access to the member.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.Member.State">
            <summary>
Gets the current operational state.
</summary>
            <value>The current operational state.</value>
        </member>
        <member name="P:VxSdkNet.Member.RtspCapabilities">
            <summary>
Gets or sets the network streaming capabilities that the member shall expose to its clients (via data interfaces).
</summary>
            <value>The network streaming capabilities.</value>
        </member>
        <member name="P:VxSdkNet.Member.Port">
            <summary>
Gets or sets the host port of the system.
</summary>
            <value>The host port.</value>
        </member>
        <member name="P:VxSdkNet.Member.Password">
            <summary>
Gets or sets the password for access to the member.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.Member.Name">
            <summary>
Gets the friendly name for the member system. This value comes from the system name field,
containing the system’s friendly name. This is not an alias for the system.
</summary>
            <value>The friendly name of the member system.</value>
        </member>
        <member name="P:VxSdkNet.Member.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Member.Id">
            <summary>
Gets the unique identifier of the member system.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Member.Host">
            <summary>
Gets or sets the host address of the system.
</summary>
            <value>The host address.</value>
        </member>
        <member name="P:VxSdkNet.Member.Bandwidth">
            <summary>
Gets or sets the bandwidth available between the aggregator system and the member system (in kbps).
</summary>
            <value>The bandwidth in kbps.</value>
        </member>
        <member name="M:VxSdkNet.Member.TriggerRefresh">
            <summary>
Triggers a refresh of this member system; ensures that the aggregating system is in sync with the
member system.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of refreshing the member system.</returns>
        </member>
        <member name="M:VxSdkNet.Member.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Member.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Member.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Member.#ctor(VxSdk.IVxMember*)">
            <summary>
Constructor.
</summary>
            <param name="vxMember">The vx member.</param>
        </member>
        <member name="F:VxSdkNet.Member.RtspCapability.TcpUdpMulticast">
            <summary>TCP, UDP and multicast streaming capabilities.</summary>
        </member>
        <member name="F:VxSdkNet.Member.RtspCapability.TcpUdp">
            <summary>TCP and UDP streaming capabilities.</summary>
        </member>
        <member name="F:VxSdkNet.Member.RtspCapability.Tcp">
            <summary>TCP streaming capability.</summary>
        </member>
        <member name="F:VxSdkNet.Member.RtspCapability.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Member.RtspCapability">
            <summary>
Values that represent network streaming capabilities.
</summary>
        </member>
        <member name="F:VxSdkNet.Member.MemberState.Unavailable">
            <summary>Offline; unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Member.MemberState.Unauthorized">
            <summary>Invalid credentials; unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Member.MemberState.Removing">
            <summary>Being removed; unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Member.MemberState.Pending">
            <summary>Being added; unavailable.</summary>
        </member>
        <member name="F:VxSdkNet.Member.MemberState.Online">
            <summary>Online; available.</summary>
        </member>
        <member name="F:VxSdkNet.Member.MemberState.Unknown">
            <summary>Unable to determine status or an error was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Member.MemberState">
            <summary>
Values that represent operational states for a member system.
</summary>
        </member>
        <member name="T:VxSdkNet.Member">
            <summary>
The Member class represents a member system.
</summary>
        </member>
        <member name="P:VxSdkNet.LinkedPtzInfo.Name">
            <summary>
Gets or sets the name of the tracking data source.
</summary>
            <value>The name.</value>
        </member>
        <member name="P:VxSdkNet.LinkedPtzInfo.Ip">
            <summary>
Gets or sets the IP of the tracking data source.
</summary>
            <value>The IP.</value>
        </member>
        <member name="M:VxSdkNet.LinkedPtzInfo.#ctor(VxSdk.VxLinkedPtzInfo)">
            <summary>
Constructor.
</summary>
            <param name="vxLinkedPtzInfo">The vx linked ptz info.</param>
        </member>
        <member name="M:VxSdkNet.LinkedPtzInfo.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.LinkedPtzInfo">
            <summary>
The LinkedPtzInfo class represents linked PTZ information.
</summary>
        </member>
        <member name="P:VxSdkNet.LineCountingRequest.StartTime">
            <summary>
Gets or sets the start time of the line count interval.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.LineCountingRequest.Interval">
            <summary>
Gets or sets the summarization interval to use for the counter values.
</summary>
            <value>The summarization interval.</value>
        </member>
        <member name="P:VxSdkNet.LineCountingRequest.EndTime">
            <summary>
Gets or sets the end time of the line count interval. If not specified, the current time will be used.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.LineCountingRequest.AnalyticBehaviorIds">
            <summary>
Gets or sets the list of unique identifiers of the analytic behaviors to report line counters for.
</summary>
            <value>The list of unique identifiers.</value>
        </member>
        <member name="M:VxSdkNet.LineCountingRequest.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.LineCountingRequest.TimeInterval.Month">
            <summary>A time interval of one month.</summary>
        </member>
        <member name="F:VxSdkNet.LineCountingRequest.TimeInterval.Hour">
            <summary>A time interval of one hour.</summary>
        </member>
        <member name="F:VxSdkNet.LineCountingRequest.TimeInterval.Day">
            <summary>A time interval of one day.</summary>
        </member>
        <member name="F:VxSdkNet.LineCountingRequest.TimeInterval.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.LineCountingRequest.TimeInterval">
            <summary>
Values that represent a definite length of time.
</summary>
        </member>
        <member name="T:VxSdkNet.LineCountingRequest">
            <summary>
The LineCountingRequest class represents a request for line count values.
</summary>
        </member>
        <member name="P:VxSdkNet.LineCount.StartTime">
            <summary>
Gets the start time of the line count interval.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.OutCountCorrection">
            <summary>
Gets the correction value for the <see cref="P:VxSdkNet.LineCount.OutCount" /> of bi-directional counter types.
</summary>
            <value>The correction value.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.OutCount">
            <summary>
Gets the summarized out line counter value for bi-directional counter types.
</summary>
            <value>The summarized out line counter value.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.InCountCorrection">
            <summary>
Gets the correction value for the <see cref="P:VxSdkNet.LineCount.InCount" /> of bi-directional counter types.
</summary>
            <value>The correction value.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.InCount">
            <summary>
Gets the summarized in line counter value for bi-directional counter types.
</summary>
            <value>The summarized in line counter value.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.EndTime">
            <summary>
Gets the end time of the line count interval.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.CountCorrection">
            <summary>
Gets the correction value for the <see cref="P:VxSdkNet.LineCount.Count" /> of uni-directional and omni-directional counter types.
</summary>
            <value>The correction value.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.Count">
            <summary>
Gets the summarized line counter value for uni-directional and omni-directional counter types.
</summary>
            <value>The summarized line counter value.</value>
        </member>
        <member name="P:VxSdkNet.LineCount.AnalyticBehaviorId">
            <summary>
Gets the unique identifier of the analytic behavior this line count information is for.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:VxSdkNet.LineCount.#ctor(VxSdk.VxLineCount*)">
            <summary>
Constructor.
</summary>
            <param name="vxLineCount">The line count.</param>
        </member>
        <member name="T:VxSdkNet.LineCount">
            <summary>
The LineCount class represents line counting information based on a line counting request. A line count is the
number of times an identified object has crossed a configured object line counter within an interval specified
in the line counting request.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.StreamResolution">
            <summary>
Specifies the resolution of the stream.
</summary>
            <value>The resolution.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Stream">
            <summary>
Gets the ordinal source of the stream: primary, secondary, tertiary, etc.
</summary>
            <value>The ordinal source of the stream.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.RateControl">
            <summary>
Gets or sets the method used to control the bitrate of the stream.
</summary>
            <value>The rate control method.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Profile">
            <summary>
Gets or sets the encoding profile for the format.
</summary>
            <value>The encoding profile.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Name">
            <summary>
Gets or sets the friendly name for this stream.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.MulticastPort">
            <summary>
Gets or sets the port used for multicast streaming.
</summary>
            <value>The multicast port.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.MulticastIp">
            <summary>
Gets or sets the IP used for multicast streaming.
</summary>
            <value>The multicast IP.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Gop">
            <summary>
Gets or sets the GOP size of the stream.
</summary>
            <value>The GOP size.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Framerate">
            <summary>
Gets or sets the framerate of the stream.
</summary>
            <value>The framerate.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Format">
            <summary>
Gets or sets the media stream encoding format.
</summary>
            <value>The media stream encoding format.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.ConfigurationOptions">
            <summary>
Gets the list of valid video encoding options for each format. If the format does not contain any options
you must first switch to that format to determine them.
</summary>
            <value>A <c>List</c> of video encoding options.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.VideoEncoding.Bitrate">
            <summary>
Gets or sets the bitrate of the stream (in bps).
</summary>
            <value>The bitrate (in bps).</value>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.VideoEncoding.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.VideoEncoding.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.VideoEncoding.#ctor(VxSdk.IVxDataSourceConfig.VideoEncoding*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigVideoEncoding">The vx video encoding configuration.</param>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig.VideoEncoding">
            <summary>
The VideoEncoding class represents a configuration of a video encoding.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.TertiaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the tertiary (3rd) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.SeptenaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the septenary (7th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.SenaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the senary (6th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.SecondaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the secondary (2nd) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.QuinaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the quinary (5th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.QuaternaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the quaternary (4th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.PrimaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the primary (1st) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.OctonaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the octonary (8th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.NonaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the nonary (9th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.Level">
            <summary>
Gets or sets the smart compression level, which offers a trade-off between image quality and
compression efficiency.  When not disabled, dynamic GOP can be enabled for each stream.
</summary>
            <value>The smart compression level.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.SmartCompression.DenaryDynamicGop">
            <summary>
Gets or sets the dynamic GOP for the denary (10th) stream. If 0, dynamic GOP is disabled for this stream.
</summary>
            <value>The maximum number of frames between I-frames.</value>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.SmartCompression.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.SmartCompression.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.SmartCompression.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.SmartCompression.#ctor(VxSdk.IVxDataSourceConfig.SmartCompression*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigSmartCompression">The vx smart compression configuration.</param>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig.SmartCompression">
            <summary>
The SmartCompression class represents a configuration of Smart Compression for a particular video data source.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.Ptz.Protocol">
            <summary>
Gets or sets the protocol used by the encoder device to PTZ this channel.
</summary>
            <value>The PTZ protocol.</value>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Ptz.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Ptz.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Ptz.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Ptz.#ctor(VxSdk.IVxDataSourceConfig.Ptz*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigPtz">The vx PTZ configuration.</param>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig.Ptz">
            <summary>
The Ptz class represents a configuration of PTZ for a particular video data source.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.Motion.Threshold">
            <summary>
Gets or sets the amount of area that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less area required to trigger motion).
</summary>
            <value>The motion threshold level.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.Motion.Sensitivity">
            <summary>
Gets or sets the amount of change that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less change required to trigger motion).
</summary>
            <value>The motion sensitivity level.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.Motion.Mode">
            <summary>
Gets or sets the motion detection mode.
</summary>
            <value>The motion detection mode.</value>
        </member>
        <member name="P:VxSdkNet.DataSourceConfig.Motion.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Motion.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Motion.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Motion.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSourceConfig.Motion.#ctor(VxSdk.IVxDataSourceConfig.Motion*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigMotion">The vx motion configuration.</param>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig.Motion">
            <summary>
The Motion class represents a motion detection configuration.
</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.SmartCompressionLevel.Medium">
            <summary>Allows some distortion in order to achieve medium compression efficiency gains.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.SmartCompressionLevel.Low">
            <summary>Allows a little distortion in order to achieve small compression efficiency gains.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.SmartCompressionLevel.High">
            <summary>Allows a lot of distortion in order to achieve greater compression efficiency gains.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.SmartCompressionLevel.Disabled">
            <summary>Smart Compression is disabled.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.SmartCompressionLevel.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig.SmartCompressionLevel">
            <summary>
Values that represent Smart Compression levels, which offer a trade-off between image quality and compression efficiency.
</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.PtzControlProtocol.ProtocolP">
            <summary>P protocol.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.PtzControlProtocol.ExtendedCoaxitron">
            <summary>Extended coaxitron protocol.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.PtzControlProtocol.Disabled">
            <summary>PTZ control disabled.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.PtzControlProtocol.ProtocolD">
            <summary>D protocol.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.PtzControlProtocol.Coaxitron">
            <summary>Coaxitron protocol.</summary>
        </member>
        <member name="F:VxSdkNet.DataSourceConfig.PtzControlProtocol.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig.PtzControlProtocol">
            <summary>
Values that represent PTZ control protocols used by encoders to control analog PTZ cameras.
</summary>
        </member>
        <member name="T:VxSdkNet.DataSourceConfig">
            <summary>
The DataSourceConfig class represents the configuration of a data source.
</summary>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.Resolutions">
            <summary>
Gets or sets the list of resolutions that are available for the stream.
</summary>
            <value>A <c>List</c> of resolutions.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.RateControls">
            <summary>
Gets or sets the list of available methods that control the bitrate of the stream.
</summary>
            <value>A <c>List</c> of rate control methods.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.Profiles">
            <summary>
Gets or sets the list of encoding profiles that are available for the stream.
</summary>
            <value>A <c>List</c> of encoding profiles.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.MinGop">
            <summary>
Gets or sets the minimum GOP size that can be set for the stream.
</summary>
            <value>The minimum GOP size.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.MinBitrate">
            <summary>
Gets or sets the minimum bitrate that can be set for the stream (in bps).
</summary>
            <value>The minimum bitrate (in bps).</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.MaxGop">
            <summary>
Gets or sets the maximum GOP size that can be set for the stream.
</summary>
            <value>The maximum GOP size.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.MaxBitrate">
            <summary>
Gets or sets the maximum bitrate that can be set for the stream (in bps).
</summary>
            <value>The maximum bitrate (in bps).</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.HasOptions">
            <summary>
Gets or sets whether there are any video encoding options available. If <c>true</c> you must first switch to
the <see cref="P:VxSdkNet.VideoEncodingOption.Format" /> to determine them.
</summary>
            <value>
                <c>true</c> if there are options available, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.Framerates">
            <summary>
Gets or sets the list of valid framerates.
</summary>
            <value>A <c>List</c> of valid framerates.</value>
        </member>
        <member name="P:VxSdkNet.VideoEncodingOption.Format">
            <summary>
Gets or sets the media stream encoding format that these options/limits apply to.
</summary>
            <value>The media stream encoding format.</value>
        </member>
        <member name="M:VxSdkNet.VideoEncodingOption.#ctor(VxSdk.VxVideoEncodingOption*)">
            <summary>
Constructor.
</summary>
            <param name="vxVideoEncodingOption">The vx video encoding option.</param>
        </member>
        <member name="M:VxSdkNet.VideoEncodingOption.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.Simple">
            <summary>MPEG4 Simple profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.Main10">
            <summary>H265 Main10 profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.Main">
            <summary>H264/H265 Main profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.High">
            <summary>H264 High profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.Extended">
            <summary>H264 Extended profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.Baseline">
            <summary>H264 Baseline profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.AdvancedSimple">
            <summary>MPEG4 Advanced Simple profile.</summary>
        </member>
        <member name="F:VxSdkNet.VideoEncodingOption.EncoderProfile.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.VideoEncodingOption.EncoderProfile">
            <summary>
Values that represent the profile used by an encoder to select the features used.
</summary>
        </member>
        <member name="T:VxSdkNet.VideoEncodingOption">
            <summary>
The VideoEncodingOption class represents the valid video encoding options/limits for the specified format.
</summary>
        </member>
        <member name="P:VxSdkNet.DataSession.Width">
            <summary>
Gets the horizontal resolution of the data (Width).
</summary>
            <value>The horizontal resolution.</value>
        </member>
        <member name="P:VxSdkNet.DataSession.Speed">
            <summary>
Gets the play speed of the data.
</summary>
            <value>The play speed.</value>
        </member>
        <member name="P:VxSdkNet.DataSession.Quality">
            <summary>
Gets the image quality of the data from 1 to 100. Smaller numbers have better quality than larger numbers.
</summary>
            <value>The image quality value.</value>
        </member>
        <member name="P:VxSdkNet.DataSession.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DataSession.JpegUri">
            <summary>
Gets URI of the JPEG frame.
</summary>
            <value>The JPEG URI.</value>
        </member>
        <member name="P:VxSdkNet.DataSession.Id">
            <summary>
Gets the unique identifier of the sessions data source.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DataSession.Height">
            <summary>
Gets the vertical resolution of the data (Height).
</summary>
            <value>The vertical resolution.</value>
        </member>
        <member name="M:VxSdkNet.DataSession.Update">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataSession.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSession.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataSession.#ctor(VxSdk.IVxDataSession*)">
            <summary>
Constructor.
</summary>
            <param name="vxDataSession">The vx data session.</param>
        </member>
        <member name="T:VxSdkNet.DataSession">
            <summary>
The DataSession class represents a data session that is being transmitted
by a data source, via a data interface, to a client.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Twilio.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Twilio.IsEnabled">
            <summary>
Gets or sets whether or not SMS messaging via Twilio is enabled.
</summary>
            <value>
                <c>true</c> to enable SMS messaging via Twilio, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Twilio.FromNumber">
            <summary>
Gets or sets a Twilio phone number capable of sending SMS (e.g., +15595551234).
</summary>
            <value>A Twilio phone number.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Twilio.AuthToken">
            <summary>
Sets the Twilio account authorization token.
</summary>
            <value>The Twilio account authorization token.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Twilio.AccountSid">
            <summary>
Gets or sets the Twilio account SID.
</summary>
            <value>The Twilio account SID.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Twilio.ValidateTwilioInfo(System.String,System.String,System.String,System.String)">
            <summary>
Validates the given Twilio info by attempting to use it to send a test SMS.
</summary>
            <param name="accountSid">A Twilio account SID.</param>
            <param name="authToken">A Twilio account authorization token.</param>
            <param name="fromNumber">A Twilio phone number capable of sending SMS (e.g., +15595551234).</param>
            <param name="toNumber">A phone number capable of receiving SMS to send messages to (e.g., +15595551234).</param>
            <returns>
                <c>true</c> if sending the test SMS was successful, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Twilio.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Twilio.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Twilio.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Twilio.#ctor(VxSdk.IVxConfiguration.Twilio*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigTwilio">The vx Twilio configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Twilio">
            <summary>
The Twilio class represents Twilio (twilio.com) SMS account configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Time.TimeZone">
            <summary>
Gets or sets the time zone of the device, for localization purposes.
</summary>
            <value>The time zone.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Time.TimeServerSourceType">
            <summary>
Gets or sets the source where the time server information comes from.
</summary>
            <value>The time server source type.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Time.ExternalTimeServers">
            <summary>
Gets or sets the external time servers for time synchronization, typically using the NTP protocol.
</summary>
            <value>The external time servers.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Time.TimeServerAddress">
            <summary>
[DEPRECATED] Gets the host address of the external time server.
</summary>
            <value>The external time server host address.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Time.CurrentTime">
            <summary>
Gets the current internal system time.
</summary>
            <value>The current internal system time.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Time.IsTimeServerEnabled">
            <summary>
[DEPRECATED] Refreshes this instances properties.
Gets a value indicating whether or not the external time server is enabled.
</summary>
            <value>
                <c>true</c> if the external time server is enabled, <c>false</c> if disabled.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Time.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Time.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Time.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Time.#ctor(VxSdk.IVxConfiguration.Time*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigTime">The vx time configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Time">
            <summary>
The Time class represents a time configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.ThermalEtd.Timeout">
            <summary>
Gets or sets the number of seconds before a new event is emitted for the same person in view.
</summary>
            <value>The new event timeout, in seconds.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.ThermalEtd.NormalRangeUpperBound">
            <summary>
Gets or sets the upper bound of the normal temperature range, in degrees Celsius; higher temperatures will be
considered elevated.
</summary>
            <value>The upper bound of the normal temperature range, in degrees Celsius.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.ThermalEtd.NormalRangeLowerBound">
            <summary>
Gets or sets the lower bound of the normal temperature range, in degrees Celsius; lower temperatures will be
considered abnormally low.
</summary>
            <value>The lower bound of the normal temperature range, in degrees Celsius.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.ThermalEtd.IsEnabled">
            <summary>
Gets or sets whether or not elevated temperature detection events and overlays are enabled.
</summary>
            <value>
                <c>true</c> to enable elevated temperature detection events and overlays, otherwise <c>false</c>.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.ThermalEtd.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.ThermalEtd.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.ThermalEtd.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.ThermalEtd.#ctor(VxSdk.IVxConfiguration.ThermalEtd*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigThermalEtd">The vx thermal etd configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.ThermalEtd">
            <summary>
The ThermalEtd class represents a thermal elevated temperature detection configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.Volumes">
            <summary>
Gets the volumes for this storage.
</summary>
            <value>A <c>List</c> of volumes.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.VolumeGroups">
            <summary>
Gets the volume groups for this storage.
</summary>
            <value>A <c>List</c> of volume groups.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.VideoStreamRecordingSource">
            <summary>
Gets or sets the stream to record from for all assigned data sources (when scheduled to record).
</summary>
            <value>The stream to record.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.TransmissionType">
            <summary>
Gets the network communication transmission type preference.
</summary>
            <remarks>
DEPRECATED: This has been replaced by <see cref="P:VxSdkNet.Configuration.Storage.TransmissionPreference" /> and will be removed in
the future.
</remarks>
            <value>The transmission type.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.TransmissionPreference">
            <summary>
Gets or sets network communication transmission type preference.
</summary>
            <value>The transmission type preference.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.SecondaryVideoStreamRecordingSource">
            <summary>
Gets or sets the second stream to record from for all assigned data sources (when scheduled to record).
</summary>
            <value>The second stream to record.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.RetentionLimit">
            <summary>
Gets or sets the retention limit, in hours, on recorded data.
</summary>
            <value>The retention limit.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.PruningThreshold">
            <summary>
Gets or sets the threshold, in hours, after which recordings older than this are eligible for pruning.
Any recorded media retained longer than the threshold will be pruned as needed to free space on disk for
recording. This only applies to data source having type video. A value of 0 will disable pruning (pruning
may be enabled on a per data source basis still, see: DataSource::PruningThreshold).
</summary>
            <value>The threshold, in hours.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.MonitoredDeviceIds">
            <summary>
Gets or sets a list of device IDs being monitored for failover.
</summary>
            <value>The list of device IDs.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.MaxOutboundBitrate">
            <summary>
Gets or sets the maximum outbound bitrate for this VxStorage (in Mbps).
</summary>
            <value>The bitrate in Mbps.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.ManualRecordingTimeout">
            <summary>
Gets or sets the amount of time, in seconds, to allow a manual recording to be active.
</summary>
            <value>The timeout in seconds.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.IsGapFillerEnabled">
            <summary>
Gets or sets whether or not automatic gap filling is enabled.
</summary>
            <value>
                <c>true</c> to enable automatic gap filling, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.IsFailoverEnabled">
            <summary>
Gets or sets whether or not this VxStorage is designated as a failover unit.
</summary>
            <value>
                <c>true</c> to designate this as a failover unit, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.GapFillerInterval">
            <summary>
Gets or sets the interval, in seconds, to reattempt to automatically fill a gap.
</summary>
            <value>The interval in seconds.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.GapFillerDownloads">
            <summary>
Gets or sets the maximum number of concurrent downloads.
</summary>
            <value>The number of concurrent downloads.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.GapFillerAttempts">
            <summary>
Gets or sets the maximum number of attempts to fill a gap before giving up.
</summary>
            <value>The number of attempts.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.FileRecoveryResource">
            <summary>
Gets the file recovery control and monitor resource for this VxStorage.
</summary>
            <value>The file recovery resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.FailoverMaxRecordingBitrate">
            <summary>
Gets or sets the maximum recording bitrate for this VxStorage when enabled as a failover unit (in Mbps).
</summary>
            <value>The bitrate.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Storage.FailoverGroup">
            <summary>
Gets a list of device IDs belonging to this VxStorage failover group (including itself).
</summary>
            <value>The list of device IDs.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.RebuildDatabase">
            <summary>
Rebuilds the database. Has no effect if the database is already rebuilding.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of starting the database rebuild.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.GetVolumes(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the volumes for this storage using an optional collection filter.
<para>Available filters: Id, ModifiedSince.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the volumes.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.GetVolumeGroups(System.Collections.Generic.Dictionary`2{VxSdkNet.Filters.Value,System.String})">
            <summary>
Get the volume groups for this storage using an optional collection filter.
<para>Available filters: Archive, Id, ModifiedSince, Name.</para></summary>
            <param name="filters">The collection filters to be used in the request.</param>
            <returns>A <c>List</c> containing the volume groups.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.DeleteVolumeGroup(VxSdkNet.VolumeGroup)">
            <summary>
Delete a volume group from the storage.
</summary>
            <param name="volumeGroup">The volume group to be deleted from the storage.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the volume group.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.DeleteVolume(VxSdkNet.Volume)">
            <summary>
Delete a volume from the storage.
</summary>
            <param name="volume">The volume to be deleted from the storage.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the volume.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.CreateVolumeGroup(VxSdkNet.NewVolumeGroup)">
            <summary>
Creates a new volume group on the storage.
</summary>
            <param name="newVolumeGroup">The new volume group to be created.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of creating the volume group.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.CreateVolume(VxSdkNet.NewVolume)">
            <summary>
Creates a new volume on the storage.
</summary>
            <param name="newVolume">The new volume to be created.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of creating the volume.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Storage.#ctor(VxSdk.IVxConfiguration.Storage*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigStorage">The vx storage configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Storage">
            <summary>
The Storage class represents a VxStorage-specific configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.Version">
            <summary>
Gets or sets which version of SNMP is enabled.
</summary>
            <value>The SNMP version to enable.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.V3ReadUsername">
            <summary>
Gets or sets the SNMP v3 read username.
</summary>
            <value>The read username.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.V3ReadPrivacyPassword">
            <summary>
Sets the SNMP v3 read privacy password.
</summary>
            <value>The read privacy password.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.V3ReadAuthPassword">
            <summary>
Gets or sets the SNMP v3 read auth password.
</summary>
            <value>The read auth password.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.V3PrivacyProtocol">
            <summary>
Gets or sets the SNMP v3 privacy protocol.
</summary>
            <value>The privacy protocol.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.V3AuthProtocol">
            <summary>
Gets or sets the SNMP v3 authentication protocol.
</summary>
            <value>The authentication protocol.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.V2cReadCommunityString">
            <summary>
Gets or sets the SNMP v2c community string.
</summary>
            <value>The community string.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.SnmpPort">
            <summary>
Gets or sets the port on which to provide access to SNMP.
</summary>
            <value>The port.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Snmp.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Snmp.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Snmp.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Snmp.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Snmp.#ctor(VxSdk.IVxConfiguration.Snmp*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigSnmp">The vx SNMP configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Snmp">
            <summary>
The Snmp class represents the SNMP agent configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.UseSmtps">
            <summary>
Gets or sets whether SMTPS should be used instead of SMTP.
</summary>
            <value>
                <c>true</c> to use SMTPS, <c>false</c> to use SMTP.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.Username">
            <summary>
Gets or sets the username for SMTP access.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.Timeout">
            <summary>
Gets or sets the timeout in milliseconds.
</summary>
            <value>The timeout in milliseconds.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.SmtpPort">
            <summary>
Gets or sets the SMTP port.
</summary>
            <value>The SMTP port.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.Password">
            <summary>
Sets the password for SMTP access.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.IsValidateCertEnabled">
            <summary>
Gets or sets whether or not validation of the servers certificate is enforced.
</summary>
            <value>
                <c>true</c> to enable certificate validation, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.Host">
            <summary>
Gets or sets the SMTP host.
</summary>
            <value>The SMTP host.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Smtp.FromAddress">
            <summary>
Gets or sets the "Mail From" email address.
</summary>
            <value>The "Mail From" email address.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Smtp.ValidateSmtpInfo(VxSdkNet.SmtpInfo)">
            <summary>
Validate the given SMTP information by attempting to use it to send a test email.
</summary>
            <param name="smtpInfo">The SMTP information to validate.</param>
            <returns>
                <c>true</c> if sending the test email was successful, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Smtp.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Smtp.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Smtp.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Smtp.#ctor(VxSdk.IVxConfiguration.Smtp*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigSmtp">The vx SMTP configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Smtp">
            <summary>
The Smtp class represents the SMTP configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Server.RtspPort">
            <summary>
Gets or sets the RTSP port number.
</summary>
            <value>The RTSP port number.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Server.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Server.IsReverseDnsLookupEnabled">
            <summary>
Gets or sets whether or not hostname lookup from IP is enabled.
</summary>
            <value>
                <c>true</c> to enable hostname lookup, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Server.HttpsPort">
            <summary>
Gets or sets the HTTPS port number.
</summary>
            <value>The HTTPS port number.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Server.HttpPort">
            <summary>
Gets or sets the HTTP port number.
</summary>
            <value>The HTTP port number.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Server.Restart">
            <summary>
Restarts the server; generally required after any port changes to have them take effect.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of restarting the server.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Server.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Server.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Server.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Server.#ctor(VxSdk.IVxConfiguration.Server*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigServer">The vx server configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Server">
            <summary>
The Server class represents general server configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Report.StorageLocation">
            <summary>
Gets or sets the network storage location to save report data to (used instead of local cluster storage).
</summary>
            <value>The network storage location.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Report.MaxAge">
            <summary>
Gets or sets the retention limit, in days, for reports; a value of 0 will disable the limit.
Any report that exceeds this limit will be deleted.
</summary>
            <value>The retention limit, in days.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Report.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Report.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Report.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Report.#ctor(VxSdk.IVxConfiguration.Report*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigReport">The vx report configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Report">
            <summary>
The Report class represents report configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Node.Type">
            <summary>
Gets the particular type of node this is.
</summary>
            <value>The node type.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Node.Status">
            <summary>
Gets the current configuration status of this node.
</summary>
            <value>The configuration status.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Node.IsArbiter">
            <summary>
Gets whether or not this node is an arbiter.
</summary>
            <value>
                <c>true</c> if this node is an arbiter, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Node.HostAddress">
            <summary>
Gets the host address.
</summary>
            <value>The host address.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Node.ArbiterPort">
            <summary>
Gets the port number that the arbiter node uses.
</summary>
            <value>The port number.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Node.ArbiterAlias">
            <summary>
Gets the host alias for the arbiter node.
</summary>
            <value>The host alias.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Node.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Node.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Node.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Node.#ctor(VxSdk.IVxConfiguration.Node*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigNode">The vx node configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Node">
            <summary>
The Node class represents an individual host machine (a "node") within a cluster.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Motion.Threshold">
            <summary>
Gets or sets the amount of area that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less area required to trigger motion).
</summary>
            <value>The motion threshold level.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Motion.Sensitivity">
            <summary>
Gets or sets the amount of change that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less change required to trigger motion).
</summary>
            <value>The motion sensitivity level.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Motion.Mode">
            <summary>
Gets or sets the motion detection mode.
</summary>
            <value>The motion detection mode.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Motion.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Motion.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Motion.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Motion.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Motion.#ctor(VxSdk.IVxConfiguration.Motion*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigMotion">The vx motion configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Motion">
            <summary>
The Motion class represents a motion detection configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.VxSystemDn">
            <summary>
Gets or sets the site specific LDAP container; unique per VideoXpert site. This DN should contain the
<see cref="P:VxSdkNet.Configuration.Ldap.VxRootDn" /> (which is a suffix of this full DN).
</summary>
            <value>The site specific LDAP container.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.VxRootDn">
            <summary>
Gets or sets the LDAP container under which VideoXpert system information for all sites is stored; this should be the
same for all sites.
</summary>
            <value>The root LDAP container.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.UseLdapUsersAndRoles">
            <summary>
Gets or sets whether or not LDAP will be used to manage users and roles.
</summary>
            <value>
                <c>true</c> to use LDAP for managing users and roles, <c>false</c> to use the VideoXpert system (default).</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.SsoDomain">
            <summary>
Gets or sets the Active Directory/Kerberos domain used for single sign-on.
</summary>
            <value>The Active Directory/Kerberos domain.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.ServerPort">
            <summary>
Gets or sets the port number of the LDAP server.
</summary>
            <value>The port number.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.ServerName">
            <summary>
Gets or sets the hostname or IP address of the LDAP server.
</summary>
            <value>The hostname or IP address.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.SearchDnPassword">
            <summary>
Sets the password for the search DN account.
</summary>
            <value>The superuser DN password.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.SearchDnAccount">
            <summary>
Gets or sets the superuser DN account in the LDAP directory to use for performing searches there.
</summary>
            <value>The superuser DN account.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.SearchAttributes">
            <summary>
Gets or sets the attributes against which to match the user’s identity/name.
</summary>
            <value>The attributes.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.ObjectClasses">
            <summary>
Gets or sets the LDAP object classes to search for users.
</summary>
            <value>The LDAP object classes.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.IsTwoStageBindingEnabled">
            <summary>
Gets or sets whether or not two stage binding authentication is enabled.
</summary>
            <value>
                <c>true</c> to enable two stage binding authentication, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.IsSsoEnabled">
            <summary>
Gets or sets whether or not single sign-on is enabled.
</summary>
            <value>
                <c>true</c> to enable single sign-on, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.IsServerTlsEnabled">
            <summary>
Gets or sets whether or not SSL/TLS security is enabled for the LDAP server.
</summary>
            <value>
                <c>true</c> to enable SSL/TLS security, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.IsEnabled">
            <summary>
Gets or sets whether or not LDAP username/password authentication is enabled.
</summary>
            <value>
                <c>true</c> to enable LDAP authentication, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Ldap.BaseDn">
            <summary>
Gets or sets the location in the LDAP database that will be used to search for and authenticate user entries.
</summary>
            <value>The LDAP database location.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Ldap.ValidateLdapCredentials(VxSdkNet.LdapValidationCredentials)">
            <summary>
Validates the given credentials on the specified LDAP server.
</summary>
            <param name="ldapCredentials">The LDAP credentials to validate.</param>
            <returns>
                <c>true</c> if the config and credentials are valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Ldap.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Ldap.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Ldap.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Ldap.#ctor(VxSdk.IVxConfiguration.Ldap*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigLdap">The vx LDAP configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Ldap">
            <summary>
The Ldap class represents the LDAP configuration available.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Export.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Export.ForceProtect">
            <summary>
Gets or sets whether every new export will be created with password protection.
</summary>
            <value>
                <c>true</c> to force every new export to be created with password protection, otherwise <c>false</c>.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Export.SetProtectPassword(System.String)">
            <summary>
Sets a global password for all new exports. Ignored if ForceProtect is <c>false</c>.
</summary>
            <param name="globalPassword">The new global password for exports.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the password.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Export.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Export.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Export.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Export.#ctor(VxSdk.IVxConfiguration.Export*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigExport">The vx export configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Export">
            <summary>
The Export class represents export configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Event.MaxEvents">
            <summary>
Gets or sets the retention limit, in number of events, on logged events from any sources. Any events that exceed
this limit shall be deleted, starting with the oldest events and giving priority to retaining high
severity events.
</summary>
            <value>The retention limit, in number of events.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Event.LocalEventLimit">
            <summary>
Gets or sets the retention limit, in days, on logged events. Any events that exceed this limit shall be deleted.
</summary>
            <value>The retention limit, in days.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Event.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Event.AggregatedEventLimit">
            <summary>
Gets or sets the retention limit, in days, on logged events from aggregated sources. Any aggregated events that
exceed this limit shall be deleted.
</summary>
            <value>The retention limit, in days.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Event.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Event.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Event.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Event.#ctor(VxSdk.IVxConfiguration.Event*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigEvent">The vx event configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Event">
            <summary>
The Event class represents event configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.TranscastMethod">
            <summary>
Gets or sets the default communication method between data sources to Media Gateways and
between Media Gateways to clients.
</summary>
            <value>The communication method.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.TimeConfig">
            <summary>
Gets the time configuration for the cluster.
</summary>
            <value>The time configuration.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.StatusDescription">
            <summary>
Gets the current configuration status description.
</summary>
            <value>The status description.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.StatusCode">
            <summary>
Gets the current configuration status code.
</summary>
            <value>The status code.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.Status">
            <summary>
Gets the current configuration status of the entire cluster.
</summary>
            <value>The configuration status.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.NodeLicenseLimit">
            <summary>
Gets the maximum number of allowed nodes under the current license. A license is required to expand the
number of nodes that can be added to this cluster beyond this number. Set to -1 if there is no limit.
</summary>
            <value>The retention limit.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.NodeConfigurations">
            <summary>
Gets the configuration for the nodes that the cluster is composed of.
</summary>
            <value>A <c>List</c> of node configurations.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.MediaGatewayVirtualIp">
            <summary>
Gets or sets the virtual IP or hostname used for Media Gateway devices.
</summary>
            <value>The Media Gateway virtual IP.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.MediaGatewayTranscast">
            <summary>
Gets the default communication method between data sources to Media Gateways and
between Media Gateways to clients.
</summary>
            <remarks>
DEPRECATED: This has been replaced by <see cref="P:VxSdkNet.Configuration.Cluster.TranscastMethod" /> and will be removed in the future.
</remarks>
            <value>The communication method.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.LocalEventLimit">
            <summary>
Gets or sets the retention limit, in days, on logged events. Any events that exceed this limit shall
be deleted.
</summary>
            <value>The retention limit.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.IsStreamProxyEnabled">
            <summary>
Gets or sets whether camera streams will be proxied through the VxStorage that they are assigned to or
will always be pulled directly from the Media Gateway.
</summary>
            <value>
                <c>true</c> to enable the stream proxy, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.IsExportPathEnabled">
            <summary>
Gets or sets whether or not the alternative export storage location is enabled.
</summary>
            <value>
                <c>true</c> to enable using the export path, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.ExportPathUsername">
            <summary>
Gets or sets the username used to access the network resource at the location specified by
<see cref="P:VxSdkNet.Configuration.Cluster.ExportPath" />.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.ExportPathPassword">
            <summary>
Sets the the export path password. If set (and <see cref="P:VxSdkNet.Configuration.Cluster.IsExportPathEnabled" /> is <c>true&gt;</c>), this
password will be used to access the network resource specified in the <see cref="P:VxSdkNet.Configuration.Cluster.ExportPath" />.
</summary>
            <value>The password.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.ExportPath">
            <summary>
Gets or sets the UNC network path to save export media to.
</summary>
            <value>The UNC network path.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.DiscoveryVirtualIp">
            <summary>
Gets or sets the virtual IP or hostname used for device discovery if the cluster is not governed
by a VideoXpert Accessory Server. The load balancer uses this address for discovery announcements
and balances responses across the cluster.
</summary>
            <value>The discovery virtual IP.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.CoreVirtualIp">
            <summary>
Gets or sets the virtual IP or hostname used for VideoXpert Core devices.
</summary>
            <value>The VxCore virtual IP.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.AvailabilityMode">
            <summary>
Gets or sets the availability mode for the cluster, which determines how the nodes in the cluster
are balanced and failover.
</summary>
            <value>The cluster availability mode.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Cluster.AggregatedEventLimit">
            <summary>
Gets or sets the retention limit, in days, on logged events from aggregated sources. Any aggregated
events that exceed this limit shall be deleted.
</summary>
            <value>The retention limit.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Cluster.ValidateExportPath(VxSdkNet.NetworkStorageInfo)">
            <summary>
Validates a network storage path for availability as export storage.
</summary>
            <param name="exportStorageInfo">The export storage path to validate.</param>
            <returns>
                <c>true</c> if the path is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Cluster.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Cluster.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Cluster.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Cluster.#ctor(VxSdk.IVxConfiguration.Cluster*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigCluster">The vx cluster configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Cluster">
            <summary>
The Cluster class represents cluster configuration attributes. This representation shall
be identical within a cluster, regardless of the node it was retrieved from.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Bookmark.RetentionPolicy">
            <summary>
Gets or sets the bookmark retention policy, which specifies if and when an old bookmark is
automatically removed from the system.
</summary>
            <value>The bookmark retention policy.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Bookmark.RetentionLimit">
            <summary>
Gets or sets the retention limit, in days, for bookmarks; a value of 0 will disable the limit. Any
bookmark that exceeds this limit will be deleted. Ignored if the <see cref="P:VxSdkNet.Configuration.Bookmark.RetentionPolicy" /> is not
set to <c>DeleteAfterLimit</c>.
</summary>
            <value>The retention limit, in days.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Bookmark.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Bookmark.AutoUnlock">
            <summary>
Gets or sets the number of days before automatically unlocking any locked bookmark that has a
<c>BookmarkLock.EndTime</c> older than this value. A value of 0 will disable automatic unlocking.
</summary>
            <value>The auto unlock time, in days.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Bookmark.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Bookmark.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Bookmark.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Bookmark.#ctor(VxSdk.IVxConfiguration.Bookmark*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigBookmark">The vx bookmark configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Bookmark">
            <summary>
The Bookmark class represents bookmark configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.Configuration.Auth.PasswordExpiration">
            <summary>
Gets or sets the amount of time, in days, at which a user password will expire (from when it was last set/changed).
Ignored if <see cref="P:VxSdkNet.Configuration.Auth.IsPasswordExpirationEnabled" /> is <c>false</c>.
</summary>
            <value>The expiration time, in days.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Auth.MinPasswordLength">
            <summary>
Gets the minimum length allowed for a new user password.
</summary>
            <value>The minimum password length.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Auth.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.Configuration.Auth.IsPasswordExpirationEnabled">
            <summary>
Gets or sets whether or not password expiration is enabled for all users.
</summary>
            <value>
                <c>true</c> to enable password expiration, otherwise <c>false</c>.</value>
        </member>
        <member name="M:VxSdkNet.Configuration.Auth.SetUser(VxSdkNet.NewUser)">
            <summary>
Sets the user on the physical host device (creating/replacing as necessary). If successful, device username will be set to match.
</summary>
            <param name="user">The user to set on the device.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the user.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Auth.SetPassword(System.String,System.Boolean)">
            <summary>
Sets the password on the physical host device (for the current username). If successful, device password will be set to match.
</summary>
            <param name="newPassword">New password being requested. Must contain more than 7 characters.</param>
            <param name="mustChangePassword">If <c>true</c>, the password will immediately be expired the first time it is used to login.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the password.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Auth.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Configuration.Auth.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Auth.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Configuration.Auth.#ctor(VxSdk.IVxConfiguration.Auth*)">
            <summary>
Constructor.
</summary>
            <param name="vxConfigAuth">The vx authentication configuration.</param>
        </member>
        <member name="T:VxSdkNet.Configuration.Auth">
            <summary>
The Auth class represents authorization configuration.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TransmissionTypes.Unicast">
            <summary>Unicast transmission.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TransmissionTypes.Multicast">
            <summary>Multicast transmission.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TransmissionTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.TransmissionTypes">
            <summary>
Values that represent network communication transmission types.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TimeServerSource.None">
            <summary>Time server information is not provided; the time itself is set manually.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TimeServerSource.Manual">
            <summary>Time server information is provided by the user.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TimeServerSource.Auto">
            <summary>Time server information is determined automatically, for example, from DHCP.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.TimeServerSource.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.TimeServerSource">
            <summary>
Values that represent where the time server information is obtained.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Denary">
            <summary>The 10th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Nonary">
            <summary>The 9th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Octonary">
            <summary>The 8th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Septenary">
            <summary>The 7th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Senary">
            <summary>The 6th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Quinary">
            <summary>The 5th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Quaternary">
            <summary>The 4th stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Tertiary">
            <summary>The 3rd stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Secondary">
            <summary>The 2nd stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Primary">
            <summary>The 1st stream.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.StreamSource.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.StreamSource">
            <summary>
Values that represent a stream source.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.SnmpVersion.SNMP3">
            <summary>SNMPv3 protocol.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.SnmpVersion.SNMP2c">
            <summary>SNMPv2c protocol.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.SnmpVersion.None">
            <summary>SNMP is disabled.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.SnmpVersion.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.SnmpVersion">
            <summary>
Values that represent which version of SNMP is enabled.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.PrivacyProtocol.None">
            <summary>No encryption.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.PrivacyProtocol.DES">
            <summary>DES encryption.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.PrivacyProtocol.AES">
            <summary>AES encryption.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.PrivacyProtocol.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.PrivacyProtocol">
            <summary>
Values that represent SNMP v3 privacy protocols.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.NodeType.Support">
            <summary>Support node.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.NodeType.Database">
            <summary>Database node.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.NodeType.Core">
            <summary>Core node.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.NodeType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.NodeType">
            <summary>
Values that represent a particular type of node.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MotionMode.Recorder">
            <summary>Recorder based motion detection.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MotionMode.Disabled">
            <summary>Motion detection disabled.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MotionMode.Camera">
            <summary>Camera based motion detection.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MotionMode.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.MotionMode">
            <summary>
Values that represent motion detection modes.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MgTranscast.Unicast_Unicast">
            <summary>Unicast between the data source and VxMG; unicast between VxMG and client.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MgTranscast.Unicast_Multicast">
            <summary>Unicast between the data source and VxMG; multicast between VxMG and client.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MgTranscast.Multicast_Unicast">
            <summary>Multicast between the data source and VxMG; unicast between VxMG and client.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MgTranscast.Multicast_Multicast">
            <summary>Multicast between the data source and VxMG; multicast between VxMG and client.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.MgTranscast.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.MgTranscast">
            <summary>
Values that represent VxMediaGateway communication configurations. The first part indicates the default
communication used between a data source and the VxMediaGateway; the second part indicates the default
communication between the VxMediaGateway and a client.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ConfigStatus.Unconfigured">
            <summary>The cluster is unconfigured.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ConfigStatus.Failed">
            <summary>Cluster configuration failed.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ConfigStatus.Configuring">
            <summary>The cluster is being configured.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ConfigStatus.Configured">
            <summary>The cluster is configured.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ConfigStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.ConfigStatus">
            <summary>
Values that represent the current cluster configuration status.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ClusterAvailabilityMode.VxLoadBalancing">
            <summary>Utilize the internal VX load balancing algorithm; may be used on 2..3 node clusters.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ClusterAvailabilityMode.ExternalLoadBalancer">
            <summary>Utilize an external load balancer; may be used on 2..n node clusters.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.ClusterAvailabilityMode.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.ClusterAvailabilityMode">
            <summary>
Values that represent how the nodes in the cluster are balanced and failover.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.BookmarkRetentionPolicy.NeverDelete">
            <summary>Unlocked bookmarks are not automatically deleted.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.BookmarkRetentionPolicy.DeleteAfterRecording">
            <summary>
Unlocked bookmarks are automatically deleted after their corresponding recordings are deleted.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.BookmarkRetentionPolicy.DeleteAfterLimit">
            <summary>Unlocked bookmarks are automatically deleted after the retention limit.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.BookmarkRetentionPolicy.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.BookmarkRetentionPolicy">
            <summary>
Values that represent bookmark retention policies.
</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.AuthProtocol.SHA">
            <summary>SHA authentication protocol.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.AuthProtocol.None">
            <summary>No authentication protocol.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.AuthProtocol.MD5">
            <summary>MD5 authentication protocol.</summary>
        </member>
        <member name="F:VxSdkNet.Configuration.AuthProtocol.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Configuration.AuthProtocol">
            <summary>
Values that represent SNMP v3 authentication protocols.
</summary>
        </member>
        <member name="T:VxSdkNet.Configuration">
            <summary>
The Configuration class represents a device configuration.
</summary>
        </member>
        <member name="P:VxSdkNet.NetworkStorageInfo.Username">
            <summary>
Gets or sets the username for access to the resource.
</summary>
            <value>The username.</value>
        </member>
        <member name="P:VxSdkNet.NetworkStorageInfo.Path">
            <summary>
Gets or sets the UNC network path of the resource.
</summary>
            <value>The UNC network path.</value>
        </member>
        <member name="P:VxSdkNet.NetworkStorageInfo.Password">
            <summary>
Gets or sets the password for access to the resource.
</summary>
            <value>The password.</value>
        </member>
        <member name="M:VxSdkNet.NetworkStorageInfo.#ctor(VxSdk.VxNetworkStorageInfo)">
            <summary>
Constructor.
</summary>
            <param name="vxNetworkStorageInfo">The vx network storage info.</param>
        </member>
        <member name="M:VxSdkNet.NetworkStorageInfo.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.NetworkStorageInfo">
            <summary>
The NetworkStorageInfo class represents information about a network storage resource.
</summary>
        </member>
        <member name="P:VxSdkNet.VxFileRecovery.StatusMessage">
            <summary>
Gets the message about the current status of the file recovery, if any.
</summary>
            <value>The message about the current status, if any.</value>
        </member>
        <member name="P:VxSdkNet.VxFileRecovery.Status">
            <summary>
Gets the current status of the file recovery.
</summary>
            <value>The current status.</value>
        </member>
        <member name="P:VxSdkNet.VxFileRecovery.FilesRecovered">
            <summary>
Gets the number of files recovered.
</summary>
            <value>The number of files recovered..</value>
        </member>
        <member name="M:VxSdkNet.VxFileRecovery.Trigger(System.String,System.DateTime,System.DateTime)">
            <summary>
Triggers a file recovery.
</summary>
            <param name="volumeId">The unique identifier of the volume to recover files from.</param>
            <param name="startTime">The start time; files created before this time will not be recovered.</param>
            <param name="endTime">The end time; files created after this time will not be recovered.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of triggering the file recovery.</returns>
        </member>
        <member name="M:VxSdkNet.VxFileRecovery.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.VxFileRecovery.Halt">
            <summary>
Halts any file recovery in process.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of halting the file recovery process.</returns>
        </member>
        <member name="M:VxSdkNet.VxFileRecovery.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.VxFileRecovery.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.VxFileRecovery.#ctor(VxSdk.IVxFileRecovery*)">
            <summary>
Constructor.
</summary>
            <param name="vxFileRecovery">The vx file recovery.</param>
        </member>
        <member name="F:VxSdkNet.VxFileRecovery.FileRecoveryStatus.Success">
            <summary>The file recovery succeeded.</summary>
        </member>
        <member name="F:VxSdkNet.VxFileRecovery.FileRecoveryStatus.InProgress">
            <summary>The file recovery is in progress.</summary>
        </member>
        <member name="F:VxSdkNet.VxFileRecovery.FileRecoveryStatus.Idle">
            <summary>The file recovery process is idle.</summary>
        </member>
        <member name="F:VxSdkNet.VxFileRecovery.FileRecoveryStatus.Failed">
            <summary>The file recovery failed.</summary>
        </member>
        <member name="F:VxSdkNet.VxFileRecovery.FileRecoveryStatus.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.VxFileRecovery.FileRecoveryStatus">
            <summary>
Values that represent the status of a file recovery.
</summary>
        </member>
        <member name="T:VxSdkNet.VxFileRecovery">
            <summary>
The VxFileRecovery class represents a file recovery controller/monitoring resource for a recorder.
</summary>
        </member>
        <member name="P:VxSdkNet.AnalyticConfig.PtzPresetName">
            <summary>
Specifies the name of the PTZ preset that this configuration relates to. PTZ cameras supporting 
analytics can only be configured on PTZ presets.
</summary>
        </member>
        <member name="P:VxSdkNet.AnalyticConfig.MinConfidence">
            <summary>
Specifies the minimum confidence filtering value for detected objects in a video scene. 
</summary>
        </member>
        <member name="P:VxSdkNet.AnalyticConfig.Size">
            <summary>
Specifies the resolution of the grid used for all analytic behavior data.
</summary>
            <value>The resolution value.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticConfig.Id">
            <summary>
Gets the unique analytic configuration identifier.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticConfig.AnalyticBehaviors">
            <summary>
Gets all of the analytic behaviors for this analytic configuration.
</summary>
            <value>A <c>List</c> of analytic behaviors.</value>
        </member>
        <member name="M:VxSdkNet.AnalyticConfig.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.AnalyticConfig.DeleteAnalyticBehavior(VxSdkNet.AnalyticBehavior)">
            <summary>
Delete an analytic behavior from this analytic configuration.
</summary>
            <param name="analyticBehavior">The analytic behavior to be deleted from the analytic configuration.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of deleting the analytic behavior.</returns>
        </member>
        <member name="M:VxSdkNet.AnalyticConfig.AddAnalyticBehavior(VxSdkNet.NewAnalyticBehavior)">
            <summary>
Add a new analytic behavior to this analytic configuration.
</summary>
            <param name="newAnalyticBehavior">The new analytic behavior to be added to the analytic configuration.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of adding the analytic behavior.</returns>
        </member>
        <member name="M:VxSdkNet.AnalyticConfig.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.AnalyticConfig.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.AnalyticConfig.#ctor(VxSdk.IVxAnalyticConfig*)">
            <summary>
Constructor.
</summary>
            <param name="vxAnalyticConfig">The vx analytic configuration.</param>
        </member>
        <member name="T:VxSdkNet.AnalyticConfig">
            <summary>
The AnalyticConfig class represents a specific analytic configuration for a data source.
</summary>
        </member>
        <member name="P:VxSdkNet.Resolution.Height">
            <summary>
Gets or sets height in pixels.
</summary>
            <value>The height.</value>
        </member>
        <member name="P:VxSdkNet.Resolution.Width">
            <summary>
Gets or sets the width in pixels.
</summary>
            <value>The width.</value>
        </member>
        <member name="M:VxSdkNet.Resolution.#ctor(VxSdk.VxResolution*)">
            <summary>
Constructor.
</summary>
            <param name="vxResolution">The vx Resolution.</param>
        </member>
        <member name="M:VxSdkNet.Resolution.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.Resolution">
            <summary>
The Resolution class represents a resolution in pixels.
</summary>
        </member>
        <member name="P:VxSdkNet.DataObject.OwnerName">
            <summary>
Gets the name of the user that owns this data object.
</summary>
            <value>The name of the owner.</value>
        </member>
        <member name="P:VxSdkNet.DataObject.Owner">
            <summary>
Gets the <see cref="T:VxSdkNet.User" /> that owns this data object.
</summary>
            <value>The owner of this data object.</value>
        </member>
        <member name="P:VxSdkNet.DataObject.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.DataObject.Id">
            <summary>
Gets the unique identifier for this data object.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DataObject.ClientType">
            <summary>
Gets the client identifier.
</summary>
            <value>The client identifier.</value>
        </member>
        <member name="P:VxSdkNet.DataObject.Data">
            <summary>
Gets or sets the serialized data.
</summary>
            <value>The serialized data.</value>
        </member>
        <member name="M:VxSdkNet.DataObject.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.DataObject.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.DataObject.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.DataObject.#ctor(VxSdk.IVxDataObject*)">
            <summary>
Constructor.
</summary>
            <param name="vxDataObject">The vx data object.</param>
        </member>
        <member name="T:VxSdkNet.DataObject">
            <summary>
The DataObject class represents an object that contains a custom serialized data object submitted by a
client and stored on the server. The data is completely opaque to the server and other types of clients.
</summary>
        </member>
        <member name="P:VxSdkNet.Pattern.Name">
            <summary>
Gets the friendly name of the pattern.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.Pattern.Description">
            <summary>
Gets the friendly description of the pattern.
</summary>
            <value>The friendly description.</value>
        </member>
        <member name="M:VxSdkNet.Pattern.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Pattern.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Pattern.#ctor(VxSdk.IVxPattern*)">
            <summary>
Constructor.
</summary>
            <param name="vxPattern">The vx pattern.</param>
        </member>
        <member name="T:VxSdkNet.Pattern">
            <summary>
The Pattern class represents a predefined sequence of movement that a PTZ device can
perform when triggered. A running pattern will be halted upon any other PTZ request.
</summary>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.Severity">
            <summary>
Gets or sets the severity value for events generated from this analytic behavior, from 1 (highest) to 10 (lowest).
If set, overrides the corresponding situation severity.
</summary>
            <value>The severity value.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.ObjectWrongWayZone">
            <summary>
Gets or sets the object wrong way zone data used to configure analytics of <see cref="P:VxSdkNet.AnalyticBehavior.BehaviorType" /> is set
to <see cref="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectWrongWay" />.
</summary>
            <value>The object wrong way zone.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.ObjectInZone">
            <summary>
Gets or sets the object in zone data used to configure analytics of <see cref="P:VxSdkNet.AnalyticBehavior.BehaviorType" /> is set
to <see cref="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectInZone" />.
</summary>
            <value>The object in zone.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.ObjectType">
            <summary>
Gets or sets the type of object this analytic pertains to.
</summary>
            <value>The analytic object type.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.ObjectLineCounter">
            <summary>
Gets or sets the object line counter data used when <see cref="P:VxSdkNet.AnalyticBehavior.BehaviorType" /> is set to
<see cref="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectLineCounter" />.
</summary>
            <value>The object line counter.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.Name">
            <summary>
Gets or sets the friendly name of the analytic behavior.
</summary>
            <value>The friendly name.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.IsEnabled">
            <summary>
Gets or sets whether or not this analytic behavior is enabled.
</summary>
            <value>
                <c>true</c> if enabled, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.Id">
            <summary>
Gets the unique identifier of the analytic behavior.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.AnalyticBehavior.BehaviorType">
            <summary>
Gets the type of analytic behavior being performed.
</summary>
            <value>The analytic behavior type.</value>
        </member>
        <member name="M:VxSdkNet.AnalyticBehavior.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.AnalyticBehavior.#ctor(VxSdk.IVxAnalyticBehavior*)">
            <summary>
Constructor.
</summary>
            <param name="vxAnalyticBehavior">The vx analyticBehavior.</param>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticObjectType.Vehicle">
            <summary>A vehicle object type.</summary>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticObjectType.Person">
            <summary>A person object type.</summary>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticObjectType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AnalyticBehavior.AnalyticObjectType">
            <summary>
Values that represent the type of object this analytic pertains to.
</summary>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectWrongWay">
            <summary>Object wrong-way zone AnalyticBehavior.</summary>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectInZone">
            <summary>Object detected in zone analytic.</summary>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.ObjectLineCounter">
            <summary>Object line counting analytic.</summary>
        </member>
        <member name="F:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.AnalyticBehavior.AnalyticBehaviorType">
            <summary>
Values that represent the type of analytic behavior being performed.
</summary>
        </member>
        <member name="T:VxSdkNet.AnalyticBehavior">
            <summary>
The AnalyticBehavior class represents a point in time of interest with reference to a particular data source.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectWrongWayZone.Zone">
            <summary>
Gets or sets the list of points that make up the wrong-way zone. The zone is defined as an simple convex
quadrilateral. Do NOT repeat the starting vertex at the end of the list–it is implicitly included.
</summary>
            <value>The list of points.</value>
        </member>
        <member name="P:VxSdkNet.ObjectWrongWayZone.Vector">
            <summary>
Gets or sets the wrong-way zone’s vector. The vector points in the direction that indicates the
correct direction of flow. An objects heading opposite the vector are considered to be heading
in the wrong direction.
</summary>
            <value>The wrong-way zone’s vector.</value>
        </member>
        <member name="P:VxSdkNet.ObjectWrongWayZone.MinTriggerAngle">
            <summary>
Gets or sets the minimum angle between a detected object’s trajectory vector and the wrong-way
zone’s vector. Any object that is traveling at an angle &gt;= the minimum from the reference
vector will be considered heading in the wrong-direction.
</summary>
            <value>The minimum trigger angle value.</value>
        </member>
        <member name="M:VxSdkNet.ObjectWrongWayZone.#ctor(VxSdk.VxObjectWrongWayZone*)">
            <summary>
Constructor.
</summary>
            <param name="vxObjectWrongWayZone">The vx object wrong way zone.</param>
        </member>
        <member name="M:VxSdkNet.ObjectWrongWayZone.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.ObjectWrongWayZone">
            <summary>
The ObjectWrongWayZone class represents the data for an analytic object wrong way zone.
</summary>
        </member>
        <member name="P:VxSdkNet.ZoneVector.Y">
            <summary>
Gets or sets the starting y-axis coordinate value.
</summary>
            <value>The starting y-axis coordinate value.</value>
        </member>
        <member name="P:VxSdkNet.ZoneVector.X">
            <summary>
Gets or sets the starting x-axis coordinate value.
</summary>
            <value>The starting x-axis coordinate value.</value>
        </member>
        <member name="P:VxSdkNet.ZoneVector.Angle">
            <summary>
Gets or sets the direction as a counter-clockwise angle, in degrees, from the horizontal axis.
</summary>
            <value>The direction in degrees.</value>
        </member>
        <member name="M:VxSdkNet.ZoneVector.#ctor(VxSdk.VxVector*)">
            <summary>
Constructor.
</summary>
            <param name="vxVector">The vx vector.</param>
        </member>
        <member name="M:VxSdkNet.ZoneVector.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.ZoneVector">
            <summary>
The Vector class represents a starting coordinate and the angle from the horizontal axis the vector is pointing.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectInZone.Vertices">
            <summary>
Gets or sets the list of points that make up the zone. Must contain at least 3 points, which together
specify the closed polygonal zone within which to look for objects of the prescribed type.
</summary>
            <value>The list of points.</value>
        </member>
        <member name="M:VxSdkNet.ObjectInZone.#ctor(VxSdk.VxObjectInZone*)">
            <summary>
Constructor.
</summary>
            <param name="vxObjectInZone">The vx object in zone.</param>
        </member>
        <member name="M:VxSdkNet.ObjectInZone.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.ObjectInZone">
            <summary>
The ObjectInZone class represents the data for an analytic object in zone.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.StartPoint">
            <summary>
Gets or sets the starting coordinate for the object counting line.
</summary>
            <value>The starting coordinate.</value>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.RightCountLabel">
            <summary>
Gets or sets the friendly name associated with a bidirectional counter’s right count.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.MaxCountThreshold">
            <summary>
Gets or sets the maximum count threshold that must be met before an event is triggered. This
value is used by both the bidirectional capacity events and the sliding window events
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.LineCounterType">
            <summary>
Gets or sets the type of line counter (i.e. unidirectional, bidirectional, 
or omnidirectional). The type defines how the line counter increments 
and maintains it’s counts.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.LeftCountLabel">
            <summary>
Gets or sets the friendly name associated with a bidirectional counter’s left count.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.EventWindowSecs">
            <summary>
Gets or sets the event’s time window for testing if the counts maximum 
threshold is met within this window. For example, if max count threshold = 100 
and event_window_secs = 3600 then an event would be generated if 100 objects cross 
a counting line over the last hour. Once the hour elapses the event trigger’s base 
count is reset and the count window slides to the next hour and starts over. Ignored 
if max count threshold is not set.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.EventsEnabled">
            <summary>
Gets or sets whether line counter specific events for this line counter are enabled.
</summary>
        </member>
        <member name="P:VxSdkNet.ObjectLineCounter.EndPoint">
            <summary>
Gets or sets the ending coordinate for the object counting line.
</summary>
            <value>The ending coordinate.</value>
        </member>
        <member name="M:VxSdkNet.ObjectLineCounter.#ctor(VxSdk.VxObjectLineCounter*)">
            <summary>
Constructor.
</summary>
            <param name="vxObjectLineCounter">The vx object line counter.</param>
        </member>
        <member name="M:VxSdkNet.ObjectLineCounter.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.ObjectLineCounter.LineCounterTypes">
            <summary>
The type of ObjectLineCounter.
</summary>
        </member>
        <member name="T:VxSdkNet.ObjectLineCounter">
            <summary>
The ObjectLineCounter class represents the data for an analytic object line counter.
</summary>
        </member>
        <member name="P:VxSdkNet.GridPoint.Y">
            <summary>
Gets or sets the Y-axis coordinate value.
</summary>
            <value>The Y-axis coordinate value.</value>
        </member>
        <member name="P:VxSdkNet.GridPoint.X">
            <summary>
Gets or sets the X-axis coordinate value.
</summary>
            <value>The X-axis coordinate value.</value>
        </member>
        <member name="M:VxSdkNet.GridPoint.#ctor(VxSdk.VxPoint*)">
            <summary>
Constructor.
</summary>
            <param name="vxPoint">The vx point.</param>
        </member>
        <member name="M:VxSdkNet.GridPoint.#ctor">
            <summary>
Default constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.GridPoint">
            <summary>
The Point class represents a location on a Cartesian grid.
</summary>
        </member>
        <member name="P:VxSdkNet.Log.LogEndpoint">
            <summary>
Gets the URI to the download location of the actual log data. May be presented in whatever format is suitable
to the server. This endpoint will only be present if the log data is complete and available for download.
</summary>
            <returns>The log endpoint, if available.</returns>
        </member>
        <member name="P:VxSdkNet.Log.Initiated">
            <summary>
Gets the date and time at which the log was requested.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the log was requested.</value>
        </member>
        <member name="P:VxSdkNet.Log.Id">
            <summary>
Gets the unique identifier of the log.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Log.Completed">
            <summary>
Gets the date and time at which the log was completed.
</summary>
            <value>A default <c>DateTime</c> if it fails, else the <c>DateTime</c> at which the log was completed.</value>
        </member>
        <member name="M:VxSdkNet.Log.Refresh">
            <summary>
Refreshes this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.Log.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Log.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Log.#ctor(VxSdk.IVxLog*)">
            <summary>
Constructor.
</summary>
            <param name="vxLog">The vx log.</param>
        </member>
        <member name="T:VxSdkNet.Log">
            <summary>
The Log class represents a log file or set of log files.
</summary>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.TimeTableId">
            <summary>
Gets or sets the unique identifier of the time table assigned to the schedule trigger, if any.
</summary>
            <value>The unique time table identifier, if any.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.Timeout">
            <summary>
Gets or sets the amount of time, from 1 to 300 seconds, to consider the schedule trigger active immediately after it becomes
active ("duration recording").
</summary>
            <value>The timeout in seconds.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.PreTrigger">
            <summary>
Gets or sets the amount of time, from 0 to 30 seconds, to consider the schedule trigger active prior to when it becomes active
("pre alarm").
</summary>
            <value>The pre trigger time in seconds.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.PostTrigger">
            <summary>
Gets or sets the amount of time, from 0 to 300 seconds, to continue to consider the schedule trigger active when it becomes
inactive ("post alarm").
</summary>
            <value>The post trigger time in seconds.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.Limits">
            <summary>
Gets any limits related to this resource.
</summary>
            <value>The limits related to this resource.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.InactiveEventSituationType">
            <summary>
Gets or sets the type of event that will activate the schedule trigger, if any.
</summary>
            <value>The event situation type.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.Id">
            <summary>
Gets the unique identifier of the schedule trigger.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.Framerate">
            <summary>
Gets or sets the recording framerate level.
</summary>
            <value>The framerate level.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.EventProperties">
            <summary>
Gets or sets the event properties that will activate the schedule.
</summary>
            <value>A <c>List</c> containing the event properties.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.EventSituationType">
            <summary>
Gets or sets the type of event that will activate the schedule trigger, if any.
</summary>
            <value>The event situation type.</value>
        </member>
        <member name="P:VxSdkNet.ScheduleTrigger.Action">
            <summary>
Gets or sets the action performed when the schedule trigger activates.
</summary>
            <value>The <see cref="T:VxSdkNet.ScheduleTrigger.Actions">Action</see>.</value>
        </member>
        <member name="M:VxSdkNet.ScheduleTrigger.Refresh">
            <summary>
Update this instances properties.
</summary>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of updating the properties.</returns>
        </member>
        <member name="M:VxSdkNet.ScheduleTrigger.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ScheduleTrigger.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ScheduleTrigger.#ctor(VxSdk.IVxScheduleTrigger*)">
            <summary>
Constructor.
</summary>
            <param name="vxScheduleTrigger">The schedule trigger.</param>
        </member>
        <member name="F:VxSdkNet.ScheduleTrigger.Actions.Record">
            <summary>Record all resources associated with the schedule.</summary>
        </member>
        <member name="F:VxSdkNet.ScheduleTrigger.Actions.EventSourceRecord">
            <summary>Record only the resource (associated with the Schedule) that was
the source of the event causing the schedule trigger to activate.</summary>
        </member>
        <member name="F:VxSdkNet.ScheduleTrigger.Actions.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.ScheduleTrigger.Actions">
            <summary>
Values that represent schedule recording actions.
</summary>
        </member>
        <member name="T:VxSdkNet.ScheduleTrigger">
            <summary>
The Situation class represents a schedule trigger. A schedule trigger is a time range and an optional
event that together act as a trigger to activate a schedule and cause it to perform its configured action.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.StringLimits">
            <summary>
Gets the string limits.
</summary>
            <value>A <c>List</c> of string limits, if any.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ObjectLimits">
            <summary>
Gets the object limits.
</summary>
            <value>A <c>List</c> of object limits, if any.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ListLimits">
            <summary>
Gets the list limits.
</summary>
            <value>A <c>List</c> of list limits, if any.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimits">
            <summary>
Gets the integer limits.
</summary>
            <value>A <c>List</c> of integer limits, if any.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimits">
            <summary>
Gets the float limits.
</summary>
            <value>A <c>List</c> of float limits, if any.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.BooleanLimits">
            <summary>
Gets the boolean limits.
</summary>
            <value>A <c>List</c> of boolean limits, if any.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.#ctor(VxSdk.VxLimits*)">
            <summary>
Constructor.
</summary>
            <param name="vxLimits">The vx limits.</param>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.StringLimit.Options">
            <summary>
Gets a list of valid values that may be applied to the field.
<remarks>
If no values are present, this indicates that the field is currently read-only.
</remarks></summary>
            <value>A list of valid values.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.StringLimit.HasDefaultValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.StringLimit.DefaultValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.StringLimit.DefaultValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.StringLimit.FieldName">
            <summary>
Gets the name of the field that this string limit applies to.
</summary>
            <value>The field name.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.StringLimit.DefaultValue">
            <summary>
Gets the field’s default value.
</summary>
            <value>The default value.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.StringLimit.#ctor(VxSdk.VxLimits.String)">
            <summary>
Constructor.
</summary>
            <param name="stringLimit">The string limit.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLimits.StringLimit">
            <summary>
The String class represents the valid values for a string field.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ObjectLimit.Options">
            <summary>
Gets a list of valid values that may be applied to the field.
<remarks>
If no values are present, this indicates that the field is currently read-only.
</remarks></summary>
            <value>A list of valid values.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ObjectLimit.FieldName">
            <summary>
Gets the name of the field that this object limit applies to.
</summary>
            <value>The field name.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.ObjectLimit.#ctor(VxSdk.VxLimits.Object)">
            <summary>
Constructor.
</summary>
            <param name="objectLimit">The object limit.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLimits.ObjectLimit">
            <summary>
The Object class represents the valid values for an object field.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ListLimit.MinItems">
            <summary>
Gets the minimum number of items that may appear in the list.
</summary>
            <value>The minimum number of items.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ListLimit.MaxItems">
            <summary>
Gets the maximum number of items that may appear in the list.
</summary>
            <value>The maximum number of items.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ListLimit.HasMinItems">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.ListLimit.MinItems" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.ListLimit.MinItems" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ListLimit.HasMaxItems">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.ListLimit.MaxItems" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.ListLimit.MaxItems" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.ListLimit.FieldName">
            <summary>
Gets the name of the field that this list limit applies to.
</summary>
            <value>The field name.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.ListLimit.#ctor(VxSdk.VxLimits.List)">
            <summary>
Constructor.
</summary>
            <param name="listLimit">The list limit.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLimits.ListLimit">
            <summary>
The List class represents the valid values for an array field.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.MinValue">
            <summary>
Gets the field’s minimum valid value.
</summary>
            <value>The field’s minimum valid value.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.MaxValue">
            <summary>
Gets the field’s maximum valid value.
</summary>
            <value>The field’s maximum valid value.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.HasMinValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.IntegerLimit.MinValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.IntegerLimit.MinValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.HasMaxValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.IntegerLimit.MaxValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.IntegerLimit.MaxValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.HasDefaultValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.IntegerLimit.DefaultValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.IntegerLimit.DefaultValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.FieldName">
            <summary>
Gets the name of the field that this integer limit applies to.
</summary>
            <value>The field name.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.IntegerLimit.DefaultValue">
            <summary>
Gets the field’s default value.
</summary>
            <value>The default value.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.IntegerLimit.#ctor(VxSdk.VxLimits.Integer)">
            <summary>
Constructor.
</summary>
            <param name="integerLimit">The integer limit.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLimits.IntegerLimit">
            <summary>
The Integer class represents the valid values for a numeric integer field.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.Options">
            <summary>
Gets a list of valid values that may be applied to the field.
<remarks>
If no values are present, this indicates that the field is currently read-only.
</remarks></summary>
            <value>A list of valid values.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.MinValue">
            <summary>
Gets the field’s minimum valid value.
</summary>
            <value>The field’s minimum valid value.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.MaxValue">
            <summary>
Gets the field’s maximum valid value.
</summary>
            <value>The field’s maximum valid value.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.HasMinValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.FloatLimit.MinValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.FloatLimit.MinValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.HasMaxValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.FloatLimit.MaxValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.FloatLimit.MaxValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.HasDefaultValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.FloatLimit.DefaultValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.FloatLimit.DefaultValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.FieldName">
            <summary>
Gets the name of the field that this float limit applies to.
</summary>
            <value>The field name.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.FloatLimit.DefaultValue">
            <summary>
Gets the field’s default value.
</summary>
            <value>The default value.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.FloatLimit.#ctor(VxSdk.VxLimits.Float)">
            <summary>
Constructor.
</summary>
            <param name="floatLimit">The float limit.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLimits.FloatLimit">
            <summary>
The Float class represents the valid values for a numeric float field.
</summary>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.BooleanLimit.Options">
            <summary>
Gets a list of valid values that may be applied to the field.
<remarks>
If no values are present, this indicates that the field is currently read-only.
</remarks></summary>
            <value>A list of valid values.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.BooleanLimit.HasDefaultValue">
            <summary>
Gets or sets whether <see cref="P:VxSdkNet.ResourceLimits.BooleanLimit.DefaultValue" /> has been set
</summary>
            <value>
                <c>true</c> if <see cref="P:VxSdkNet.ResourceLimits.BooleanLimit.DefaultValue" /> has been set, otherwise <c>false</c>.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.BooleanLimit.FieldName">
            <summary>
Gets the name of the field that this boolean limit applies to.
</summary>
            <value>The field name.</value>
        </member>
        <member name="P:VxSdkNet.ResourceLimits.BooleanLimit.DefaultValue">
            <summary>
Gets the field’s default value.
</summary>
            <value>The default value.</value>
        </member>
        <member name="M:VxSdkNet.ResourceLimits.BooleanLimit.#ctor(VxSdk.VxLimits.Boolean)">
            <summary>
Constructor.
</summary>
            <param name="booleanLimit">The boolean limit.</param>
        </member>
        <member name="T:VxSdkNet.ResourceLimits.BooleanLimit">
            <summary>
The BooleanLimit class represents the valid values for a boolean field.
</summary>
        </member>
        <member name="T:VxSdkNet.ResourceLimits">
            <summary>
The ResourceLimits class represents a map of limits related to a resource. A resource will supply a limit for any
field that is supported but does not have a valid value available. The presence of a limit indicates that
the associated field is supported, regardless of whether the field is present in the resource
representation or not.
</summary>
        </member>
        <member name="P:VxSdkNet.Clip.StartTime">
            <summary>
Gets the start time of the clip.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.Clip.SourceDataStorageId">
            <summary>
Gets the unique identifier of the data storage on which the media for this clip was originally stored. If
different than <see cref="P:VxSdkNet.Clip.DataStorageId" />, indicates that this clip was copied to the data storage from another data storage.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Clip.MediaType">
            <summary>
Gets the type of media contained in the clip.
</summary>
            <value>The media type.</value>
        </member>
        <member name="P:VxSdkNet.Clip.Framerate">
            <summary>
Gets the framerate of the clip.
</summary>
            <value>The framerate.</value>
        </member>
        <member name="P:VxSdkNet.Clip.EventType">
            <summary>
Gets the event type that triggered the recording of the clip.
</summary>
            <value>The recording event type.</value>
        </member>
        <member name="P:VxSdkNet.Clip.EndTime">
            <summary>
Gets the end time of the clip.
</summary>
            <value>The end time.</value>
        </member>
        <member name="P:VxSdkNet.Clip.DataStorageId">
            <summary>
Gets the unique identifier of the data storage on which the media for this clip is stored.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Clip.DataSourceName">
            <summary>
Gets the friendly name of the clips data source.
</summary>
            <value>The friendly name of the data source.</value>
        </member>
        <member name="P:VxSdkNet.Clip.DataSourceId">
            <summary>
Gets the unique identifier of the clips data source.
</summary>
            <value>The unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.Clip.DataInterfaces">
            <summary>
Gets the data interfaces available for retrieval of the stored media this clip represents.
</summary>
            <value>A <c>List</c> of the data interfaces.</value>
        </member>
        <member name="M:VxSdkNet.Clip.GetSnapshotEndpoint(VxSdkNet.SnapshotFilter)">
            <summary>
Gets the endpoint URI for snapshots.
</summary>
            <returns>The snapshot endpoint.</returns>
        </member>
        <member name="M:VxSdkNet.Clip.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.Clip.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.Clip.#ctor(VxSdk.IVxClip*)">
            <summary>
Constructor.
</summary>
            <param name="vxClip">The vx clip.</param>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Timed">
            <summary>Time-based (continuous); no event.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Motion">
            <summary>Motion anayltic.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Manual">
            <summary>Manual user initiation.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Event">
            <summary>General system event.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Analytic">
            <summary>Video analytic (non-motion).</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Alarm">
            <summary>Hardware or software alarm.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Clip.RecordingTypes">
            <summary>
Values that represent the type of trigger that caused the recording.
</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingFramerates.Normal">
            <summary>Normal framerate.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingFramerates.Low">
            <summary>Low framerate.</summary>
        </member>
        <member name="F:VxSdkNet.Clip.RecordingFramerates.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Clip.RecordingFramerates">
            <summary>
Values that represent the video framerate level.
</summary>
        </member>
        <member name="T:VxSdkNet.Clip">
            <summary>
The Clip class represents a contiguous duration of stored media originating from a single DataSource.
</summary>
        </member>
        <member name="M:VxSdkNet.SnapshotFilter.Clear">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="P:VxSdkNet.SnapshotFilter.Width">
            <summary>
Gets or sets the width of the snapshot, maintaining ratio.
</summary>
            <value>The width of the snapshot in pixels.</value>
        </member>
        <member name="P:VxSdkNet.SnapshotFilter.StartTime">
            <summary>
Gets or sets the DateTime at which the initial image should start.
Defaults to the associated clips start time.
</summary>
            <value>The start time.</value>
        </member>
        <member name="P:VxSdkNet.SnapshotFilter.Offset">
            <summary>
Gets or sets the time offset between images.
</summary>
            <value>The amount of time, in seconds, between images.</value>
        </member>
        <member name="P:VxSdkNet.SnapshotFilter.EndTime">
            <summary>
Gets or sets the DateTime at which no further images should be returned.
Defaults to the associated clips end time.
</summary>
            <value>The end time.</value>
        </member>
        <member name="M:VxSdkNet.SnapshotFilter.Finalize">
            <summary>
Finaliser.
</summary>
        </member>
        <member name="M:VxSdkNet.SnapshotFilter.Dispose">
            <summary>
Destructor.
</summary>
        </member>
        <member name="M:VxSdkNet.SnapshotFilter.#ctor">
            <summary>
Constructor.
</summary>
        </member>
        <member name="T:VxSdkNet.SnapshotFilter">
            <summary>
The SnapshotFilter class represents a filter that can be used when generating snapshots.
</summary>
        </member>
        <member name="P:VxSdkNet.DataInterface.YResolution">
            <summary>
Gets the vertical resolution of the data.
</summary>
            <value>The vertical resolution.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.XResolution">
            <summary>
Gets the horizontal resolution of the data.
</summary>
            <value>The horizontal resolution.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.SupportsMulticast">
            <summary>
Gets a value indicating whether the interface supports multicast transmission.
</summary>
            <value>
                <c>true</c> if multicast is supported, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.RenderType">
            <summary>
Gets the type of rendering required for the media data delivered by this interface.
</summary>
            <value>The rendering type.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.Protocol">
            <summary>
Gets the protocol of the data interface.
</summary>
            <value>The interface protocol.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.Overlays">
            <summary>
Gets the available overlays.
</summary>
            <value>A <c>List</c> of available overlays, if any.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.MulticastTestPort">
            <summary>
Gets the multicast test port used to test transmission capabilities.
</summary>
            <value>The multicast test port.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.MulticastTestIp">
            <summary>
Gets the multicast test IP used to test transmission capabilities.
</summary>
            <value>The multicast test IP.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.IsTranscoded">
            <summary>
Gets a value indicating whether the interface provides a transcoded stream.
</summary>
            <value>
                <c>true</c> if transcoded, <c>false</c> if not.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.Framerate">
            <summary>
Gets the framerate of the data.
</summary>
            <value>The framerate.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.Format">
            <summary>
Gets the media stream encoding format.
</summary>
            <value>The encoding format.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.DataEndpoint">
            <summary>
Gets the endpoint of the data interface.
</summary>
            <value>The data interface endpoint.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.DataEncodingId">
            <summary>
Gets the unique identifier for a specific data encoding (based on encoding quality, framerate, and resolution). Multiple identical
copies of the data may exist across the system; these will have the same dataEncodingId. This ID may be used when requesting a specific
encoding to export, record, playback, etc.
</summary>
            <value>The data encoding unique identifier.</value>
        </member>
        <member name="P:VxSdkNet.DataInterface.Bitrate">
            <summary>
Gets the average bitrate of the stream, if available (in kbps).
</summary>
            <value>The average bitrate of the stream.</value>
        </member>
        <member name="M:VxSdkNet.DataInterface.#ctor(VxSdk.IVxDataInterface*)">
            <summary>
Constructor.
</summary>
            <param name="vxDataInterface">The vx data interface.</param>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamProtocols.RtspRtp">
            <summary>The RTSP/RTP protocol.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamProtocols.MjpegPull">
            <summary>The Mjpeg (pull) protocol.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamProtocols.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataInterface.StreamProtocols">
            <summary>
Values that represent stream protocols.
</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamFormats.G711">
            <summary>G.711 encoding format.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamFormats.Jpeg">
            <summary>JPEG encoding format.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamFormats.Mpeg4">
            <summary>MPEG-4 encoding format.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamFormats.H265">
            <summary>H.265 encoding format.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamFormats.H264">
            <summary>H.264 encoding format.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.StreamFormats.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataInterface.StreamFormats">
            <summary>
Values that represent stream protocols.
</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Fisheye">
            <summary>Fisheye renderer.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Standard">
            <summary>Standard renderer.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Optera360">
            <summary>Optera 360 renderer.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Optera270">
            <summary>Optera 270 renderer.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Optera180">
            <summary>Optera 180 renderer.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Evo">
            <summary>Evo renderer.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.RenderTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataInterface.RenderTypes">
            <summary>
Values that represent stream protocols.
</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.OverlayTypes.Motion">
            <summary>Motion overlay.</summary>
        </member>
        <member name="F:VxSdkNet.DataInterface.OverlayTypes.Unknown">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.DataInterface.OverlayTypes">
            <summary>
Values that represent available overlays.
</summary>
        </member>
        <member name="T:VxSdkNet.DataInterface">
            <summary>
The DataInterface class represents an interface to a data source.
</summary>
        </member>
        <member name="M:VxSdkNet.VxGlobal.SetLogPath(System.String)">
            <summary>
Sets the output path for log files.
</summary>
            <param name="logPath">The directory to store the generated log files.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the configuration.</returns>
        </member>
        <member name="M:VxSdkNet.VxGlobal.SetLogLevel(VxSdkNet.LogLevel.Value)">
            <summary>
Sets the minimum severity level of messages to log.
</summary>
            <param name="logLevel">The logging severity <see cref="T:VxSdkNet.LogLevel">level</see>.</param>
            <returns>The <see cref="T:VxSdkNet.Results.Value">Result</see> of setting the configuration.</returns>
        </member>
        <member name="T:VxSdkNet.VxGlobal">
            <summary>
Provides global VxSDK methods.
</summary>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCppTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Convert a char to a DateTime using TimeOfDay format.
</summary>
            <param name="charString">The time string.</param>
            <returns>Default DateTime if it fails, else the parsed DateTime.</returns>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCSharpTime(System.DateTime)">
            <summary>
Convert a DateTime to a string in TimeOfDay format.
</summary>
            <param name="dateTime">The DateTime.</param>
            <returns>The DateTime as a string in TimeOfDay format.</returns>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCSharpDateTime(System.DateTime)">
            <summary>
Convert a DateTime to a string.
</summary>
            <param name="dateTime">The DateTime.</param>
            <returns>The DateTime as a string.</returns>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCppDateTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Convert a char to a DateTime.
</summary>
            <param name="charString">The date string.</param>
            <returns>Default DateTime if it fails, else the parsed DateTime.</returns>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCSharpString(System.String)">
            <summary>
Convert a system string to a standard string.
</summary>
            <param name="sysString">The system string.</param>
            <returns>Null if it fails, else the converted string.</returns>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCppString(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Convert a pointer to const char to a system string.
</summary>
            <param name="charString">The string source</param>
            <returns>Null if it fails, else the converted string.</returns>
        </member>
        <member name="M:VxSdkNet.Utils.ConvertCppString(std.basic_string&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte,std.char_traits{System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte},std.allocator&lt;System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte&gt;&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Convert a std string to a system string.
</summary>
            <param name="stdString">The string source</param>
            <returns>Null if it fails, else the converted string.</returns>
        </member>
        <member name="T:VxSdkNet.Utils">
            <summary>
Provides commonly used methods.
</summary>
        </member>
        <member name="T:VxSdkNet.LogLevel.Value">
            <summary>
Values that represent the logging severity levels.
</summary>
        </member>
        <member name="T:VxSdkNet.LogLevel">
            <summary>
The LogLevel class is a helper class that contains the logging severity <see cref="T:VxSdkNet.LogLevel.Value">Values</see> enum.
</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Discovered">
            <summary>Filter by time discovered.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.FileName">
            <summary>Filter by filename.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.RecordType">
            <summary>Filter by recording type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Provider">
            <summary>Filter by provider type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ParentId">
            <summary>Filter by parent id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Locked">
            <summary>True to return only items that are locked.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.LicenseRequired">
            <summary>True to return only items that require a license.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.LayerName">
            <summary>Filter by layer name.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.HasFolderTags">
            <summary>True to return only items that have folder tags.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.GroupId">
            <summary>Filter by group id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Folder">
            <summary>True to return only items that are folders.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Encoding">
            <summary>Filter by encoding type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DriverType">
            <summary>Filter by driver type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DeviceId">
            <summary>Filter by device id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataSourceType">
            <summary>Filter by data source type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Trashed">
            <summary>True to return only items that have been trashed.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataStorageId">
            <summary>Filter by data storage id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Initiated">
            <summary>Filter by the intiated time value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Enabled">
            <summary>True to return only items that are enabled.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.TagsAll">
            <summary>Filter by all public and private tags (tags_all).</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.AdvancedQuery">
            <summary>Filter by advanced query.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ImageType">
            <summary>Filter by a image type, useful when filtering Drawings.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ServicePropertyId">
            <summary>Filter by the name of the key in the properties map corresponding to the service identifier.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataSourceName">
            <summary>Filter by data source name.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataSourceAllPrivateTags">
            <summary>Filter by comma-separated list of tag names owned by the current user.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataSourceAllTags">
            <summary>Filter by comma-separated list of tag names.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.HasStatus">
            <summary>Filter by items that have a specific status.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.HasProperty">
            <summary>Filter by items that have a specific property defined.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.LastName">
            <summary>Filter by last name.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.FirstName">
            <summary>Filter by first name.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ManualRecording">
            <summary>True to return items that are currently being manually recorded.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.AllPrivateTags">
            <summary>Filter by comma-separated list of tag names owned by the current user.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Linked">
            <summary>True to return only items that are linked.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ResourceType">
            <summary>Filter by resource type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Notify">
            <summary>Filter by the notify value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Log">
            <summary>Filter by the log value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.AudibleNotify">
            <summary>Filter by the audible notification value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Internal">
            <summary>True to return items that are internal to the server and read-only</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ResourceId">
            <summary>Filter by resource id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Status">
            <summary>Filter by status.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Size">
            <summary>Filter by the size value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.PercentComplete">
            <summary>Filter by the percent complete value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.SourceUserName">
            <summary>Filter by source username.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.SourceDeviceId">
            <summary>Filter by source device id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Severity">
            <summary>Filter by severity.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Notifies">
            <summary>True to return items that were sent to the client.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.GeneratorDeviceId">
            <summary>Filter by generator device id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.AckUser">
            <summary>Filter by the ack user value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.AckState">
            <summary>Filter by the ack state value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Version">
            <summary>Filter by version.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Vendor">
            <summary>Filter by vendor.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Serial">
            <summary>Filter by serial.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Model">
            <summary>Filter by model.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Commissioned">
            <summary>True to return only items that are commissioned.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.State">
            <summary>Filter by the state value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Recording">
            <summary>True to return only items that are recording.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Number">
            <summary>Filter by number.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Ip">
            <summary>Filter by IP.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Capturing">
            <summary>True to return only items that are capturing.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.AllTags">
            <summary>Filter by comma-separated list of tag names.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Username">
            <summary>Filter by the username value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Owner">
            <summary>Filter by owner.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Owned">
            <summary>True to return only owned items.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ClientType">
            <summary>Filter by the client type value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Framerate">
            <summary>Filter by the framerate value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Event">
            <summary>Filter by the event value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.StartTime">
            <summary>Filter by the start time value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.EndTime">
            <summary>Filter by the end time value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Time">
            <summary>Filter by the time value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.ModifiedSince">
            <summary>Return items that have been modified since the given time.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Description">
            <summary>Filter by the description value.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataSourceNumber">
            <summary>Filter by data source number.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Unassigned">
            <summary>True to return only items that are not assigned.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.SituationType">
            <summary>Filter by situation type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Type">
            <summary>Filter by type.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Start">
            <summary>The start index.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Id">
            <summary>Filter by id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Name">
            <summary>Filter by name.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.SearchEndTime">
            <summary>Filter by end time.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.SearchStartTime">
            <summary>Filter by start time.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.DataSourceId">
            <summary>Filter by data source id.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.Count">
            <summary>The maximum number of items to return per page.</summary>
        </member>
        <member name="F:VxSdkNet.Filters.Value.None">
            <summary>No filter.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.SdkLicenseGracePeriodExpired">
            <summary>The license associated with the license key was not found on the server and the license grace period has expired.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.SdkLicenseGracePeriodActive">
            <summary>The license associated with the license key was not found on the server, but the license grace period is active.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.SdkLicenseExpired">
            <summary>The license on the server has expired.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.SdkLicenseVersionInvalid">
            <summary>The license on the server does not support this version of the SDK.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.SdkLicenseKeyInvalid">
            <summary>The SDK license key data is invalid.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.SdkLicenseKeyEmpty">
            <summary>The SDK license key is empty.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.Unauthorized">
            <summary>An unauthorized request was made (i.e. user does not have permission to access the resource).</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.Unauthenticated">
            <summary>An unauthenticated request was made (i.e. invalid username and/or password).</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PermissionConflict">
            <summary>
The requested operation is not possible due to a permission conflict with the resource. Typically this is due to a violation
of permission hierarchy (e.g. a nested permission is being assigned without its parent permission already assigned).
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PasswordTooSimilar">
            <summary>A password too similar to a previous password was supplied in an attempt to create a new user password.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PasswordTooShort">
            <summary>A password of insufficient length was supplied in an attempt to create a new user password.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PasswordReqMoreUpper">
            <summary>A password with an insufficient number of uppercase letters was supplied in an attempt to create a new user password.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PasswordReqMoreSpecial">
            <summary>A password with an insufficient number of special characters was supplied in an attempt to create a new user password.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PasswordReqMoreLower">
            <summary>A password with an insufficient number of lowercase letters was supplied in an attempt to create a new user password.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PasswordReqMoreDigits">
            <summary>A password with an insufficient number of digits was supplied in an attempt to create a new user password.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.AuthExpired">
            <summary>A request was made using expired authentication credentials.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ResourceLocked">
            <summary>An attempt to edit a locked resource was made by a user that does not own the IVxResourceLock.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ReadOnlyField">
            <summary>An attempt to edit a read-only field was made.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.PortInUse">
            <summary>An attempt to set a new port number failed because the port number is already in use.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.InvalidValue">
            <summary>
An attempt to set an invalid value on a writable field was made. The value may be invalid due to being out of range, unavailable, etc.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.NeedOverride">
            <summary>Locked by lower authority user, may override.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.CameraLocked">
            <summary>Camera is locked by same or higher authority user.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.CameraInUse">
            <summary>Camera is in use (or the usage dwell time is active) by same or higher authority user.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.NoLicense">
            <summary>Unable to commission (or float) a feature because no valid license is available for it.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.LicenseReqLdapAdmin">
            <summary>Unable to apply the license; valid LDAP administrator credentials are required.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.LicenseRequired">
            <summary>A valid license is required to utilize this method on the resource; no valid license found.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.LicenseCountExceeded">
            <summary>A valid license is available but the available count on that license is fully utilized.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.IncompatibleLicense">
            <summary>The license that was supplied is not compatible with the device and/or system that it is being applied to.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ActivationFailed">
            <summary>The activation failed.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ActivationHostNotFound">
            <summary>The activation failed due to communication error with the FNO licensing server.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ActivationConflict">
            <summary>The license that was supplied has an activation conflict with an existing license(e.g.duplicate activation IDs).</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ResponseTooLarge">
            <summary>
The server is incapable of handling the client request due to the size of the resulting response.What constitutes
’too large’ is entirely up to the server.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.OperationFailed">
            <summary>The requested operation failed.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.NotReadyUnauthorized">
            <summary>
The server is not in an appropriate state to be able to service this request due to an authorization issue between it
and another entity. The server requires intervention in order to resolve this.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.NotReadyUnauthenticated">
            <summary>
The server is not in an appropriate state to be able to service this request due to an authentication issue between it
and another entity. The server requires intervention in order to resolve this.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.NotReady">
            <summary>
The server is not in an appropriate state to be able to service this request. The server requires intervention in order
to resolve this.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.InsufficientResources">
            <summary>The server has insufficient resources to satisfy the request.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.Conflict">
            <summary>
The requested operation is not possible due to a conflict with the resource. Typically this is due to a violation of a
uniqueness property on one of the resource’s fields.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ExportStorageUnavailable">
            <summary>
The export storage location is not accessible; this may be due to an invalid location, network issue, or storage issue.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ExportStorageUnauthenticated">
            <summary> The export storage location is not accessible due to invalid credentials.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ExportStorageFull">
            <summary>The export storage location does not have enough free space to store the export.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ExportDataUnretrievable">
            <summary>The data needed to perform the export operation can not be retrieved.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.StorageUnavailable">
            <summary>Storage is unavailable, data cannot be retrieved at this time.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.NoAvailableStreams">
            <summary>The server is unable to initiate any new stream sessions due to having reached its stream count capacity.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.EndOfStream">
            <summary>
No further stream data is available (the end of all recorded data has been reached; no further data is currently be recorded).
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.EdgeOfStream">
            <summary>
No further stream data is currently available (the edge of a currently recording clip has been reached); more data will
be available shortly.
</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.CameraUnavailable">
            <summary>Camera is unavailable, data cannot be retrieved at this time.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.InvalidLicense">
            <summary>No valid license was found on the VideoXpert system.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.CommunicationError">
            <summary>There was an error communicating to the device.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.InvalidParameters">
            <summary>A parameter was invalid.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.ActionUnavailable">
            <summary>The attempted action is unsupported by the system.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.InvalidLoginInfo">
            <summary>The login credentials were invalid.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.InsufficientSize">
            <summary>The size value was not sufficient enough to allocate the collection.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.UnsupportedVersion">
            <summary>The VideoXpert system version is not supported.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.OK">
            <summary>The action was successful.</summary>
        </member>
        <member name="F:VxSdkNet.Results.Value.UnknownError">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdkNet.Results.Value">
            <summary>
Values that represent the result of calls to the VideoXpert system.
</summary>
        </member>
        <member name="T:VxSdkNet.Results">
            <summary>
The Results class is a helper class that contains the <see cref="T:VxSdkNet.Results.Value">Results</see> enum.
</summary>
        </member>
        <member name="M:VxSdk.VxSetLogPath(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Sets the output path for log files.
</summary>
            <param name="logPath">The directory to store the generated log files.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the configuration.</returns>
        </member>
        <member name="M:VxSdk.VxSetLogLevel(VxSdk.VxLogLevel.Value)">
            <summary>
Sets the minimum severity level of messages to log.
</summary>
            <param name="logLevel">The logging severity <see cref="T:VxSdk.VxLogLevel.Value">level</see>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the configuration.</returns>
        </member>
        <member name="M:VxSdk.IsSupportedSystem(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Boolean)">
            <summary>
Checks whether the system at the specified IP address is supported by this SDK.
</summary>
            <param name="ipAddress">The IP address of the system we want to check.</param>
            <param name="port">The port of the system we want to check.</param>
            <param name="isSupported">
                <c>true</c> if system is supported, otherwise <c>false</c>.</param>
            <param name="useSsl">
                <c>true</c> to connect to the system using SSL, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.VxSystemLogin(VxSdk.VxLoginInfo!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxSystem**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Logs in to the VideoXpert system.
</summary>
            <param name="loginInfo">The information to connect and log in with.</param>
            <param name="system">
                <c>nullptr</c> if login fails, else the new <see cref="T:VxSdk.IVxSystem" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the login.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolumeGroup.volumes">
            <summary>
The volumes that constitute this volume group.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolumeGroup.volumesSize">
            <summary>
The size of <see cref="F:VxSdk.IVxVolumeGroup.volumes" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolumeGroup.name">
            <summary>
The friendly name of this volume group.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolumeGroup.id">
            <summary>
The unique identifier of the volume group.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolumeGroup.isArchiveGroup">
            <summary>
Indicates whether or not this volume group is an "archive volume group", which will act as storage for the
oldest available data.
</summary>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.SetIsArchiveGroup(System.Boolean)">
            <summary>
Sets the isArchiveGroup property. When <c>true</c> this as an "archive volume group" which will act as
storage for the oldest available data. 
</summary>
            <param name="isArchiveGroup">
                <c>true</c> to set this as an "archive volume group", otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.GetVolumeRelations(VxSdk.VxCollection&lt;VxSdk.IVxResourceRel****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all possible volume relations for this volume group (both linked and non-linked). Each linked volume
shall be included in the volume group while each non-linked volume shall be excluded. Note that a volume
may only be linked to 1 volume group.
<para>Available filters: kAdvancedQuery, kAllTags, kAllPrivateTags, kLinked.</para></summary>
            <param name="resourceRelCollection">A <see cref="T:VxSdk.VxCollection" /> of related resources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.DeleteVolumeGroup">
            <summary>
Removes the volume group. This does not affect the volume within this volume group nor the contents of
those volumes.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxVolumeGroup.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxVolumeGroup">
            <summary>
Represents a group of volumes that can be used together as a storage pool.
</summary>
        </member>
        <member name="M:VxSdk.IVxUser.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.phoneNumbers">
            <summary>
The telephone number(s) for the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.phoneNumberSize">
            <summary>
The size of <see cref="F:VxSdk.IVxUser.phoneNumbers" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.passwordExpiration">
            <summary>
The time at which the user’s password will expire.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.note">
            <summary>
Supplemental information about the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.name">
            <summary>
The unique name, within the domain, of the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.lastName">
            <summary>
The last name of user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.id">
            <summary>
The unique identifier of the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.firstName">
            <summary>
The first name of user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.employeeId">
            <summary>
The employee identifier associated with the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.email">
            <summary>
The email address of the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUser.domain">
            <summary>
The network domain for this user.
</summary>
        </member>
        <member name="M:VxSdk.IVxUser.SetPhoneNumbers(VxSdk.VxPhoneNumber**,System.Int32)">
            <summary>
Sets the telephone number(s) for this user. Maximum of 16 numbers.
</summary>
            <param name="phoneNumbers">The phone numbers.</param>
            <param name="phoneNumberSize">
The size of <see cref="F:VxSdk.IVxUser.phoneNumbers" />, a value of 0 will clear out any existing phone numbers.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Boolean)">
            <summary>
Sets a new password for the user.
</summary>
            <param name="newPassword">
The new password to set for this user. Must contain more than 7 characters.
</param>
            <param name="mustChangePassword">
If <c>true</c>, the password will immediately be expired the first time it is used to login.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetNote(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the note property.
</summary>
            <param name="note">The new note value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetLastName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the last name property.
</summary>
            <param name="lastName">The new last name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetFirstName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the first name property.
</summary>
            <param name="firstName">The new first name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetEmployeeId(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the employee id property.
</summary>
            <param name="employeeId">The new employee id value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetEmail(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the email property.
</summary>
            <param name="email">The new email value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetDomain(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the domain property.
</summary>
            <param name="domain">The new domain value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.SetAccountState(System.Boolean)">
            <summary>
Sets the account state of the user. A disabled account will not be able to access the system.
</summary>
            <param name="isEnabled">
                <c>true</c> to enable the user account, <c>false</c> to disable.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.RemoveFromRole(VxSdk.IVxRole*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a role from this user.
</summary>
            <param name="role">The role to remove the user from.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.GetUserAccount(VxSdk.IVxUserAccount**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxUserAccount" /> configuration for this user.
</summary>
            <param name="userAccount"> The <see cref="T:VxSdk.IVxUserAccount" /> for this user. </param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.GetTags(VxSdk.VxCollection&lt;VxSdk.IVxTag****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all private tags owned by this user and all public tags. Other user’s private tags will not be
returned regardless of permissions.
<para>
Available filters: kAdvancedQuery, kFolder, kId, kModifiedSince, kName, kOwned, kOwner, kParentId,
kResourceId, kResourceType.
</para></summary>
            <param name="tagCollection">A <see cref="T:VxSdk.VxCollection" /> of tags available to the user.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.GetRoles(VxSdk.VxCollection&lt;VxSdk.IVxRole****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the roles associated with this user.
<para>Available filters: kAdvancedQuery, kId, kInternal, kModifiedSince, kName.</para></summary>
            <param name="roleCollection">The roles associated with this user.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.GetDataObjects(VxSdk.VxCollection&lt;VxSdk.IVxDataObject****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data objects associated with this user.
<para>Available filters: kClientType, kModifiedSince, kOwned, kOwner.</para></summary>
            <param name="dataObjectCollection">
A <see cref="T:VxSdk.VxCollection" /> of data objects associated with this user.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.GetAccountState(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the account state of the user.
</summary>
            <param name="isEnabled">
                <c>true</c> if the user account is enabled, <c>false</c> if disabled.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.DeleteUser">
            <summary>
Deletes this user from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this user.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxUser.AddToRole(VxSdk.IVxRole*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a role to this user.
</summary>
            <param name="role">The role to add the user to.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxUser">
            <summary>
Represents information about a system user.
</summary>
        </member>
        <member name="M:VxSdk.IVxUserAccount.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserAccount.isPasswordExpirationDisabled">
            <summary>
Indicates whether or not password expiration is enabled for this user account. If <c>true</c>, password
expiration will be disable for this account; <c>false</c> will use the global password expiration setting
for this account.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserAccount.isEnabled">
            <summary>
Indicates whether or not this user account is enabled. A disabled account will not be able to access the
system unless the account is re-enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserAccount.canBypassLdap">
            <summary>
If <c>true</c>, the user can login to the system using local credentials instead of using the LDAP
authentication.
</summary>
        </member>
        <member name="M:VxSdk.IVxUserAccount.SetIsPasswordExpirationDisabled(System.Boolean)">
            <summary>
Sets the isPasswordExpirationDisabled property.
</summary>
            <param name="isPasswordExpirationDisabled">The new isPasswordExpirationDisabled value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUserAccount.SetIsEnabled(System.Boolean)">
            <summary>
Sets the isEnabled property.
</summary>
            <param name="isEnabled">The new isEnabled value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUserAccount.SetCanBypassLdap(System.Boolean)">
            <summary>
Sets the canBypassLdap property.
</summary>
            <param name="canBypassLdap">The new canBypassLdap value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxUserAccount.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxUserAccount.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxUserAccount.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxUserAccount">
            <summary>
Represents account information for a specific user.
</summary>
        </member>
        <member name="M:VxSdk.IVxSystem.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxSystem.name">
            <summary>
The friendly name of the VideoXpert system.
</summary>
        </member>
        <member name="F:VxSdk.IVxSystem.id">
            <summary>
The unique identifier of the VideoXpert system.
</summary>
        </member>
        <member name="F:VxSdk.IVxSystem.graceLicenseExpirationTime">
            <summary>
The grace license expiration time (if applicable).
</summary>
        </member>
        <member name="M:VxSdk.IVxSystem.ValidateMember(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Validates member administrator credentials.
</summary>
            <param name="isValid">
                <c>true</c> if the administrator credentials are determined to be valid, otherwise <c>false</c>.</param>
            <param name="host">The host address.</param>
            <param name="port">The host port.</param>
            <param name="username">The username for access to the member.</param>
            <param name="password">The password for access to the member.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of validating the credentials.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.StopNotifications">
            <summary>
Stop receiving all event notifications.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.StopInternalNotifications">
            <summary>
Stop receiving all internal event notifications.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.StartNotifications(=FUNC:System.Void(VxSdk.IVxEvent*),VxSdk.VxCollection&lt;VxSdk.IVxSituation****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Boolean)">
            <summary>
Start receiving event notifications by situation type, regardless of user settings.
</summary>
            <param name="callback">The callback to be used when an event is received.</param>
            <param name="situationCollection">The situations to subscribe to.</param>
            <param name="userNotification">
                <c>true</c> to receive user role notifications, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.StartNotifications(=FUNC:System.Void(VxSdk.IVxEvent*))">
            <summary>
Start receiving event notifications using the settings for the current user.
</summary>
            <param name="callback">The callback to be used when an event is received.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.StartInternalNotifications(=FUNC:System.Void(VxSdk.VxInternalEvent*))">
            <summary>
Start receiving internal event notifications sent by the VxSDK.
</summary>
            <param name="callback">The callback to be used when an internal event is received.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.SetBookmarkAutoUnlockTime(System.Int32)">
            <summary>
Sets the bookmark automatic unlock time, which will automatically unlock any locked bookmark that has an
<see cref="F:VxSdk.IVxBookmarkLock.endTime" /> older than this number of days. If 0, no automatic unlock will be
performed.
</summary>
            <param name="autoUnlockTime">The bookmark auto-unlock time (in days).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.InsertEvent(VxSdk.VxNewEvent*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Inserts a new event into the system.
</summary>
            <param name="newEvent">The new event to be injected into the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetUsers(VxSdk.VxCollection&lt;VxSdk.IVxUser****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the users residing on the system.
<para>Available filters: kAdvancedQuery, kFirstName, kLastName, kModifiedSince, kName.</para></summary>
            <param name="userCollection">A <see cref="T:VxSdk.VxCollection" /> of users residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetTwilioConfiguration(VxSdk.IVxConfiguration.Twilio**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the Twilio SMS configuration.
</summary>
            <param name="twilioConfig">The Twilio SMS configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetTimeTables(VxSdk.VxCollection&lt;VxSdk.IVxTimeTable****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the time tables residing on the system.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName.</para></summary>
            <param name="timeTableCollection">
A <see cref="T:VxSdk.VxCollection" /> of time tables residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetTimeConfiguration(VxSdk.IVxConfiguration.Time**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the time configuration.
</summary>
            <param name="timeConfig">The time configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetTags(VxSdk.VxCollection&lt;VxSdk.IVxTag****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the tags residing on the system.
<para>
Available filters: kAdvancedQuery, kFolder, kId, kModifiedSince, kName, kOwned, kOwner, kParentId,
kResourceId, kResourceType.
</para></summary>
            <param name="tagCollection">A <see cref="T:VxSdk.VxCollection" /> of tags residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetSystemTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Gets the current system time (UTC).
</summary>
            <param name="systemTime">The current time from the system (UTC).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetSnmpConfiguration(VxSdk.IVxConfiguration.Snmp**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the SNMP agent configuration.
</summary>
            <param name="snmpConfig">The SNMP agent configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetSmtpConfiguration(VxSdk.IVxConfiguration.Smtp**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the SMTP configuration.
</summary>
            <param name="smtpConfig">The SMTP configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetSituations(VxSdk.VxCollection&lt;VxSdk.IVxSituation****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the situations residing on the system.
<para>
Available filters: kAdvancedQuery, kAudibleNotify, kHasProperty, kLog, kModifiedSince, kName, kNotify,
kServicePropertyId, kSeverity, kSourceDeviceId, kType.
</para></summary>
            <param name="situationCollection">
A <see cref="T:VxSdk.VxCollection" /> of the situations residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetServerConfiguration(VxSdk.IVxConfiguration.Server**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the general server configuration.
</summary>
            <param name="serverConfig">The server configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetSchedules(VxSdk.VxCollection&lt;VxSdk.IVxSchedule****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the schedules residing on the system.
<para>Available filters: kAdvancedQuery, kDataSourceId, kModifiedSince, kName.</para></summary>
            <param name="scheduleCollection">A <see cref="T:VxSdk.VxCollection" /> of schedules residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetRules(VxSdk.VxCollection&lt;VxSdk.IVxRule****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the rules residing on the system.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kNumber.</para></summary>
            <param name="ruleCollection">A <see cref="T:VxSdk.VxCollection" /> of rules residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetRolePermissionSchema(VxSdk.VxPermissionSchema**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the ordered permission schema information for roles.
</summary>
            <param name="permissionSchema">The permission schema.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetRoles(VxSdk.VxCollection&lt;VxSdk.IVxRole****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the roles residing on the system.
<para>Available filters: kAdvancedQuery, kId, kInternal, kModifiedSince, kName.</para></summary>
            <param name="roleCollection">A <see cref="T:VxSdk.VxCollection" /> of roles residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetReportTemplates(VxSdk.VxCollection&lt;VxSdk.IVxReportTemplate****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the report templates residing on the system.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kOwner.</para></summary>
            <param name="reportTemplateCollection">
A <see cref="T:VxSdk.VxCollection" /> of the report templates residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetReports(VxSdk.VxCollection&lt;VxSdk.IVxReport****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the reports residing on the system.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kOwner.</para></summary>
            <param name="reportCollection">
A <see cref="T:VxSdk.VxCollection" /> of the reports residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetReportConfiguration(VxSdk.IVxConfiguration.Report**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the report configuration.
</summary>
            <param name="reportConfig">The report configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetRelayOutputs(VxSdk.VxCollection&lt;VxSdk.IVxRelayOutput****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the relay outputs residing on the system.
<para>Available filters: kAdvancedQuery, kEnabled, kId, kModifiedSince, kName, kState.</para></summary>
            <param name="relayOutputCollection">
A <see cref="T:VxSdk.VxCollection" /> of the relay outputs residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetRecordings(VxSdk.VxCollection&lt;VxSdk.IVxRecording****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the recordings residing on the system.
<para>Available filters: kAdvancedQuery, kDataSourceId, kId, kModifiedSince, kName, kOwner, kRecordType.</para></summary>
            <param name="recordingCollection">
A <see cref="T:VxSdk.VxCollection" /> of the recordings residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetMonitorWalls(VxSdk.VxCollection&lt;VxSdk.IVxMonitorWall****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the monitor walls residing on the system.
<para>Available filters: kAdvancedQuery, kModifiedSince, kName.</para></summary>
            <param name="monitorWallCollection">
A <see cref="T:VxSdk.VxCollection" /> of the monitor wallss residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetMonitors(VxSdk.VxCollection&lt;VxSdk.IVxMonitor****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the monitors residing on the system.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kNumber.</para></summary>
            <param name="monitorCollection">
A <see cref="T:VxSdk.VxCollection" /> of the monitors residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetMembers(VxSdk.VxCollection&lt;VxSdk.IVxMember****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the member systems that this system is aggregating.
<para>Available filters: kAdvancedQuery, kHost, kId, kModifiedSince, kName, kState.</para></summary>
            <param name="memberCollection">
A <see cref="T:VxSdk.VxCollection" /> of the aggregated member systems.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetManualRecordings(VxSdk.VxCollection&lt;VxSdk.IVxManualRecording****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
DEPRECATED: Replaced by <see cref="M:VxSdk.IVxSystem.GetRecordings(VxSdk.VxCollection&lt;VxSdk.IVxRecording****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)" /><para>Gets the manual recordings residing on the system.</para><para>Available filters: kAdvancedQuery, kDataSourceId, kId, kModifiedSince, kOwner.</para></summary>
            <param name="manualRecordingCollection">
A <see cref="T:VxSdk.VxCollection" /> of the manual recordings residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetLicense(VxSdk.IVxLicense**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the license for the system.
</summary>
            <param name="license">The license for the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetLdapConfiguration(VxSdk.IVxConfiguration.Ldap**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the LDAP configuration.
</summary>
            <param name="ldapConfig">The LDAP configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDevice" /> that hosts this system.
</summary>
            <param name="hostDevice">The host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetFiles(VxSdk.VxCollection&lt;VxSdk.IVxFile****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the files residing on the system.
<para>
Available filters: kFilename, kId.
</para></summary>
            <param name="fileCollection">A <see cref="T:VxSdk.VxCollection" /> of the files residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetExports(VxSdk.VxCollection&lt;VxSdk.IVxExport****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the exports residing on the system.
<para>
Available filters: kDataSourceAllTags, kDataSourceAllPrivateTags, kDataSourceName, kDataSourceNumber,
kModifiedSince, kName, kOwner, kPercentComplete, kSize, kStatus, kTrashed.
</para></summary>
            <param name="exportCollection">A <see cref="T:VxSdk.VxCollection" /> of the exports residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetExportEstimate(VxSdk.VxNewExport*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.VxExportEstimate**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the estimate information for a given set of export criteria. This does not perform an actual export operation.
</summary>
            <param name="newExport">The export to request an estimate for.</param>
            <param name="exportEstimate">The export estimate.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetExportConfiguration(VxSdk.IVxConfiguration.Export**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the export configuration.
</summary>
            <param name="exportConfig">The export configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetEvents(VxSdk.VxCollection&lt;VxSdk.IVxEvent****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the events residing on the system.
<para>
Available filters: kAdvancedQuery, kAckState, kAckUser, kGeneratorDeviceId, kId, kModifiedSince, kNotifies,
kSearchEndTime, kSearchStartTime, kSeverity, kSituationType, kSourceDeviceId, kSourceUserName, kTime.
</para></summary>
            <param name="eventCollection">A <see cref="T:VxSdk.VxCollection" /> of the events residing on the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetEventConfiguration(VxSdk.IVxConfiguration.Event**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the event configuration.
</summary>
            <param name="eventConfig">The event configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDrivers(VxSdk.VxCollection&lt;VxSdk.IVxDriver****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all of the available device drivers on this system.
<para>Available filters: kAdvancedQuery, kModifiedSince, kName, kVendor, kVersion.</para></summary>
            <param name="driverCollection">A <see cref="T:VxSdk.VxCollection" /> of available drivers.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDrawings(VxSdk.VxCollection&lt;VxSdk.IVxDrawing****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the drawings from the VideoXpert system.
<para>Available filters: kAdvancedQuery, kImageType, kModifiedSince, kName, kProvider.</para></summary>
            <param name="drawingCollection">
A <see cref="T:VxSdk.VxCollection" /> of the drawings associated with the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDiscoveryStatus(VxSdk.IVxDiscovery**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the current discovery status.
</summary>
            <param name="discovery">The discovery status.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDevices(VxSdk.VxCollection&lt;VxSdk.IVxDevice****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices from the VideoXpert system.
<para>
Available filters: kAdvancedQuery, kCommissioned, kDiscovered, kDriverType, kHasStatus, kId, kIp, kModel,
kModifiedSince, kName, kSerial, kState, kType, kVendor, kVersion.
</para></summary>
            <param name="deviceCollection">
A <see cref="T:VxSdk.VxCollection" /> of the devices associated with the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDeviceAssignments(VxSdk.VxCollection&lt;VxSdk.IVxDeviceAssignment****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the device assignments residing on the system.
<para>Available filters: kDataSourceId, kDataStorageId, kDeviceId, kModifiedSince.</para></summary>
            <param name="deviceAssignmentCollection">A <see cref="T:VxSdk.VxCollection" /> of the device assignments.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDataStorages(VxSdk.VxCollection&lt;VxSdk.IVxDataStorage****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data storages residing on the system.
<para>Available filters: kAdvancedQuery, kCommissioned, kId, kModifiedSince, kName, kType.</para></summary>
            <param name="dataStorageCollection">
A <see cref="T:VxSdk.VxCollection" /> of data storages residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDataSources(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources from the VideoXpert system.
<para>
Available filters: kAdvancedQuery, kAllTags, kCapturing, kCommissioned, kEnabled, kEncoding,
kHasFolderTags, kId, kIp, kManualRecording, kModifiedSince, kName, kNumber, kRecording, kState, kType,
kUnassigned.
</para></summary>
            <param name="dataSourceCollection">
A <see cref="T:VxSdk.VxCollection" /> of the data sources associated with the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetDataObjects(VxSdk.VxCollection&lt;VxSdk.IVxDataObject****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data objects residing on the system.
<para>Available filters: kClientType, kModifiedSince, kOwned, kOwner.</para></summary>
            <param name="dataObjectCollection">
A <see cref="T:VxSdk.VxCollection" /> of data objects residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetCurrentUser(VxSdk.IVxUser**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the user currently accessing the system.
</summary>
            <param name="user">The user currently accessing the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetClusterConfiguration(VxSdk.IVxConfiguration.Cluster**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the cluster configuration.
</summary>
            <param name="clusterConfig">The cluster configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetBookmarks(VxSdk.VxCollection&lt;VxSdk.IVxBookmark****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the bookmarks residing on the system.
<para>
Available filters: kAdvancedQuery, kDataSourceId, kDataSourceType, kDescription, kGroupId, kId, kLocked,
kModifiedSince, kName, kSearchEndTime, kSearchStartTime, kTime.
</para></summary>
            <param name="bookmarkCollection">
A <see cref="T:VxSdk.VxCollection" /> of the bookmarks residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetBookmarkConfiguration(VxSdk.IVxConfiguration.Bookmark**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the bookmark configuration.
</summary>
            <param name="bookmarkConfig">The bookmark configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetBookmarkAutoUnlockTime(System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the current bookmark automatic unlock time value.
</summary>
            <param name="autoUnlockTime">The bookmark auto-unlock time (in days).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetAvailableScheduleTriggerEvents(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the list of available event types that may be used within a schedule trigger.
</summary>
            <param name="situationTypes">The list of situation types.</param>
            <param name="size">The size of <paramref name="situationTypes" /></param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetAvailableReportTemplates(VxSdk.VxCollection&lt;VxSdk.VxNewReportTemplate****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the available report templates representing the default template for each report type. These defaults
act as a schema for each report type, providing all available fields and filters that may be used in the
report template for that report type.
</summary>
            <param name="defaultReportTemplates">The list of default report templates.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetAuthenticationConfiguration(VxSdk.IVxConfiguration.Auth**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the authentication configuration.
</summary>
            <param name="authConfig">The authentication configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetAnalyticSessions(VxSdk.VxCollection&lt;VxSdk.IVxAnalyticSession****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the analytic sessions on this system.
<para>Available filters: kAdvancedQuery, kDataSourceId, kDeviceId, kId, kModifiedSince.</para></summary>
            <param name="analyticSessionCollection">
A <see cref="T:VxSdk.VxCollection" /> of the analytic sessions on this system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetAlarmInputs(VxSdk.VxCollection&lt;VxSdk.IVxAlarmInput****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the alarm inputs residing on the system.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kState.</para></summary>
            <param name="alarmInputCollection">
A <see cref="T:VxSdk.VxCollection" /> of the alarm inputs residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.GetAccessPoints(VxSdk.VxCollection&lt;VxSdk.IVxAccessPoint****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the access points residing on the system.
<para>Available filters: kAdvancedQuery, kHasStatus, kId, kModifiedSince, kName, kState, kType.</para></summary>
            <param name="accessPointCollection">
A <see cref="T:VxSdk.VxCollection" /> of the access points residing on the system.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.CreateReport(VxSdk.VxNewReport*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxReport**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new report on the VideoXpert system.
</summary>
            <param name="newReport">The new report to be generated on the system.</param>
            <param name="reportItem">
                <c>nullptr</c> if it fails, else the new <see cref="T:VxSdk.IVxReport" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.CreateMonitorWall(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Adds a new monitor wall to the system.
</summary>
            <param name="monitorWallName">The name of the new monitor wall to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.CreateMonitor(VxSdk.VxNewMonitor*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new monitor to the system.
</summary>
            <param name="newMonitor">The new monitor to be added to the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.CreateExport(VxSdk.VxNewExport*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxExport**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new export on the VideoXpert system.
</summary>
            <param name="newExport">The new export to be added to the system.</param>
            <param name="exportItem">
                <c>nullptr</c> if it fails, else the new <see cref="T:VxSdk.IVxExport" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddUser(VxSdk.VxNewUser*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new user to the system.
</summary>
            <param name="newUser">The new user to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddTimeTable(VxSdk.VxNewTimeTable*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new time table to the system.
</summary>
            <param name="newTimeTable">The new time table to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddTag(VxSdk.VxNewTag*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new tag to the system.
</summary>
            <param name="newTag">The new tag to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddSituation(VxSdk.VxNewSituation*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new situation to the system.
</summary>
            <param name="newSituation">The new situation to be added to the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddSchedule(VxSdk.VxNewSchedule*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new schedule to the system.
</summary>
            <param name="newSchedule">The new schedule to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddRule(VxSdk.VxNewRule*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new rule to the system.
</summary>
            <param name="newRule">The new rule to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddRole(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Adds a new role to the system.
</summary>
            <param name="roleName">The new role to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddReportTemplate(VxSdk.VxNewReportTemplate*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new report template.
</summary>
            <param name="newReportTemplate">The new report template to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddRecording(VxSdk.VxNewRecording*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxRecording**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new recording to the VideoXpert system.
</summary>
            <param name="newRecording">The new recording to be added to the system.</param>
            <param name="recordingItem">
                <c>nullptr</c> if it fails, else the new <see cref="T:VxSdk.IVxRecording" />.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddMember(VxSdk.VxNewMember*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new member system to be aggregated.
</summary>
            <param name="newMember">The new member system to be aggregated.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddManualRecording(VxSdk.VxNewManualRecording*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxManualRecording**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
DEPRECATED: Replaced by <see cref="M:VxSdk.IVxSystem.AddRecording(VxSdk.VxNewRecording*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxRecording**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)" /><para>Adds a new manual recording to the VideoXpert system.</para></summary>
            <param name="newManualRecording">The new manual recording to be added to the system.</param>
            <param name="manualRecordingItem">
                <c>nullptr</c> if it fails, else the new <see cref="T:VxSdk.IVxManualRecording" />.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddFile(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Adds a new file based on the given file path. 
</summary>
            <param name="filePath">The local path to the file.</param>
            <param name="filename">The filename of the associated file data.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddDrawing(VxSdk.VxNewDrawing*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new drawing.
</summary>
            <param name="newDrawing">The new drawing to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddDevice(VxSdk.VxNewDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a device to the VideoXpert system.
</summary>
            <param name="newDevice">The new device to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddDataObject(VxSdk.VxNewDataObject*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new data object.
</summary>
            <param name="newDataObject">The new data object to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddBookmark(VxSdk.VxNewBookmark*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new bookmark on the VideoXpert system.
</summary>
            <param name="newBookmark">The new bookmark to be added to the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AddAnalyticSession(VxSdk.VxNewAnalyticSession*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new analytic session.
</summary>
            <param name="newAnalyticSession">The new analytic session to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSystem.AcknowledgeAllEvents">
            <summary>
Acknowledge all events.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxSystem">
            <summary>
Represents a VideoXpert system and allows the user to manage the system and devices.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMember.rtspCapability">
            <summary>
The network streaming capabilities that the member shall expose to its clients (via data interfaces).
</summary>
        </member>
        <member name="F:VxSdk.VxNewMember.port">
            <summary>
The host port of the system.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMember.bandwidth">
            <summary>
Bandwidth available between the aggregator system and the member system (in kbps).
</summary>
        </member>
        <member name="F:VxSdk.VxNewMember.username">
            <summary>
Username for access to the member.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMember.password">
            <summary>
Password for access to the member.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMember.host">
            <summary>
The host address of the system.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMember.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMember.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewMember" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMember.#ctor(VxSdk.VxNewMember!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewMember" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewMember.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewMember" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewMember">
            <summary>
Represents a request to add a new member system.
</summary>
        </member>
        <member name="M:VxSdk.IVxSituation.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.sourceDeviceTypes">
            <summary>
A list of device types that may be the source of events for this situation.
<para>NOTE: This field is informational for aiding clients, especially in rule creation.</para></summary>
        </member>
        <member name="F:VxSdk.IVxSituation.snoozeIntervals">
            <summary>
The default snooze intervals, in seconds, for a generated event.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.sourceDeviceTypesSize">
            <summary>
The size of <see cref="F:VxSdk.IVxSituation.sourceDeviceTypes" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.snoozeIntervalSize">
            <summary>
The size of <see cref="F:VxSdk.IVxSituation.snoozeIntervals" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.severity">
            <summary>
The severity of the generated event, from 1 (highest) to 10 (lowest).
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.notificationIdSize">
            <summary>
The size of <see cref="F:VxSdk.IVxSituation.notificationIds" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.audiblePlayCount">
            <summary>
The amount of times to play audible notifications.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.audibleLoopDelay">
            <summary>
The seconds to wait between audible notifications.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.autoAcknowledgeTime">
            <summary>
The number of seconds after which a generated event state will be set to AutoAcked.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.notificationIds">
            <summary>
The unique identifiers of the notifications configured for this situation.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.typeOpposite">
            <summary>
The situation type opposite of this situation, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.type">
            <summary>
The situation type.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.sourceDeviceId">
            <summary>
The unique identifier of the source device.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.serviceType">
            <summary>
Specifies the resource type of the service corresponding to the source of this situation, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.servicePropertyId">
            <summary>
The name of the key in the properties map corresponding to the service identifier for the source of this
situation, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.name">
            <summary>
The friendly name of the situation.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.shouldPopupBanner">
            <summary>
Indicates whether clients should display a popup notification banner when receiving events of this type.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.shouldNotify">
            <summary>
Indicates whether an event generated from the situation shall generate notifications.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.shouldLog">
            <summary>
Indicates whether events generated from this situation shall be persisted or immediately be discarded.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.shouldExpandBanner">
            <summary>
Indicates whether the notification banner on clients should be expanded by default.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.shouldAudiblyNotify">
            <summary>
Indicates whether a notification sound should play on supporting clients when an event is received.
</summary>
        </member>
        <member name="F:VxSdk.IVxSituation.isAckNeeded">
            <summary>
Indicates whether the generated events shall have an initial state of AckNeeded or NoAckNeeded.
</summary>
        </member>
        <member name="M:VxSdk.IVxSituation.UnLink(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a device association from this situation.
</summary>
            <param name="device">The device to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.UnLink(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a data source association from this situation.
</summary>
            <param name="dataSource">The data source to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetSnoozeIntervals(System.Int32*,System.Int32)">
            <summary>
Sets the snooze intervals for a generated event.
</summary>
            <param name="snoozeIntervals">The snooze intervals, in seconds.</param>
            <param name="snoozeIntervalSize">The size of <see cref="F:VxSdk.IVxSituation.snoozeIntervals" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetSeverity(System.Int32)">
            <summary>
Sets the severity property.
</summary>
            <param name="severity">The new severity value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetPopupBanner(System.Boolean)">
            <summary>
Sets whether clients should display a popup notification banner when receiving events of this type.
</summary>
            <param name="shouldPopupBanner">
                <c>true</c> to popup the banner, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetNotify(System.Boolean)">
            <summary>
Sets whether an event generated from the situation will generate notifications.
</summary>
            <param name="shouldNotify">
                <c>true</c> to send notifications, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetLog(System.Boolean)">
            <summary>
Sets whether events generated from this situation shall be persisted or immediately be discarded.
</summary>
            <param name="shouldLog">
                <c>true</c> to log events, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetExpandBanner(System.Boolean)">
            <summary>
Sets whether the notification banner on clients should be expanded by default.
</summary>
            <param name="shouldExpandBanner">
                <c>true</c> to expand banner, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetAutoAcknowledgeTime(System.Int32)">
            <summary>
Sets the auto acknowledge time property.
</summary>
            <param name="autoAcknowledgeTime">The auto acknowledge time value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetAudioFile(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the custom audio file used by clients for audible notifications. The maximum allowable size
of the file is 5 MB.
</summary>
            <param name="audioFilePath">The local path to the audio file.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetAudiblyNotify(System.Boolean)">
            <summary>
Sets whether a notification sound should play on supporting clients when an event is received.
</summary>
            <param name="shouldAudiblyNotify">
                <c>true</c> to audibly notify, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetAudiblePlayCount(System.Int32)">
            <summary>
Sets the audible play count property.
</summary>
            <param name="audiblePlayCount">The audible play count value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetAudibleLoopDelay(System.Int32)">
            <summary>
Sets the audible loop delay property.
</summary>
            <param name="audibleLoopDelay">The audible loop delay value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.SetAckNeeded(System.Boolean)">
            <summary>
Sets whether the generated events shall have an initial state of AckNeeded or NoAckNeeded.
</summary>
            <param name="isAckNeeded">
                <c>true</c> to set initial state to AckNeeded, <c>false</c> for NoAckNeeded.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.Link(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a device with this situation.
</summary>
            <param name="device">The device to associate the situation with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.Link(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a data source with this situation.
</summary>
            <param name="dataSource">The data source to associate the situation with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.GetNotifications(VxSdk.VxCollection&lt;VxSdk.IVxNotification****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the notifications associated with this situation.
<para>Available filters: kModifiedSince.</para></summary>
            <param name="notificationCollection">
A <see cref="T:VxSdk.VxCollection" /> of notifications associated with this situation.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDevice****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices associated with this situation.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="deviceCollection">The devices associated with this situation.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources associated with this situation.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="dataSourceCollection">The data sources associated with this situation.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.GetAudioFile(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the custom audio file, if any.
</summary>
            <param name="endpoint">The audio file endpoint.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.DeleteSituation">
            <summary>
Deletes this situation from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the situation.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.DeleteAudioFile">
            <summary>
Deletes the custom audio file.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the custom audio file.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxSituation.AddNotification(VxSdk.VxNewNotification*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxNotification**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new notification.
</summary>
            <param name="newNotification">The new notification to be added.</param>
            <param name="notificationItem">
                <c>nullptr</c> if it fails, else the new <see cref="T:VxSdk.IVxNotification" />.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxSituation">
            <summary>
Represents a particular situation configuration that specifies how corresponding events shall be generated and
handled when the situation is detected.
</summary>
        </member>
        <member name="M:VxSdk.IVxSchedule.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxSchedule.action">
            <summary>
The action performed when the schedule is active.
</summary>
        </member>
        <member name="F:VxSdk.IVxSchedule.name">
            <summary>
The friendly name of the schedule.
</summary>
        </member>
        <member name="F:VxSdk.IVxSchedule.id">
            <summary>
The unique identifier of the schedule.
</summary>
        </member>
        <member name="F:VxSdk.IVxSchedule.useAllDataSources">
            <summary>
Indicates whether the schedule applies to all data sources.
</summary>
        </member>
        <member name="M:VxSdk.IVxSchedule.UnLink(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a data source association from this schedule.
</summary>
            <param name="dataSource">The data source to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.SetUseAllDataSources(System.Boolean)">
            <summary>
Sets whether the schedule applies to all data sources.
</summary>
            <param name="useAllDataSources">
                <c>true</c> to use all data sources, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.SetAction(VxSdk.VxScheduleAction.Value)">
            <summary>
Sets the action property.
</summary>
            <param name="action">The new action value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.Link(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a data source with this schedule.
</summary>
            <param name="dataSource">The data source to associate the schedule with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.GetScheduleTriggers(VxSdk.VxCollection&lt;VxSdk.IVxScheduleTrigger****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the schedule triggers associated with this schedule.
</summary>
            <param name="triggerCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated schedule triggers.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources associated with this schedule.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="dataSourceCollection">The data sources associated with this schedule.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.DeleteSchedule">
            <summary>
Deletes this schedule from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the situation.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxSchedule.AddScheduleTrigger(VxSdk.VxNewScheduleTrigger*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a schedule trigger to this schedule.
</summary>
            <param name="newTrigger">The new schedule trigger to add.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxSchedule">
            <summary>
Represents a recording schedule. A schedule is a group of 0 or more resources associated with a set of time
and/or event based schedule triggers that, when any are active, cause the scheduled action to be performed.
</summary>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.action">
            <summary>
The action performed when the schedule trigger actives.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.framerate">
            <summary>
The framerate level to record at.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.eventProperties">
            <summary>
If set, the event only activates when it occurs with these <see cref="F:VxSdk.IVxEvent.properties" />. Ignored if
no event is set.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.timeout">
            <summary>
Amount of time, from 1 to 300 seconds, to consider the schedule trigger active immediately after it becomes
active (duration).
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.preTrigger">
            <summary>
Amount of time, from 0 to 30 seconds, to consider the schedule trigger active prior to when it becomes
active (pre-alarm).
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.postTrigger">
            <summary>
Amount of time, from 0 to 300 seconds, to continue to consider the schedule trigger active when it becomes
inactive (post-alarm).
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.eventPropertySize">
            <summary>
The size of <see cref="F:VxSdk.IVxScheduleTrigger.eventProperties" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.timeTableId">
            <summary>
The unique identifier of the associated time table, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.inactiveEventSituationType">
            <summary>
The <see cref="F:VxSdk.IVxEvent.situationType">type</see> of event that will cause this trigger to no longer be
considered active, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.id">
            <summary>
The unique identifier of the schedule trigger.
</summary>
        </member>
        <member name="F:VxSdk.IVxScheduleTrigger.eventSituationType">
            <summary>
The <see cref="F:VxSdk.IVxEvent.situationType">type</see> of event that will activate this trigger, if any.
</summary>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetTimeTableId(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the time table unique identifier for this schedule trigger. If set, the schedule trigger will only
be active during the time range(s) defined by this time table.
</summary>
            <param name="timeTableId">The time table unique identifier.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetTimeout(System.Int32)">
            <summary>
Sets the amount of time to consider the schedule trigger active immediately after it becomes
active ("duration recording").
</summary>
            <param name="timeout">The timeout time in seconds, from 0 to 300.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetPreTrigger(System.Int32)">
            <summary>
Sets the amount of time to consider the schedule trigger active prior to when it becomes active
("pre alarm").
</summary>
            <param name="preTrigger">The pre trigger time in seconds, from 0 to 30.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetPostTrigger(System.Int32)">
            <summary>
Sets the amount of time to continue to consider the schedule trigger active when it becomes
inactive ("post alarm").
</summary>
            <param name="postTrigger">The post trigger time in seconds, from 0 to 300.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetInactiveEventSituationType(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the <see cref="F:VxSdk.IVxEvent.situationType">type</see> of events that will cause this trigger to no longer
be considered active. If not set, the trigger status will immediately be considered inactive after the
triggering event occurs.
<para>NOTE: This property is ignored if <see cref="F:VxSdk.IVxScheduleTrigger.eventSituationType" /> is not set.</para></summary>
            <param name="inactiveEventSituationType">The event situation type, or <c>nullptr</c> to clear existing value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetFramerate(VxSdk.VxRecordingFramerate.Value)">
            <summary>
Sets the framerate level to record at.
</summary>
            <param name="framerate">The framerate level.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetEventSituationType(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the <see cref="F:VxSdk.IVxEvent.situationType">type</see> of events that will activate the schedule trigger.
If set, the trigger is considered an "event" trigger and only activates when this type of event occurs,
otherwise it is considered a "timed" trigger.
</summary>
            <param name="eventSituationType">The event situation type, or <c>nullptr</c> to clear existing value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetEventProperties(VxSdk.VxKvObject*,System.Int32)">
            <summary>
Sets the event properties that must be present to activate the schedule trigger.
</summary>
            <param name="eventProperties">The event properties.</param>
            <param name="eventPropertySize">The size of <see cref="F:VxSdk.IVxScheduleTrigger.eventProperties" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.SetAction(VxSdk.VxScheduleAction.Value)">
            <summary>
Sets the action to perform when this trigger activates.
</summary>
            <param name="action">The new action value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.DeleteScheduleTrigger">
            <summary>
Deletes this schedule trigger from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the schedule trigger.</returns>
        </member>
        <member name="M:VxSdk.IVxScheduleTrigger.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxScheduleTrigger">
            <summary>
Represents a schedule trigger. A schedule trigger is a time range and an optional event that together act as a
trigger to activate a schedule. The schedule trigger is considered active when all of its time and event
attributes indicate it should be active. An active schedule trigger will perform its configured action.
</summary>
        </member>
        <member name="M:VxSdk.IVxRule.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.triggers">
            <summary>
The triggers that, when any activate, cause the rule to run its script. If empty or null, this rule must be
manually triggered.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.responses">
            <summary>
The list of responses that will be executed when this rule is triggered. The order of this list is the
order in which the responses will execute.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.triggerSize">
            <summary>
The size of <see cref="F:VxSdk.IVxRule.triggers" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.timeTableIdSize">
            <summary>
The size of <see cref="F:VxSdk.IVxRule.timeTableIds" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.responseSize">
            <summary>
The size of <see cref="F:VxSdk.IVxRule.responses" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.timeTableIds">
            <summary>
The unique identifiers of the time tables used by this rule. This rule will only automatically run its
script if a trigger occurs during the times contained by the time tables specified here. If empty, no
active time ranges are available for this rule (it must be manually triggered). If null, no time filters
will be applied (the new rule is always active).
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.name">
            <summary>
The friendly name of the rule.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.id">
            <summary>
The unique identifier of the rule.
</summary>
        </member>
        <member name="F:VxSdk.IVxRule.isEnabled">
            <summary>
Indicates whether or not this rule is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxRule.SetTriggers(VxSdk.VxRuleTrigger**,System.Int32)">
            <summary>
Sets the triggers property.
</summary>
            <param name="triggers">The new triggers value.</param>
            <param name="triggerSize">The size of <see cref="F:VxSdk.IVxRule.triggers" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.SetTimeTables(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32)">
            <summary>
Sets the timeTableIds property.
</summary>
            <param name="timeTableIds">The new timeTableIds value.</param>
            <param name="timeTableIdSize">The size of <see cref="F:VxSdk.IVxRule.timeTableIds" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.SetScript(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
DEPRECATED
<para>Sets the script to run when this rule is triggered.</para></summary>
            <param name="script">The new script value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the script.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.SetResponses(VxSdk.VxRuleResponse**,System.Int32)">
            <summary>
Sets the responses property.
</summary>
            <param name="responses">The new responses value.</param>
            <param name="responseSize">The size of <see cref="F:VxSdk.IVxRule.responses" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.HaltScript">
            <summary>
Halt the script that this rule is running, if any. This has no effect if the script is not currently
running.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling thisdata source.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.GetTimeTables(VxSdk.VxCollection&lt;VxSdk.IVxTimeTable****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the time tables used by this rule.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName.</para></summary>
            <param name="timeTableCollection">A <see cref="T:VxSdk.VxCollection" /> of time tables used by this rule.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.GetScript(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
DEPRECATED
<para>Gets the script to run when this rule is triggered.</para></summary>
            <param name="script">The script data.</param>
            <param name="size">The size of <paramref name="script" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.Enable">
            <summary>
Enable this rule.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling this rule.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.Disable">
            <summary>
Disable this rule.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this rule.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.DeleteRule">
            <summary>
Delete this rule from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the rule.</returns>
        </member>
        <member name="M:VxSdk.IVxRule.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxRule">
            <summary>
Represents a set of rule triggers that, when any occur during times when the rule is active, cause a script to
run. A rule can be read as follows: "If enabled, when any specified triggers occur during specified times, run
the associated script."
</summary>
        </member>
        <member name="M:VxSdk.IVxTimeTable.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxTimeTable.weeklyTimeRanges">
            <summary>
The active time ranges for this time table.
</summary>
        </member>
        <member name="F:VxSdk.IVxTimeTable.weeklyTimeRangeSize">
            <summary>
The size of <see cref="F:VxSdk.IVxTimeTable.weeklyTimeRanges" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxTimeTable.startDate">
            <summary>
The time table will will be considered active after this date.
</summary>
        </member>
        <member name="F:VxSdk.IVxTimeTable.name">
            <summary>
The friendly name of the time table.
</summary>
        </member>
        <member name="F:VxSdk.IVxTimeTable.id">
            <summary>
The unique identifier of the time table.
</summary>
        </member>
        <member name="F:VxSdk.IVxTimeTable.endDate">
            <summary>
The time table will will be considered inactive after this date.
</summary>
        </member>
        <member name="M:VxSdk.IVxTimeTable.SetWeeklyTimeRanges(VxSdk.VxTimeRange**,System.Int32)">
            <summary>
Sets active time ranges for this time table.
</summary>
            <param name="weeklyTimeRanges">The time ranges to set for this time table.</param>
            <param name="weeklyTimeRangeSize">
The size of <see cref="F:VxSdk.IVxTimeTable.weeklyTimeRanges" />, a value of 0 will clear out any existing time ranges.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.SetStartDate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the start date property.
</summary>
            <param name="startDate">The new start date value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.SetEndDate(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the end date property.
</summary>
            <param name="endDate">The new end date value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.DeleteTimeTable">
            <summary>
Deletes this time table from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this time table.</returns>
        </member>
        <member name="M:VxSdk.IVxTimeTable.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxTimeTable">
            <summary>
Represents a named set of time ranges.
</summary>
        </member>
        <member name="M:VxSdk.IVxRole.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxRole.name">
            <summary>
The friendly name of the role.
</summary>
        </member>
        <member name="F:VxSdk.IVxRole.id">
            <summary>
The unique identifier of the role.
</summary>
        </member>
        <member name="F:VxSdk.IVxRole.isReadOnly">
            <summary>
Indicates whether this role is read-only.
</summary>
        </member>
        <member name="M:VxSdk.IVxRole.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.GetUsers(VxSdk.VxCollection&lt;VxSdk.IVxUser****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the users which are currently assigned this role.
<para>Available filters: kAdvancedQuery, kFirstName, kLastName, kModifiedSince, kName.</para></summary>
            <param name="userCollection">
A <see cref="T:VxSdk.VxCollection" /> of users which are currently assigned this role.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.GetPrivileges(VxSdk.VxCollection&lt;VxSdk.IVxPrivilege****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the privileges assigned to this role.
</summary>
            <param name="privilegeCollection">The privileges assigned to this role.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.DeleteRole">
            <summary>
Deletes this role from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this role.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxRole.AddPrivilege(VxSdk.VxNewPrivilege*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new privilege to this role.
</summary>
            <param name="newPrivilege">The privilege to add.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxRole">
            <summary>
Represents a collection of permissions which can be assigned to a user.
</summary>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxPrivilege.resourceType">
            <summary>
The resource type supported by this privilege, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxPrivilege.permissionId">
            <summary>
The permission being granted by this privilege.
</summary>
        </member>
        <member name="F:VxSdk.IVxPrivilege.id">
            <summary>
The unique identifier of the privilege.
</summary>
        </member>
        <member name="F:VxSdk.IVxPrivilege.excludeRestricted">
            <summary>
Indicates whether the privilege is excluded from the associated resources.
</summary>
        </member>
        <member name="M:VxSdk.IVxPrivilege.UnLink(VxSdk.IVxUser*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a user association from this privilege.
</summary>
            <param name="user">The user to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.UnLink(VxSdk.IVxRelayOutput*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a relay output association from this privilege.
</summary>
            <param name="relayOutput">The relay output to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.UnLink(VxSdk.IVxDrawing*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a drawing association from this privilege.
</summary>
            <param name="drawing">The drawing to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.UnLink(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a device association from this privilege.
</summary>
            <param name="device">The device to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.UnLink(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a data source association from this privilege.
</summary>
            <param name="dataSource">The data source to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.SetRestricted(System.Boolean)">
            <summary>
Sets the restriction level for this privilege to the associated resources.
</summary>
            <param name="isRestricted">
                <c>true</c> if restricted, <c>false</c> if not.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.SetPriority(System.Int32)">
            <summary>
Sets the relative priority for the privilege, from 1 to 250. Smaller numbers have higher priority than
larger numbers (e.g. 1 is the highest priority).
</summary>
            <param name="priority">The priority level for the privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.SetExcludeRestricted(System.Boolean)">
            <summary>
Sets whether the privilege is excluded from the associated resources.
</summary>
            <param name="excludeRestricted">
                <c>true</c> to exclude this privilege from associated resources, otherwise <c>false</c>.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Link(VxSdk.IVxUser*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a user with this privilege. If the user is deleted, the association with
this privilege shall also be removed.
</summary>
            <param name="user">The user to associate the privilege with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Link(VxSdk.IVxRelayOutput*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a relay output with this privilege. If the relay output is deleted, the association with this
privilege shall also be removed.
</summary>
            <param name="relayOutput">The relay output to associate the privilege with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Link(VxSdk.IVxDrawing*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a drawing with this privilege. If the drawing is deleted, the association with this privilege
shall also be removed.
</summary>
            <param name="drawing">The drawing to associate the privilege with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Link(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a device with this privilege. If the device is deleted, the association with this privilege
shall also be removed.
</summary>
            <param name="device">The device to associate the privilege with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Link(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a data source with this privilege. If the data source is deleted, the association with this
privilege shall also be removed.
</summary>
            <param name="dataSource">The data source to associate the privilege with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetUnLinked(VxSdk.VxCollection&lt;VxSdk.IVxUser****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the users not associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="userCollection">The users not associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetUnLinked(VxSdk.VxCollection&lt;VxSdk.IVxRelayOutput****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the relay outputs not associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="relayOutputCollection">The relay outputs not associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetUnLinked(VxSdk.VxCollection&lt;VxSdk.IVxDrawing****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the drawings not associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="drawingCollection">The drawings not associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetUnLinked(VxSdk.VxCollection&lt;VxSdk.IVxDevice****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices not associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="deviceCollection">The devices not associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetUnLinked(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources not associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="dataSourceCollection">The data sources not associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetRestricted(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the restriction level for this privilege.
</summary>
            <param name="isRestricted">
                <c>true</c> if restricted, <c>false</c> if not.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetPriority(System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the relative priority for the privilege.
</summary>
            <param name="priority">The priority level for the privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxUser****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the users associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="userCollection">The users associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxRelayOutput****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the relay outputs associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="relayOutputCollection">The relay outputs associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDrawing****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the drawings associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="drawingCollection">The drawings associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDevice****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="deviceCollection">The devices associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources associated with this privilege.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="dataSourceCollection">The data sources associated with this privilege.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.DeletePrivilege">
            <summary>
Removes this privilege from the associated role.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this privilege.</returns>
        </member>
        <member name="M:VxSdk.IVxPrivilege.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxPrivilege">
            <summary>
Represents a specific permission that is given to a role.
</summary>
        </member>
        <member name="M:VxSdk.IVxResourceLock.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxResourceLock.owner">
            <summary>
The name of the user that owns the lock. Only this user is authorized to modify the resource
that owns this lock.
</summary>
        </member>
        <member name="F:VxSdk.IVxResourceLock.id">
            <summary>
The unique identifier of the lock.
</summary>
        </member>
        <member name="M:VxSdk.IVxResourceLock.DeleteResourceLock">
            <summary>
Deletes this lock from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the ResourceLock.</returns>
        </member>
        <member name="M:VxSdk.IVxResourceLock.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxResourceLock">
            <summary>
Represents a lock upon a resource. A resource that has been locked shall permit only the owner of the lock
access to modify the resource.
</summary>
        </member>
        <member name="M:VxSdk.IVxReport.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.type">
            <summary>
The type of this report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.statusReason">
            <summary>
The optional reason for the current generation status of this report; typically used to express the reason
for a failure.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.status">
            <summary>
The current generation status of this report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.time">
            <summary>
The time at which the report was generated.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.owner">
            <summary>
If present, indicates that this resource is owned by a user (it is private) and this is their username. If
not present, indicates that this resource is not owned (it is public).
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.name">
            <summary>
The friendly name of the report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.id">
            <summary>
The unique identifier of the report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReport.format">
            <summary>
The format of the contents of the report.
</summary>
        </member>
        <member name="M:VxSdk.IVxReport.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxReport.GetReportTemplate(VxSdk.IVxReportTemplate**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxReportTemplate" /> that this report was generated from.
</summary>
            <param name="reportTemplate">The <see cref="T:VxSdk.IVxReportTemplate" /> that this report was generated from.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxReport.GetReportEndpoint(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the URI to the download location of the actual report data. This endpoint will only be present if the
report has been successfully generated and is available for download.
</summary>
            <param name="endpoint">The report endpoint, if available.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxReport.DeleteReport">
            <summary>
Delete this report from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the report.</returns>
        </member>
        <member name="M:VxSdk.IVxReport.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxReport">
            <summary>
Represents a generated (or generating) system report.
</summary>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.interval">
            <summary>
The time interval that is used to track data in the report (days, hours, etc).
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.type">
            <summary>
The type of the report that this template represents.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.filters">
            <summary>
The report filter to use to filter the contents of the report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.fields">
            <summary>
The ordered list of report field available to include in the report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.storageLocation">
            <summary>
The network storage location to export the report data to. Ignored if <see cref="F:VxSdk.IVxReportTemplate.recurrence" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.language">
            <summary>
The language to use when creating the report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.recurrence">
            <summary>
The days of the week to automatically generate a report from this template. Ignored if
<see cref="F:VxSdk.IVxReportTemplate.recurrenceTime" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.recurrenceSize">
            <summary>
The size of <see cref="F:VxSdk.IVxReportTemplate.recurrence" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.filtersSize">
            <summary>
The size of <see cref="F:VxSdk.IVxReportTemplate.filters" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.fieldsSize">
            <summary>
The size of <see cref="F:VxSdk.IVxReportTemplate.fields" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.duration">
            <summary>
The duration of time, in hours, extending back from <see cref="F:VxSdk.IVxReportTemplate.endTime" /> to limit collected report data
to. If 0, there is no limit.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.recurrenceTime">
            <summary>
The time at which to perform automatic report generation on given recur days, from 00:00:00 to 23:59:59.
Ignored if <see cref="F:VxSdk.IVxReportTemplate.recurrence" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.owner">
            <summary>
If present, indicates that this resource is owned by a user (it is private) and this is their username. If
not present, indicates that this resource is not owned (it is public).
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.name">
            <summary>
The friendly name of the report template.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.id">
            <summary>
The unique identifier of the report template.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.format">
            <summary>
The desired format for the contents of the report.
</summary>
        </member>
        <member name="F:VxSdk.IVxReportTemplate.endTime">
            <summary>
The end time at which the collected report data is limited to. If not specified, report data will be
collected up to the current time at which the report is generated.
</summary>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetStorageLocation(VxSdk.VxNetworkStorageInfo*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the storageLocation property.
</summary>
            <param name="storageLocation">The new storage location.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetRecurrenceTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the recurrenceTime property.
</summary>
            <param name="recurrenceTime">The new recurrence time value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetRecurrence(VxSdk.VxDayOfWeek.Value*,System.Int32)">
            <summary>
Sets the recurrence property.
</summary>
            <param name="recurrence">The new recurrence value.</param>
            <param name="recurrenceSize">The size of <see cref="F:VxSdk.IVxReportTemplate.recurrence" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetLanguage(VxSdk.VxLanguage.Value)">
            <summary>
Sets the language property.
</summary>
            <param name="language">The new language value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetInterval(VxSdk.VxTimeInterval.Value)">
            <summary>
Sets the interval property.
</summary>
            <param name="interval">The new interval value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetFormat(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the format property.
</summary>
            <param name="format">The new format value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetFilters(VxSdk.VxReportFilter**,System.Int32)">
            <summary>
Sets the filters property.
</summary>
            <param name="filters">The new filters value.</param>
            <param name="filtersSize">The size of <see cref="F:VxSdk.IVxReportTemplate.fields" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetFields(VxSdk.VxReportField**,System.Int32)">
            <summary>
Sets the fields property.
</summary>
            <param name="fields">The new fields value.</param>
            <param name="fieldsSize">The size of <see cref="F:VxSdk.IVxReportTemplate.fields" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetEndTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the endTime property.
</summary>
            <param name="endTime">The new end time value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.SetDuration(System.Int32)">
            <summary>
Sets the duration property.
</summary>
            <param name="duration">The new duration value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.DeleteReportTemplate">
            <summary>
Delete this report template from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the report template.</returns>
        </member>
        <member name="M:VxSdk.IVxReportTemplate.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxReportTemplate">
            <summary>
Represents a template for an available report type that may be created.
</summary>
        </member>
        <member name="M:VxSdk.IVxRecording.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.endEventSourceType">
            <summary>
If specified, the resource type of <see cref="F:VxSdk.IVxRecording.endEventSourceId" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.recordType">
            <summary>
The type of this recording which will show up in the corresponding clips.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.framerate">
            <summary>
The framerate to record at.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.preRecord">
            <summary>
Amount of time, in seconds, to record prior to the recording start time.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.postRecord">
            <summary>
Amount of time, in seconds, to record after the recording would otherwise be stopped.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.maxRecordingTime">
            <summary>
Maximum amount of time, in seconds, to record before stopping.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.startTime">
            <summary>
Time at which the recording should begin (may be in the recent past). The recording
preRecord and maxRecordingTime will reference to this time. Defaults to the time
at which the server processes the request.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.owner">
            <summary>
The name of the user that created this recording.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.name">
            <summary>
Friendly name of the recording which can be used to identify recordings to stop.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.id">
            <summary>
The unique identifier of the recording.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.endEventSourceId">
            <summary>
If specified, only events from the specified source will end the recording.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.endEvent">
            <summary>
If specified, the recording will automatically end when a matching event occurs.
</summary>
        </member>
        <member name="F:VxSdk.IVxRecording.dataSourceId">
            <summary>
The unique identifier of the data source to record.
</summary>
        </member>
        <member name="M:VxSdk.IVxRecording.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxRecording.GetDataSource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data source that will be recorded.
</summary>
            <param name="dataSource">The data source that will be recorded.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRecording.DeleteRecording">
            <summary>
Delete this  recording from the VideoXpert system. If all recordings are deleted for a data
source,  recording will be stopped for that data source.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the recording.</returns>
        </member>
        <member name="M:VxSdk.IVxRecording.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxRecording">
            <summary>
Represents an instance of an active recording (the action, not the recorded clip). Each recording will
cause its specified data source to be recorded by all data storages that the data source is assigned to.
</summary>
        </member>
        <member name="M:VxSdk.IVxPixelSearch.GetSearchStatus(VxSdk.VxSearchStatus.Value*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the current status of the pixel search.
</summary>
            <param name="status">The current status of the pixel search.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPixelSearch.GetClips(VxSdk.VxCollection&lt;VxSdk.IVxClip****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the clips that were found as a result of the pixel search. New clips may continue to be available
while the search is in progress.
<para>
Available filters: kDataSourceId, kEndTime, kEvent, kFramerate, kSearchEndTime, kSearchStartTime,
kStartTime.
</para></summary>
            <param name="clipCollection">A <see cref="T:VxSdk.VxCollection" /> of the clips found by the pixel search.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPixelSearch.DeletePixelSearch">
            <summary>
Deletes this set of pixel search results.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the pixel search.</returns>
        </member>
        <member name="M:VxSdk.IVxPixelSearch.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxPixelSearch">
            <summary>
Represents the results of a pixel search.
</summary>
        </member>
        <member name="M:VxSdk.IVxNotification.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxNotification.userIdSize">
            <summary>
The size of <see cref="F:VxSdk.IVxNotification.userIds" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxNotification.roleIdSize">
            <summary>
The size of <see cref="F:VxSdk.IVxNotification.roleIds" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxNotification.userIds">
            <summary>
The ids for each user that should receive this notification.
</summary>
        </member>
        <member name="F:VxSdk.IVxNotification.roleIds">
            <summary>
The ids for each role that should receive this notification.
</summary>
        </member>
        <member name="F:VxSdk.IVxNotification.id">
            <summary>
The unique identifier of the notification.
</summary>
        </member>
        <member name="M:VxSdk.IVxNotification.RemoveUser(VxSdk.IVxUser*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a user from the list of users that this notification serves.
</summary>
            <param name="user">The role to user.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of removing the user.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.RemoveRole(VxSdk.IVxRole*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a role from the list of roles that this notification serves.
</summary>
            <param name="role">The role to remove.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of removing the role.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.GetUsers(VxSdk.VxCollection&lt;VxSdk.IVxUser****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the users that will receive this notification.
<para>Available filters: kAdvancedQuery, kId, kInternal, kModifiedSince, kName.</para></summary>
            <param name="userCollection">The users that will receive this notification.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.GetRoles(VxSdk.VxCollection&lt;VxSdk.IVxRole****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the roles that will receive this notification.
<para>Available filters: kAdvancedQuery, kId, kInternal, kModifiedSince, kName.</para></summary>
            <param name="roleCollection">The roles that will receive this notification.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.DeleteNotification">
            <summary>
Delete this Notification from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the Notification.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.AddUser(VxSdk.IVxUser*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a user to the list of users that this notification serves.
</summary>
            <param name="user">The user to add.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of adding the user.</returns>
        </member>
        <member name="M:VxSdk.IVxNotification.AddRole(VxSdk.IVxRole*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a role to the list of roles that this notification serves.
</summary>
            <param name="role">The role to add.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of adding the role.</returns>
        </member>
        <member name="T:VxSdk.IVxNotification">
            <summary>
Represents a particular notification configuration for a situation.
</summary>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorWall.monitorPositions">
            <summary>
The monitor positions for this monitor wall.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorWall.monitorPositionsSize">
            <summary>
The size of <see cref="F:VxSdk.IVxMonitorWall.monitorPositions" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorWall.name">
            <summary>
The friendly name of this monitor.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorWall.id">
            <summary>
The unique identifier of the monitor.
</summary>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.SetMonitorSelection(System.Int32,System.Int32,VxSdk.VxCellInputMode.Value)">
            <summary>
Updates the monitor/cell selection (for this user) on the monitor wall.
<para>
Note that each user can independently select a different monitor/cell for remote-control of a monitor wall.
</para></summary>
            <param name="cellIndex">Index of the monitor cell to select within the monitor (1-based). If 0, the current monitor cell selection (if any) will be cleared.</param>
            <param name="monitorIndex">Index of the monitor to select within a monitor wall (1-based). If 0, the current monitor selection (if any) will be cleared.</param>
            <param name="inputMode">Input mode for the selected monitor cell. If <see cref="F:kUnknown" />, the current input mode will be used.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.SetMonitorPositions(VxSdk.VxMonitorPosition*,System.Int32)">
            <summary>
Sets the monitor positions for this monitor wall.
</summary>
            <param name="monitorPositions">The monitor positions.</param>
            <param name="monitorPositionsSize">The size of <see cref="F:VxSdk.IVxMonitorWall.monitorPositions" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.GetMonitorSelections(VxSdk.VxCollection&lt;VxSdk.VxMonitorSelection****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the monitor selections associated with this monitor wall.
<para>Available filters: None.</para></summary>
            <param name="monitorSelectionCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated monitor selections.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.GetMonitors(VxSdk.VxCollection&lt;VxSdk.IVxMonitor****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the monitors associated with this monitor wall.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kNumber.</para></summary>
            <param name="monitorCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated monitors.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.DeleteMonitorWall">
            <summary>
Deletes this monitor wall from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the monitor wall.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorWall.ClearMonitorSelection">
            <summary>
Clears the current monitor selection from this monitor wall.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxMonitorWall">
            <summary>
Represents a group of monitors.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorSelection.inputMode">
            <summary>
The input mode of the selected cell.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorSelection.monitor">
            <summary>
The index of the selected monitor.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorSelection.cell">
            <summary>
The index of the selected cell within the selected monitor.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorSelection.owner">
            <summary>
The name of the user that owns this monitor selection.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorSelection.lastModified">
            <summary>
The time of the last modification for this monitor selection.
</summary>
        </member>
        <member name="M:VxSdk.VxMonitorSelection.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxMonitorSelection.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxMonitorSelection" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxMonitorSelection.#ctor(VxSdk.VxMonitorSelection!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxMonitorSelection" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxMonitorSelection.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxMonitorSelection" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxMonitorSelection">
            <summary>
Represents information for a selected monitor/cell within a monitor wall.
</summary>
        </member>
        <member name="M:VxSdk.IVxMember.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.rtspCapability">
            <summary>
The network streaming capabilities that this member shall expose to its clients (via data interfaces).
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.state">
            <summary>
The current operational state.
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.hostPort">
            <summary>
The host port.
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.bandwidth">
            <summary>
Bandwidth available between the aggregator system and the member system (in kbps).
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.username">
            <summary>
The administrator account username used to communicate with this member.
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.name">
            <summary>
The friendly name for the member system. This value comes from the <c>IVxSystem</c> name field,
containing the system’s friendly name. This is not an alias for the system.
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.id">
            <summary>
The unique system identifier of the member system.
</summary>
        </member>
        <member name="F:VxSdk.IVxMember.host">
            <summary>
The host address.
</summary>
        </member>
        <member name="M:VxSdk.IVxMember.TriggerRefresh">
            <summary>
Triggers a refresh of this member system; ensures that the aggregating system is in sync with the
member system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing the member system.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.SetUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the administrator account username used to communicate with this member.
</summary>
            <param name="username">The account username.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the username.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.SetRtspCapability(VxSdk.VxRtspCapability.Value)">
            <summary>
Sets the rtspCapability property.
</summary>
            <param name="rtspCapability">The new rtspCapability value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.SetHostPort(System.Int32)">
            <summary>
Sets the hostPort property.
</summary>
            <param name="hostPort">The new hostPort value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.SetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the administrator account password used to communicate with this member.
</summary>
            <param name="password">The account password.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the password.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.SetHost(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the host property.
</summary>
            <param name="host">The new host value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.SetBandwidth(System.Int32)">
            <summary>
Sets the bandwidth property.
</summary>
            <param name="bandwidth">The new bandwidth value in kbps.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.RemoveMember">
            <summary>
Removes the member system; it will no longer be aggregated.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of removing the member system.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMember.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxMember">
            <summary>
Represents a member system.
</summary>
        </member>
        <member name="M:VxSdk.IVxMarker.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.resource">
            <summary>
The resource type associated with this marker.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.y">
            <summary>
The Y coordinate.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.x">
            <summary>
The X coordinate.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.direction">
            <summary>
The the angular coordinate indicating the direction that the marker is facing.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.name">
            <summary>
The friendly name of the marker.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.layerName">
            <summary>
Friendly name of the layer that this Marker is on. Clients
MAY group Marker with matching layer names.
</summary>
        </member>
        <member name="F:VxSdk.IVxMarker.id">
            <summary>
The unique identifier of the marker.
</summary>
        </member>
        <member name="M:VxSdk.IVxMarker.SetCoordinates(System.Single,System.Single)">
            <summary>
Sets the location of the marker on the associated drawing.
</summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the coordinates.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.SetLayerName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the LayerName property.
</summary>
            <param name="layerName">The new layer name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.SetDirection(System.Single)">
            <summary>
Sets the angular coordinate indicating the direction that the marker is facing on a polar grid
(e.g.: 0 (right), 90 (up), 180 (left), 270 (down)).
</summary>
            <param name="direction">The direction.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the direction.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.SetAssociation(VxSdk.IVxDrawing*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the Drawing associated with this marker.
</summary>
            <param name="drawing">The drawing to associate with this marker.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.SetAssociation(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the data source associated with this marker.
</summary>
            <param name="dataSource">The data source to associate with this marker.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.GetDrawing(VxSdk.IVxDrawing**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the drawing that this marker belongs to.
</summary>
            <param name="drawing">The drawing this marker belongs to.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.GetAssociation(VxSdk.IVxDrawing**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the drawing associated with this marker.
</summary>
            <param name="drawing">The associated drawing.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.GetAssociation(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data source associated with this marker.
</summary>
            <param name="dataSource">The associated data source.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.DeleteMarker">
            <summary>
Deletes this marker from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the marker.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.DeleteAssociation">
            <summary>
Deletes any resource association with this marker.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the marker.</returns>
        </member>
        <member name="M:VxSdk.IVxMarker.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxMarker">
            <summary>
Represents the location of a resource on a drawing. A marker is associated with exactly one drawing, though a
drawing may have many markers. A marker may be associated with one resource, though a resource may have many
markers.
</summary>
        </member>
        <member name="M:VxSdk.IVxManualRecording.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxManualRecording.time">
            <summary>
The time at which this manual recording was created (not necessarily the exact time that the manual record
clip starts).
</summary>
        </member>
        <member name="F:VxSdk.IVxManualRecording.owner">
            <summary>
The name of the user that created this manual recording.
</summary>
        </member>
        <member name="F:VxSdk.IVxManualRecording.id">
            <summary>
The unique identifier of the manual recording.
</summary>
        </member>
        <member name="F:VxSdk.IVxManualRecording.dataSourceId">
            <summary>
The unique identifier of the data source to manually record.
</summary>
        </member>
        <member name="M:VxSdk.IVxManualRecording.ResetExpirationTimers">
            <summary>
Resets the expiration timers in order to extend this recordings timeout.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of resetting the experation timers.</returns>
        </member>
        <member name="M:VxSdk.IVxManualRecording.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxManualRecording.GetDataSource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data source that is being manually recorded.
</summary>
            <param name="dataSource">The data source being manually recorded.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxManualRecording.DeleteManualRecording">
            <summary>
Delete this manual recording from the VideoXpert system. If all manual recordings are deleted for a data
source, manual recording will be stopped for that data source.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the manual recording.</returns>
        </member>
        <member name="M:VxSdk.IVxManualRecording.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxManualRecording">
            <summary>
DEPRECATED: Replaced by IVxRecording.
<para>
Represents an instance of an active manual recording (the action, not the recorded clip). Each manual recording
will cause its specified data source to be manually recorded by all data storages that the data source is
assigned to. Only one manual recording per user per data source is allowed. A clip created via the application
of a manual recording will have an event value of manual.
</para></summary>
        </member>
        <member name="M:VxSdk.IVxLicense.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicense.systemLicenseType">
            <summary>
The type of system that this license is applied to.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicense.companyName">
            <summary>
The friendly name of the owning company/organization.
</summary>
        </member>
        <member name="M:VxSdk.IVxLicense.GetLicenseSup(VxSdk.VxLicenseSup**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the software upgrade licensing information.
<para>Note: Only available when logged in as the built-in admin user.</para></summary>
            <param name="licenseSup">The <see cref="T:VxSdk.VxLicenseSup" /> for this system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicense.GetLicenseFeatures(VxSdk.VxCollection&lt;VxSdk.IVxLicenseFeature****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the features this license contains.
</summary>
            <param name="licenseFeatureCollection">
A <see cref="T:VxSdk.VxCollection" /> of the features this license contains.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicense.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxLicense.DecommissionDevice(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Decommissions a device on the VideoXpert system.
</summary>
            <param name="device">The device to decommission.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicense.CommissionDevice(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Commissions a device for use within the VideoXpert system.
</summary>
            <param name="device">The device to commission.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxLicense">
            <summary>
Represents license information for the resource that owns this resource.
</summary>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.licensableDevices">
            <summary>
The supported device types that may be licensed for use with this feature.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.used">
            <summary>
The amount of the allowable count that is currently used by commissions.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.licensableDevicesSize">
            <summary>
The size of <see cref="F:VxSdk.IVxLicenseFeature.licensableDevices" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.count">
            <summary>
The allowable commisions count.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.version">
            <summary>
The feature version.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.name">
            <summary>
The name of the feature.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.installation">
            <summary>
The date and time at which the feature was installed on the host.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.id">
            <summary>
The unique identifier of the feature.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.expiration">
            <summary>
The date and time at which the feature will expire.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.activationId">
            <summary>
The activation identifier.
</summary>
        </member>
        <member name="F:VxSdk.IVxLicenseFeature.isPending">
            <summary>
Indicates whether this is a "pending" feature, which does not enable any device functionality, or
a normal feature that does.
</summary>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.UnLink(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes this license feature from the given device, releasing it for reuse (decrements the used count).
</summary>
            <param name="device">The device to remove this license feature from.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.Link(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Applies this license feature to a device; doing so will consume an available count from the feature.
</summary>
            <param name="device">The device to apply this license feature to.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.GetCommissionedDevices(VxSdk.VxCollection&lt;VxSdk.IVxDevice****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices that have been commissioned for this feature.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="deviceCollection">
A <see cref="T:VxSdk.VxCollection" /> of the devices that have been commissioned for this feature.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.GetCapabilityRequest(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the URI to the download location of the capability request.
</summary>
            <param name="endpoint">The capability request endpoint, if available.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.DeleteLicenseFeature">
            <summary>
Delete this license feature from the VideoXpert system. Available only if this is a pending license feature. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the license feature.</returns>
        </member>
        <member name="M:VxSdk.IVxLicenseFeature.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxLicenseFeature">
            <summary>
Represents device functionality that is enabled with a valid license.
</summary>
        </member>
        <member name="F:VxSdk.IVxFile.id">
            <summary>
The unique identifier of the file.
</summary>
        </member>
        <member name="F:VxSdk.IVxFile.filename">
            <summary>
The filename of the associated file data.
</summary>
        </member>
        <member name="M:VxSdk.IVxFile.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxFile.GetFileEndpoint(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the URI to the download location of the actual file data.
</summary>
            <param name="endpoint">The file endpoint, if available.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxFile.DeleteFile">
            <summary>
Deletes this file from the system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this file.</returns>
        </member>
        <member name="M:VxSdk.IVxFile.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxFile">
            <summary>
Represents a file (e.g. camera firmware).
</summary>
        </member>
        <member name="M:VxSdk.IVxExportStream.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportStream.statusReason">
            <summary>
Optional reason for the current status of this export stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportStream.status">
            <summary>
The current status of the export stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportStream.exportStreamClips">
            <summary>
The export stream clips, which provide streaming playback information for each export clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportStream.secondsRemaining">
            <summary>
Estimated time remaining, in seconds, until the export is 100% ready to be streamed. This will only be
populated when the status is preparing or ready.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportStream.exportStreamClipSize">
            <summary>
The size of <see cref="F:VxSdk.IVxExportStream.exportStreamClips" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportStream.percentComplete">
            <summary>
This specifies how close stream preparation is to completion, where 100 indicates that stream is ready for
streaming. This will only be populated when the status is preparing, failed, or ready. In a failed
state, this represents how much progress was made (if any) prior to the failure.
</summary>
        </member>
        <member name="M:VxSdk.IVxExportStream.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxExportStream.Prepare">
            <summary>
Begins or re-starts preparation for streaming. May only be performed when the export stream needs
preparation or has failed.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of preparing the export stream.</returns>
        </member>
        <member name="M:VxSdk.IVxExportStream.Halt">
            <summary>
Halts any pending stream preparation. May only be performed when the export stream is being prepared.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of halting the export stream preparation.</returns>
        </member>
        <member name="M:VxSdk.IVxExportStream.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxExportStream">
            <summary>
Represents streaming access information for an export resource.
</summary>
        </member>
        <member name="M:VxSdk.IVxExport.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.statusReason">
            <summary>
Optional reason for the current status of this Export; typically used to express the reason for a failure.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.status">
            <summary>
The current status of the export.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.format">
            <summary>
The format of the export data.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.exportClips">
            <summary>
The clips associated with this export.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.secondsRemaining">
            <summary>
The estimated time remaining, in seconds, until the export is 100 percent complete.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.fileSizeKb">
            <summary>
The file size of the exported data in kilobytes (kB).
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.exportClipSize">
            <summary>
The size of <see cref="F:VxSdk.IVxExport.exportClips" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.percentComplete">
            <summary>
The percent complete value from 0 to 100. This specifies how close the export is to completion. 0 indicates
that the export has not been triggered; 100 indicates that the export is complete.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.owner">
            <summary>
The name of the user that has created this export, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.name">
            <summary>
The friendly name of the export.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.initiatedTime">
            <summary>
The date and time at which the export was requested.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.id">
            <summary>
The unique identifier of the export.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.exportPath">
            <summary>
The storage path that the export data is saved to. May be empty if the servers default storage location is
being used.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.dataUri">
            <summary>
The URI to the exported data. It will only be present if the exported data is completed and available for
download.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.completedTime">
            <summary>
The date and time at which the triggered export completed the export operation.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.isTrashed">
            <summary>
Indicates whether this export has been trashed.
</summary>
        </member>
        <member name="F:VxSdk.IVxExport.isProtected">
            <summary>
Indicates whether the export data is signed and encrypted.
</summary>
        </member>
        <member name="M:VxSdk.IVxExport.TrashExport">
            <summary>
Trashes this export. Trashed exports may be removed by the server if additional space is needed.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of trashing the export.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.RestoreExport">
            <summary>
Restores this export to a non-trashed state.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of restoring the export.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.GetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Gets the plain text password for this export if it's protected.
<para>Note: Only available when logged in as the built-in admin user.</para></summary>
            <param name="password">The plain text password for this export.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.GetOwner(VxSdk.IVxUser**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxUser" /> that owns this export, if any.
</summary>
            <param name="user">The <see cref="T:VxSdk.IVxUser" /> that owns this export.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.GetExportStream(VxSdk.IVxExportStream**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxExportStream" /> for this export.
</summary>
            <param name="exportStream">The <see cref="T:VxSdk.IVxExportStream" /> for this export.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.DeleteExport">
            <summary>
Deletes this export from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the export.</returns>
        </member>
        <member name="M:VxSdk.IVxExport.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxExport">
            <summary>
Represents an exported data set that is archived within the system.
</summary>
        </member>
        <member name="M:VxSdk.IVxExportClip.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportClip.startTime">
            <summary>
The time at which the export media begins.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportClip.id">
            <summary>
The unique identifier of the export clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportClip.endTime">
            <summary>
The time at which the export media ends.
</summary>
        </member>
        <member name="F:VxSdk.IVxExportClip.dataSourceId">
            <summary>
The unique identifier of the export clips data source.
</summary>
        </member>
        <member name="T:VxSdk.IVxExportClip">
            <summary>
Represents an individual range of media data belonging to an export. This data shall be exported when the
export is triggered.
</summary>
        </member>
        <member name="M:VxSdk.IVxEvent.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.properties">
            <summary>
Optional additional information related to the event.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.ackState">
            <summary>
The current acknowledgement state of the event.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.severity">
            <summary>
The severity of the event, from 1 (highest) to 10 (lowest).
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.wakeup">
            <summary>
The delay, in seconds, prior to bringing the event to the users attention; typically used for silencing the
event.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.propertySize">
            <summary>
The size of <see cref="F:VxSdk.IVxEvent.properties" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.time">
            <summary>
The time at which the situation occurred.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.sourceUserName">
            <summary>
The name of the user that was the cause of the situation, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.sourceDeviceName">
            <summary>
The friendly name of the source device.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.sourceDeviceId">
            <summary>
The unique identifier of the device that the situation occurred on.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.sourceClientId">
            <summary>
The client identifier of the client that was the cause of the situation, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.situationType">
            <summary>
The type of the situation that led to the generation of this event.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.situationName">
            <summary>
The name of the situation that led to the generation of this event.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.id">
            <summary>
The unique identifier created by the device that generated the event.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.generatorDeviceName">
            <summary>
The friendly name of the generator device, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.generatorDeviceId">
            <summary>
The unique identifier of the device that created and injected this
event into the system.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.ackUser">
            <summary>
The user that set the current <see cref="F:VxSdk.IVxEvent.ackState" />, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.ackTime">
            <summary>
The time at which the current <see cref="F:VxSdk.IVxEvent.ackState" /> was set.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.ackClientName">
            <summary>
The friendly name of the client that set the current * ackState, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.ackClientId">
            <summary>
The identifier of the client that set the current ackState, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.shouldAudiblyNotify">
            <summary>
Indicates whether a notification sound should play on supporting clients when an event is received.
</summary>
        </member>
        <member name="F:VxSdk.IVxEvent.isInitial">
            <summary>
Indicates whether the event is in its initial generated state (its ackState has not been updated).
</summary>
        </member>
        <member name="M:VxSdk.IVxEvent.Silence(System.Int32)">
            <summary>
Silences the event for a given amount of time.
</summary>
            <param name="wakeup">The delay, in seconds, to apply prior to the event being brought to
the user’s attention.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.GetUser(VxSdk.IVxUser**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the user that was the cause of the situation.
</summary>
            <param name="user">The user that caused the situation.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.GetSourceDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the device that the situation occurred on.
</summary>
            <param name="device">The source device.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.GetSituation(VxSdk.IVxSituation**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the situation that this event represents.
</summary>
            <param name="situation">The situation of the event.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.GetGeneratorDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the device that the event was generated on.
</summary>
            <param name="device">The generator device.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxEvent.Acknowledge">
            <summary>
Acknowledges the event.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxEvent">
            <summary>
Represents an instance of a particular situation that has occurred.
</summary>
        </member>
        <member name="M:VxSdk.IVxDrawing.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.provider">
            <summary>
The provider for the drawing.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.markerSize">
            <summary>
The size, in pixels, of marker icons.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.cameraNumberColor">
            <summary>
An integer that defines an ARGB color for the camera number text.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.backgroundColor">
            <summary>
An integer that defines an ARGB color for the map background.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.name">
            <summary>
The friendly name of the drawing.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.mimeType">
            <summary>
The mime type of the drawing
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.lastModified">
            <summary>
The time since the drawing was last modified
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.id">
            <summary>
The unique identifier of the drawing.
</summary>
        </member>
        <member name="F:VxSdk.IVxDrawing.showCameraNumbers">
            <summary>
Indicates whether the camera number text overlays should be displayed.
</summary>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetShowCameraNumbers(System.Boolean)">
            <summary>
Sets the showCameraNumbers property.
</summary>
            <param name="showCameraNumbers">
                <c>true</c> to show camera number text overlay, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetMarkerSize(System.Int32)">
            <summary>
Sets the markerSize property.
</summary>
            <param name="markerSize">The new marker size value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetLock">
            <summary>
Sets a resource lock on this drawing, owned by the current user.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetImage(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the binary drawing image data. The maximum allowable size of the image is 128 MB.
</summary>
            <param name="imagePath">The local path to the image file.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetCameraNumberColor(System.UInt32)">
            <summary>
Sets the cameraNumberColor property.
</summary>
            <param name="cameraNumberColor">The new camera number color ARGB value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.SetBackgroundColor(System.UInt32)">
            <summary>
Sets the backgroundColor property.
</summary>
            <param name="backgroundColor">The new background color ARGB value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.GetMarkers(VxSdk.VxCollection&lt;VxSdk.IVxMarker****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the markers contained within this drawing.
<para>Available filters: kLayerName, kModifiedSince, kResourceId.</para></summary>
            <param name="markerCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated markers.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.GetLock(VxSdk.IVxResourceLock**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the resource lock, if any.
</summary>
            <param name="resourceLock">The current resource lock if present.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.GetImage(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the binary image data, if any.
</summary>
            <param name="endpoint">The image endpoint.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.DeleteImage">
            <summary>
Deletes the binary drawing image data.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the Drawing.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.DeleteDrawing">
            <summary>
Delete this drawing from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the Drawing.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxDrawing.AddMarker(VxSdk.VxNewMarker*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new marker.
</summary>
            <param name="newMarker">The new marker to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxDrawing">
            <summary>
Represents a diagrammatic representation of an area. A drawing may contain any number of markers to represent
points of interest within the area.
</summary>
        </member>
        <member name="M:VxSdk.IVxDiscovery.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDiscovery.numInitialized">
            <summary>
The number of devices that were successfully initialized in the most recent discovery attempt.
</summary>
        </member>
        <member name="F:VxSdk.IVxDiscovery.numInitializationErrors">
            <summary>
The number of devices that failed to initialize in the most recent discovery attempt.
</summary>
        </member>
        <member name="F:VxSdk.IVxDiscovery.numDiscovered">
            <summary>
The number of devices that were successfully discovered in the most recent discovery attempt.
</summary>
        </member>
        <member name="F:VxSdk.IVxDiscovery.initiated">
            <summary>
The time when the current discovery attempt was triggered.
</summary>
        </member>
        <member name="F:VxSdk.IVxDiscovery.isInitializing">
            <summary>
                <c>true</c> if currently initializing devices; <c>false</c> otherwise.
</summary>
        </member>
        <member name="F:VxSdk.IVxDiscovery.isDiscovering">
            <summary>
Indicates whether the system is currently discovering devices.
</summary>
        </member>
        <member name="M:VxSdk.IVxDiscovery.TriggerDiscovery(VxSdk.VxDiscoveryRequest*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Begins discovery and initialization.
</summary>
            <param name="discoveryRequest">The discovery request to trigger.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDiscovery.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDiscovery.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDiscovery">
            <summary>
Represents the current status of device discovery.
</summary>
        </member>
        <member name="M:VxSdk.IVxDbBackups.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackups.maxBackupsToKeep">
            <summary>
The maximum number of backups to keep in the backup directory before overwriting the oldest.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackups.backupInterval">
            <summary>
The number of days between automatic database backups.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackups.backupPathUsername">
            <summary>
The username used to access the backup storage location path.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackups.backupPath">
            <summary>
The optional UNC network path to use for alternate backup storage (instead of the server default location).
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackups.backupTime">
            <summary>
The time at which daily automatic database backups will begin, from 00:00:00 to 23:59:59.
</summary>
        </member>
        <member name="M:VxSdk.IVxDbBackups.ValidateBackupPath(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Gets a value indicating whether a network storage path is available and valid as a backup storage.
</summary>
            <param name="isValid">
                <c>true</c> if the path is valid, otherwise <c>false</c>.</param>
            <param name="backupPath">The UNC network storage path.</param>
            <param name="backupPathUsername">The username for access to the backup path, if any.</param>
            <param name="backupPathPassword">The password for access to the backup path, if any.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of validating the path.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.TriggerBackup">
            <summary>
Initiate a new unscheduled database backup.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of triggering a new database backup.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.SetMaxBackupsToKeep(System.Int32)">
            <summary>
Sets the maximum number of backups to keep in the backup directory before overwriting the oldest.
</summary>
            <param name="maxBackupsToKeep">The maximum number of backups to keep.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.SetBackupTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the time at which daily automatic database backups will begin.
</summary>
            <param name="backupTime">The time to perform daily backups, from 00:00:00 to 23:59:59.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.SetBackupPathUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the backup path username. If set, this username will be used to access the network resource specified
in the <see cref="F:VxSdk.IVxDbBackups.backupPath" />.
</summary>
            <param name="backupPathUsername">The new backup path username value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the username.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.SetBackupPathPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the backup path password. If set, this password will be used to access the network resource specified
in the <see cref="F:VxSdk.IVxDbBackups.backupPath" />.
</summary>
            <param name="backupPathPassword">The new backup path password value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the password.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.SetBackupPath(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the UNC network path to use for alternate backup storage (instead of the server default location).
</summary>
            <param name="backupPath">The new backup path value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the path.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.SetBackupInterval(System.Int32)">
            <summary>
Sets the number of days between automatic database backups.
</summary>
            <param name="backupInterval">The backup interval; a value of 0 will disable automatic database backups.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.GetDatabaseBackups(VxSdk.VxCollection&lt;VxSdk.IVxDbBackup****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the current collection of database backups.
<para>Available filters: None.</para></summary>
            <param name="dbBackupCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated database backups.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackups.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDbBackups">
            <summary>
Represents a collection of database backups and provides database backup and control.
</summary>
        </member>
        <member name="M:VxSdk.IVxDbBackup.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackup.statusReason">
            <summary>
The optional reason for the current status of this backup; typically used to express the reason
for a failure.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackup.status">
            <summary>
The current status of this backup.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackup.initiated">
            <summary>
The date and time at which this backup was initiated.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackup.id">
            <summary>
The unique identifier of the database backup.
</summary>
        </member>
        <member name="F:VxSdk.IVxDbBackup.completed">
            <summary>
The date and time at which this backup completed.
</summary>
        </member>
        <member name="M:VxSdk.IVxDbBackup.Restore">
            <summary>
Restore this backup to the database.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of restoring this backup.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackup.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackup.Halt">
            <summary>
Halts the current backup operation that is in progress, if any.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of halting the backup operation.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackup.DeleteBackup">
            <summary>
Deletes this backup. If the backup is in progress, it shall be halted first.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this backup.</returns>
        </member>
        <member name="M:VxSdk.IVxDbBackup.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDbBackup">
            <summary>
Represents a database backup.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataObject.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataObject.owner">
            <summary>
If present, indicates that this resource is owned by a user (it is private); this is their username. If not
present, indicates that this resource is not owned (it is public). If this data object has an owner, only
the owner and users with appropriate permissions will be able to read it.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataObject.id">
            <summary>
The unique identifier of the data object.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataObject.clientType">
            <summary>
The data object client identifier.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataObject.SetData(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the serialized data value.
</summary>
            <param name="data">The serialized data.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the data.</returns>
        </member>
        <member name="M:VxSdk.IVxDataObject.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDataObject.GetOwner(VxSdk.IVxUser**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxUser" /> that owns this data object, if any.
</summary>
            <param name="user">The <see cref="T:VxSdk.IVxUser" /> that owns this data object.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataObject.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataObject.GetData(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the serialized data.
</summary>
            <param name="data">The serialized data.</param>
            <param name="size">The size of <paramref name="data" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataObject.DeleteDataObject">
            <summary>
Deletes this data object from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the data object.</returns>
        </member>
        <member name="M:VxSdk.IVxDataObject.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDataObject">
            <summary>
Represents a custom serialized data object submitted by a client and stored on the server. The data is
completely opaque to the server and other types of clients.
</summary>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.objectWrongWayZone">
            <summary>
The object wrong way zone data used when <see cref="F:VxSdk.IVxAnalyticBehavior.behaviorType" /> is set to
<see cref="F:kObjectWrongWay" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.objectLineCounter">
            <summary>
The object line counter data used when <see cref="F:VxSdk.IVxAnalyticBehavior.behaviorType" /> is set to
<see cref="F:kObjectLineCounter" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.objectInZone">
            <summary>
The object in zone data used to configure analytics of <see cref="F:VxSdk.IVxAnalyticBehavior.behaviorType" /> is set
to <see cref="F:kObjectInZone" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.objectType">
            <summary>
The type of object this analytic pertains to.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.behaviorType">
            <summary>
The type of this AnalyticBehavior.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.severity">
            <summary>
The severity value for events generated from this analytic behavior, from 1 (highest) to 10 (lowest).
If set, overrides the corresponding situation severity.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.name">
            <summary>
The friendly name of the analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.id">
            <summary>
The unique identifier of the analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticBehavior.isEnabled">
            <summary>
Indicates whether or not this analytic behavior is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.SetSeverity(System.Int32)">
            <summary>
Sets the severity value for events generated from this analytic behavior, from 1 (highest) to 10 (lowest).
If set, overrides the corresponding situation severity.
</summary>
            <param name="severity">The new severity value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.SetObjectWrongWayZone(VxSdk.VxObjectWrongWayZone*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the objectWrongWayZone property.
</summary>
            <param name="objectWrongWayZone">The new objectWrongWayZone value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.SetObjectType(VxSdk.VxAnalyticObjectType.Value)">
            <summary>
Sets the objectType property.
</summary>
            <param name="objectType">The new objectType value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.SetObjectLineCounter(VxSdk.VxObjectLineCounter*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the objectLineCounter property.
</summary>
            <param name="objectLineCounter">The new objectLineCounter value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.SetObjectInZone(VxSdk.VxObjectInZone*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the objectInZone property.
</summary>
            <param name="objectInZone">The new objectInZone value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.Enable">
            <summary>
Enable this analytic behavior.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling this analytic behavior.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.Disable">
            <summary>
Disable this analytic behavior.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this analytic behavior.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticBehavior.DeleteAnalyticBehavior">
            <summary>
Delete this analytic behavior.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the analytic behavior.</returns>
        </member>
        <member name="T:VxSdk.IVxAnalyticBehavior">
            <summary>
Represents a specific analytic behavior for an analytic configuration.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.timeout">
            <summary>
The timeout in milliseconds.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.smtpPort">
            <summary>
The SMTP port.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.username">
            <summary>
The username for SMTP access.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.toAddress">
            <summary>
The "Mail To" email address.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.password">
            <summary>
The password for SMTP access.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.host">
            <summary>
The SMTP host.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.fromAddress">
            <summary>
The "Mail From" email address.
</summary>
        </member>
        <member name="F:VxSdk.VxSmtpInfo.useSmtps">
            <summary>
Indicates whether SMTPS should be used instead of SMTP.
</summary>
        </member>
        <member name="M:VxSdk.VxSmtpInfo.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxSmtpInfo.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxSmtpInfo" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxSmtpInfo.#ctor(VxSdk.VxSmtpInfo!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxSmtpInfo" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxSmtpInfo.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxSmtpInfo" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxSmtpInfo">
            <summary>
Represents the SMTP information needed to send an email.
</summary>
        </member>
        <member name="F:VxSdk.VxPermissionSchema.permissions">
            <summary>
Recursive list of permission schema. Indicates permission hierarchy; nested items are children while
containing items are parents.
</summary>
        </member>
        <member name="F:VxSdk.VxPermissionSchema.restrictionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxPermissionSchema.restrictions" />.
</summary>
        </member>
        <member name="F:VxSdk.VxPermissionSchema.permissionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxPermissionSchema.permissions" />.
</summary>
        </member>
        <member name="F:VxSdk.VxPermissionSchema.restrictions">
            <summary>
Specifies the resource types that may be restricted by this permission, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxPermissionSchema.permissionId">
            <summary>
The permission being granted by this field or field group.
</summary>
        </member>
        <member name="F:VxSdk.VxPermissionSchema.isGroup">
            <summary>
                <c>true</c> if this represents a permission group; <c>false</c> indicates this is a permission.
</summary>
        </member>
        <member name="M:VxSdk.VxPermissionSchema.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxPermissionSchema.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxPermissionSchema" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxPermissionSchema.#ctor(VxSdk.VxPermissionSchema!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPermissionSchema" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxPermissionSchema.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPermissionSchema" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxPermissionSchema">
            <summary>
Represents static system permission information in a machine-readable manner. This indicates
permission groups, hierarchy, and resource restriction information.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolumeGroup.name">
            <summary>
The friendly name of this volume group.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolumeGroup.isArchiveGroup">
            <summary>
Indicates whether or not this volume group is an "archive volume group", which will act as storage for the
oldest available data.
</summary>
        </member>
        <member name="M:VxSdk.VxNewVolumeGroup.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewVolumeGroup.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewVolumeGroup" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewVolumeGroup.#ctor(VxSdk.VxNewVolumeGroup!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewVolumeGroup" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewVolumeGroup.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewVolumeGroup" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewVolumeGroup">
            <summary>
Represents a new volume group to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTimeTable.weeklyTimeRanges">
            <summary>
The active time ranges for this time table.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTimeTable.weeklyTimeRangeSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewTimeTable.weeklyTimeRanges" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTimeTable.startDate">
            <summary>
The time table will be considered active after this date.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTimeTable.name">
            <summary>
The friendly name of the time table.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTimeTable.id">
            <summary>
The unique identifier of the time table.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTimeTable.endDate">
            <summary>
The time table will be considered inactive after this date.
</summary>
        </member>
        <member name="M:VxSdk.VxNewTimeTable.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewTimeTable.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewTimeTable" /> struct.
</summary>
        </member>
        <member name="M:VxSdk.VxNewTimeTable.#ctor(VxSdk.VxNewTimeTable!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewTimeTable" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewTimeTable.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewTimeTable" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewTimeTable">
            <summary>
Represents a new time table to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxTimeRange.day">
            <summary>
The day of the week that this time range applies to.
</summary>
        </member>
        <member name="F:VxSdk.VxTimeRange.startTime">
            <summary>
The time at which this range begins (inclusive), from 00:00:00 to 23:59:59.
</summary>
        </member>
        <member name="F:VxSdk.VxTimeRange.endTime">
            <summary>
The time at which this range ends (inclusive), from 00:00:00 to 23:59:59.
</summary>
        </member>
        <member name="M:VxSdk.VxTimeRange.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxTimeRange.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxTimeRange" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxTimeRange.#ctor(VxSdk.VxTimeRange!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxTimeRange" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxTimeRange.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxTimeRange" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxTimeRange">
            <summary>
Represents a range of time, specified by three mandatory fields. If the start time is greater than the end
time, the range will be inactive.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTag.parentId">
            <summary>
The unique identifier of the tag that is the parent of this tag. If this is provided on a non-folder tag,
it will be ignored.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTag.name">
            <summary>
The unique friendly name of the tag.
</summary>
            <remarks>Commas are invalid characters for this field and MUST NOT be used.</remarks>
        </member>
        <member name="F:VxSdk.VxNewTag.isPublic">
            <summary>
Indicates whether the new tag will not be owned (public) or will be owned by the user submitting the
request (private). Not applicable if this is a folder tag.
</summary>
        </member>
        <member name="F:VxSdk.VxNewTag.isFolder">
            <summary>
Indicates whether the new tag will be a folder tag.
</summary>
        </member>
        <member name="M:VxSdk.VxNewTag.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewTag.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewTag" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewTag.#ctor(VxSdk.VxNewTag!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewTag" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewTag.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewTag" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewTag">
            <summary>
Represents a new tag to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.snoozeIntervals">
            <summary>
The default snooze intervals, in seconds, for a generated event.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.snoozeIntervalSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewSituation.snoozeIntervals" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.severity">
            <summary>
The severity of the generated event, from 1 (highest) to 10 (lowest).
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.autoAcknowledge">
            <summary>
The number of seconds after which a generated event state will be set to AutoAcked. If less than 0, a generated
event must be manually acknowledged. If 0, a generated event is set to AutoAcked immediately.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.audiblePlayCount">
            <summary>
The amount of times to play audible notifications.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.audibleLoopDelay">
            <summary>
The seconds to wait between audible notifications.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.type">
            <summary>
The situation type. The type must be of the form external/&lt;company&gt;/&lt;event&gt; where
&lt;company&gt; and &lt;event&gt; are strings no greater than 64 characters each; forward slashes are not
allowed. These strings describe the &lt;company&gt; that manufactured the device that was the source of the
&lt;event&gt;.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.sourceDeviceId">
            <summary>
The unique source identifier. This field acts an optional constraint on the source of
events for this situation. If specified, any events matching the situation type must also match
this SourceDeviceId in order for the situation to apply.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.name">
            <summary>
The situation friendly name; forward slashes are not allowed.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.shouldPopupBanner">
            <summary>
Indicates whether clients should display a popup notification banner when receiving events of this type.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.shouldNotify">
            <summary>
Indicates whether an event generated from the situation shall generate notifications.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.shouldLog">
            <summary>
Indicates whether events generated from this situation shall be persisted or immediately be discarded.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.shouldExpandBanner">
            <summary>
Indicates whether the notification banner on clients should be expanded by default.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.shouldAudiblyNotify">
            <summary>
Indicates whether a notification sound should play on supporting clients when an event is received.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSituation.isAckNeeded">
            <summary>
Indicates whether the generated events shall have an initial state of AckNeeded or NoAckNeeded.
</summary>
        </member>
        <member name="M:VxSdk.VxNewSituation.Default">
            <summary>
Defaults this instance.
</summary>
            <remarks>Careful, this allocates snoozeIntervals so ensure to manage the memory</remarks>
        </member>
        <member name="M:VxSdk.VxNewSituation.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewSituation.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewSituation" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewSituation.#ctor(VxSdk.VxNewSituation!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewSituation" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewSituation.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewSituation" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewSituation">
            <summary>
Represents a new situation configuration that specifies how corresponding events shall be generated and handled
when the situation is detected.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSchedule.action">
            <summary>
The action to perform when the schedule is active.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSchedule.scheduleTriggers">
            <summary>
The <see cref="T:VxSdk.VxNewScheduleTrigger">VxNewScheduleTriggers</see> to create for the new schedule. Maximum of
16 triggers may be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSchedule.scheduleTriggerSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewSchedule.scheduleTriggers" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSchedule.name">
            <summary>
The friendly name of the schedule.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSchedule.id">
            <summary>
The unique identifier of the schedule. If not supplied, the system will create the identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxNewSchedule.useAllDataSources">
            <summary>
Indicates whether the schedule shall apply to all data sources regardless of what data sources are linked
to the schedule.
</summary>
        </member>
        <member name="M:VxSdk.VxNewSchedule.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewSchedule.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewSchedule" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewSchedule.#ctor(VxSdk.VxNewSchedule!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewSchedule" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewSchedule.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewSchedule" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewSchedule">
            <summary>
Represents a new schedule to be created. A schedule is a group of 0 or more resources associated with a set of
time and/or event based schedule triggers that, when any are active, cause the scheduled action to be
performed.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.action">
            <summary>
The action performed when the schedule trigger actives.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.framerate">
            <summary>
The framerate level to record at. Defaults to <see cref="F:kNormal" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.eventProperties">
            <summary>
If set, the event only activates when it occurs with these properties. Ignored if no
<see cref="F:VxSdk.VxNewScheduleTrigger.eventSituationType" /> is set.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.timeout">
            <summary>
Amount of time, from 1 to 300 seconds, to consider the schedule trigger active immediately after it becomes
active ("duration recording"). The schedule trigger will become inactive when this time has elapsed (though
the <see cref="F:VxSdk.VxNewScheduleTrigger.postTrigger" /> may continue to keep it active at this point). No timeout is applied if the
value is less than 1. Defaults to 0.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.preTrigger">
            <summary>
Amount of time, from 0 to 30 seconds, to consider the schedule trigger active prior to when it becomes
active ("pre alarm"). Defaults to 0.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.postTrigger">
            <summary>
Amount of time, from 0 to 300 seconds, to continue to consider the schedule trigger active when it becomes
inactive ("post alarm"). Defaults to 0.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.eventPropertySize">
            <summary>
The size of <see cref="F:VxSdk.VxNewScheduleTrigger.eventProperties" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.timeTableId">
            <summary>
The unique identifier of a time table. If set, the schedule trigger will only be active during the time
range(s) defined by this time table.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.inactiveEventSituationType">
            <summary>
The <c>IVxEvent::situationType</c> of event that will cause this schedule trigger to no
longer be considered active. If set, the schedule trigger event state will no longer be considered active.
If not set, the schedule trigger event status will immediately be considered inactive after event occurs.
NOTE: This field is ignored if <see cref="F:VxSdk.VxNewScheduleTrigger.eventSituationType" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.id">
            <summary>
The unique identifier of the schedule trigger. If not supplied, the system will create the identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxNewScheduleTrigger.eventSituationType">
            <summary>
The <c>IVxEvent::situationType</c> that will activate the schedule trigger. If set, the
schedule trigger is considered an "event" trigger, otherwise it is considered a "timed" trigger. If set,
the schedule trigger only activates when this type of event occurs.
See <see cref="F:VxSdk.VxNewScheduleTrigger.inactiveEventSituationType" /> for information on when the trigger will deactivate.
</summary>
        </member>
        <member name="M:VxSdk.VxNewScheduleTrigger.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewScheduleTrigger.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewScheduleTrigger" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewScheduleTrigger.#ctor(VxSdk.VxNewScheduleTrigger!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewScheduleTrigger" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewScheduleTrigger.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewScheduleTrigger" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewScheduleTrigger">
            <summary>
Represents a new schedule trigger to be created. A schedule trigger is a time range and an optional event that
together act as a trigger to activate a schedule. The schedule trigger is considered active when all of its time
and event attributes indicate it should be active. An active schedule trigger will perform its configured action.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.triggers">
            <summary>
The triggers that, when any activate, cause the rule to run its script. If empty or null, this rule must be
manually triggered.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.responses">
            <summary>
The list of responses that will be executed when this rule is triggered. The order of this list is the
order in which the responses will execute.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.triggerSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewRule.triggers" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.timeTableIdSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewRule.timeTableIds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.responseSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewRule.responses" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.timeTableIds">
            <summary>
The unique identifiers of the time tables that will be associated with this rule. The rule will only
automatically run its script if a trigger occurs during the times contained by the time tables specified
here. If empty, no active time ranges are available for this rule (it must be manually triggered). If null,
no time filters will be applied (the new rule is always active).
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.script">
            <summary>
DEPRECATED
<para>The script to run when the rule is triggered.</para></summary>
        </member>
        <member name="F:VxSdk.VxNewRule.name">
            <summary>
The friendly name of the rule.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRule.isEnabled">
            <summary>
Indicates whether or not this rule is enabled.
</summary>
        </member>
        <member name="M:VxSdk.VxNewRule.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewRule.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewRule" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewRule.#ctor(VxSdk.VxNewRule!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewRule" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewRule.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewRule" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewRule">
            <summary>
Represents a new rule to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxRuleTrigger.sourceRef">
            <summary>
The resource reference that this trigger is associated with. Limited to one resource only. If empty, no
source filter will be applied (all sources are valid).
<para>
Supported resources are limited to the following resource types: kDataSource, kDevice, kDataStorage, and
kTag. This trigger will evaluate to <c>true</c> only if its event source matches one of these sources. If
the type is a device, this will match against the events source device id. If the type is a data source,
this will match against the service_property_id value within the event properties. Finally, if a source is
a tag, this will match against the tag applied to the situations service type.
</para></summary>
        </member>
        <member name="F:VxSdk.VxRuleTrigger.sourceRefSize">
            <summary>
The size of <see cref="F:VxSdk.VxRuleTrigger.sourceRef" />.
</summary>
        </member>
        <member name="F:VxSdk.VxRuleTrigger.situationType">
            <summary>
The situation type. This trigger will be checked each time this type of situation occurs. If empty, this
trigger will always be inactive.
</summary>
        </member>
        <member name="M:VxSdk.VxRuleTrigger.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxRuleTrigger.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxRuleTrigger" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxRuleTrigger.#ctor(VxSdk.VxRuleTrigger!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRuleTrigger" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxRuleTrigger.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRuleTrigger" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxRuleTrigger">
            <summary>
Represents a condition in a rule that, if <c>true</c>, causes the rule to run its script (if triggered during
an active time of the rule).
</summary>
        </member>
        <member name="F:VxSdk.VxRuleResponse.usedSourceEventFieldsSize">
            <summary>
The size of <see cref="F:VxSdk.VxRuleResponse.usedSourceEventFields" />.
</summary>
        </member>
        <member name="F:VxSdk.VxRuleResponse.usedSourceEventFields">
            <summary>
List of fields from the source event to copy to the generated event. The event time is always copied.
Restricted to severity, source_device_id, properties. Ignored if <c>isCustomScript</c> is <c>true</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxRuleResponse.situationType">
            <summary>
The type of the situation to generate an event for. Ignored if <c>isCustomScript</c> is <c>true</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxRuleResponse.script">
            <summary>
The Groovy script to run when the rule triggers. If this script is triggered by an event, its
properties will be available in the script’s eventProperties variable.
Ignored if <c>isCustomScript</c> is <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxRuleResponse.isCustomScript">
            <summary>
If <c>true</c>, indicates that this response is a custom script and will ignore the situationType and
usedSourceEventFields fields. If <c>false</c>, indicates that this response will generate an event and
will ignore the script field.
</summary>
        </member>
        <member name="M:VxSdk.VxRuleResponse.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxRuleResponse.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxRuleResponse" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxRuleResponse.#ctor(VxSdk.VxRuleResponse!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRuleResponse" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxRuleResponse.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRuleResponse" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxRuleResponse">
            <summary>
Represents a rule response. The response may be configured to either execute a Groovy script or generate an
event in the system when triggered.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.interval">
            <summary>
The time interval that is used to track data in the report (days, hours, etc).
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.type">
            <summary>
The type of the report that this template represents.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.filters">
            <summary>
The report filter to use to filter the contents of the report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.fields">
            <summary>
The ordered list of report field available to include in the report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.storageLocation">
            <summary>
The network storage location to export the report data to. Ignored if <see cref="F:VxSdk.VxNewReportTemplate.recurrence" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.language">
            <summary>
The language to use when creating the report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.recurrence">
            <summary>
The days of the week to automatically generate a report from this template. Ignored if
<see cref="F:VxSdk.VxNewReportTemplate.recurrenceTime" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.recurrenceSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewReportTemplate.recurrence" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.filtersSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewReportTemplate.filters" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.fieldsSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewReportTemplate.fields" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.duration">
            <summary>
The duration of time, in hours, extending back from <see cref="F:VxSdk.VxNewReportTemplate.endTime" /> to limit collected report data
to. If 0, there is no limit.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.recurrenceTime">
            <summary>
The time at which to perform automatic report generation on given recur days, from 00:00:00 to 23:59:59.
Ignored if <see cref="F:VxSdk.VxNewReportTemplate.recurrence" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.name">
            <summary>
The friendly name of the report template.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.format">
            <summary>
The desired format for the contents of the report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReportTemplate.endTime">
            <summary>
The end time at which the collected report data is limited to. If not specified, report data will be
collected up to the current time at which the report is generated.
</summary>
        </member>
        <member name="M:VxSdk.VxNewReportTemplate.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewReportTemplate.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewReportTemplate" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewReportTemplate.#ctor(VxSdk.VxNewReportTemplate!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewReportTemplate" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewReportTemplate.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewReportTemplate" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewReportTemplate">
            <summary>
Represents a new report template to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxReportFilter.type">
            <summary>
The resource type to filter by in the report.
</summary>
        </member>
        <member name="F:VxSdk.VxReportFilter.filterIdSize">
            <summary>
The size of <see cref="F:VxSdk.VxReportFilter.filterIds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxReportFilter.filterIds">
            <summary>
List of unique identifiers to filter by (based on type). For instance, if the type is a data source, this
will be the list of data source IDs to limit the report contents to.
</summary>
        </member>
        <member name="M:VxSdk.VxReportFilter.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxReportFilter.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxReportFilter" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxReportFilter.#ctor(VxSdk.VxReportFilter!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxReportFilter" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxReportFilter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxReportFilter" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxReportFilter">
            <summary>
Represents a filter within a report.
</summary>
        </member>
        <member name="F:VxSdk.VxReportField.subfields">
            <summary>
The list of report field subfields. If set, indicates that this is a field group.
</summary>
        </member>
        <member name="F:VxSdk.VxReportField.subfieldSize">
            <summary>
The size of <see cref="F:VxSdk.VxReportField.subfields" />.
</summary>
        </member>
        <member name="F:VxSdk.VxReportField.type">
            <summary>
The report field type of this field or field group.
</summary>
        </member>
        <member name="F:VxSdk.VxReportField.name">
            <summary>
The friendly name of this field or field group.
</summary>
        </member>
        <member name="F:VxSdk.VxReportField.isEnabled">
            <summary>
                <c>true</c> to include this field in the report; <c>false</c> to omit it.
</summary>
        </member>
        <member name="M:VxSdk.VxReportField.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxReportField.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxReportField" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxReportField.#ctor(VxSdk.VxReportField!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxReportField" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxReportField.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxReportField" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxReportField">
            <summary>
Represents a field or field group within a report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReport.templateId">
            <summary>
The unique identifier of the <see cref="!:IVxReportTemplate" /> to use to generate the new report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewReport.name">
            <summary>
The friendly name of the new report. If not specified, the name of the report template will be used.
</summary>
        </member>
        <member name="M:VxSdk.VxNewReport.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewReport.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewReport" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewReport.#ctor(VxSdk.VxNewReport!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewReport" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewReport.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewReport" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewReport">
            <summary>
Represents a request to generate a new report.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.endEventSource">
            <summary>
If specified, only events from the specified source will end the recording.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.recordType">
            <summary>
The type of this recording which will show up in the corresponding clips
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.framerate">
            <summary>
The framerate to record at.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.preRecord">
            <summary>
Amount of time, in seconds, to record prior to the recording start time.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.postRecord">
            <summary>
Amount of time, in seconds, to record after the recording would otherwise be stopped.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.maxRecordingTime">
            <summary>
Maximum amount of time, in seconds, to record before stopping.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.startTime">
            <summary>
Time at which the recording should begin (may be in the recent past). The recording
preRecord and maxRecordingTime will reference to this time. Defaults to the time
at which the server processes the request.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.name">
            <summary>
Friendly name of the recording which can be used to identify recordings to stop
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.id">
            <summary>
The unique identifier of the recording.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.endEvent">
            <summary>
If specified, the recording will automatically end when a matching event occurs.
</summary>
        </member>
        <member name="F:VxSdk.VxNewRecording.dataSourceId">
            <summary>
The unique identifier of the data source to record.
</summary>
        </member>
        <member name="M:VxSdk.VxNewRecording.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewRecording.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewRecording" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewRecording.#ctor(VxSdk.VxNewRecording!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewRecording" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewRecording.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewRecording" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewRecording">
            <summary>
Represents a request for a new recording to be generated.
</summary>
        </member>
        <member name="F:VxSdk.VxNewPrivilege.permissionId">
            <summary>
Identifier of the permission being granted.
</summary>
        </member>
        <member name="F:VxSdk.VxNewPrivilege.priority">
            <summary>
Relative priority for the privilege, from 1 to 250. Smaller numbers have higher priority than larger
numbers (e.g. 1 is the highest priority).
</summary>
        </member>
        <member name="M:VxSdk.VxNewPrivilege.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewPrivilege.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewPrivilege" /> struct.
</summary>
        </member>
        <member name="M:VxSdk.VxNewPrivilege.#ctor(VxSdk.VxNewPrivilege!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewPrivilege" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewPrivilege.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewPrivilege" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewPrivilege">
            <summary>
Represents a new privilege to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewPixelSearch.zones">
            <summary>
List of rectangular areas indicating the selected zones to search (0,0 to 999,999).
</summary>
        </member>
        <member name="F:VxSdk.VxNewPixelSearch.zoneSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewPixelSearch.zones" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewPixelSearch.rows">
            <summary>
The number of rows in the search grid (1 to 1000).
</summary>
        </member>
        <member name="F:VxSdk.VxNewPixelSearch.columns">
            <summary>
The number of columns in the search grid (1 to 1000).
</summary>
        </member>
        <member name="F:VxSdk.VxNewPixelSearch.searchStartTime">
            <summary>
The inclusive bounds to the latest results to retrieve. Defaults to the most current results available.
</summary>
        </member>
        <member name="F:VxSdk.VxNewPixelSearch.searchEndTime">
            <summary>
The inclusive bounds to the earliest results to retrieve. Defaults to the oldest results available.
</summary>
        </member>
        <member name="M:VxSdk.VxNewPixelSearch.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewPixelSearch.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewPixelSearch" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewPixelSearch.#ctor(VxSdk.VxNewPixelSearch!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewPixelSearch" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewPixelSearch.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewPixelSearch" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewPixelSearch">
            <summary>
Represents a square grid composed of rows and columns with zones indicating the areas of the grid to search.
The grid uses a cartesian coordinate system with 0-based indices. The search results will be contained by the
new <see cref="T:VxSdk.IVxPixelSearch" /> that is created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewNotification.userIdSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewNotification.userIds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewNotification.roleIdSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewNotification.roleIds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewNotification.userIds">
            <summary>
The ids for each user that should receive this notification.
</summary>
        </member>
        <member name="F:VxSdk.VxNewNotification.roleIds">
            <summary>
The ids for each role that should receive this notification.
</summary>
        </member>
        <member name="M:VxSdk.VxNewNotification.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewNotification.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewNotification" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewNotification.#ctor(VxSdk.VxNewNotification!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewNotification" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewNotification.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewNotification" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewNotification">
            <summary>
Represents a new notification configuration for a situation.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMonitor.layout">
            <summary>
The cell grid layout of the monitor.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMonitor.yResolution">
            <summary>
The vertical resolution.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMonitor.xResolution">
            <summary>
The horizontal resolution.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMonitor.number">
            <summary>
The unique number of the monitor.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMonitor.name">
            <summary>
The friendly name of the monitor.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMonitor.hostDeviceId">
            <summary>
The unique identifier of the monitor host device.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMonitor.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMonitor.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewMonitor" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMonitor.#ctor(VxSdk.VxNewMonitor!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewMonitor" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewMonitor.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewMonitor" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewMonitor">
            <summary>
Represents a new monitor to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMarker.y">
            <summary>
The Y cartesian coordinate.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMarker.x">
            <summary>
The X cartesian coordinate.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMarker.direction">
            <summary>
The angular coordinate indicating the direction that the marker is facing on a polar grid. (e.g.: 0[right],
90[up], 180[left], 270[down]), if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMarker.name">
            <summary>
The friendly name of the marker, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMarker.layerName">
            <summary>
The friendly name of the layer that this marker is on, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewMarker.associatedDataSourceId">
            <summary>
The unique identifier of the data source to associate with the marker, if any.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMarker.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMarker.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewMarker" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewMarker.#ctor(VxSdk.VxNewMarker!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewMarker" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewMarker.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewMarker" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewMarker">
            <summary>
Represents a new marker to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewManualRecording.preRecord">
            <summary>
The amount of time, from 0 to 30 seconds, to record prior to the manual recording start time.
</summary>
        </member>
        <member name="F:VxSdk.VxNewManualRecording.postRecord">
            <summary>
The amount of time, from 0 to 30 seconds, to record after the manual recording is stopped.
</summary>
        </member>
        <member name="F:VxSdk.VxNewManualRecording.dataSourceId">
            <summary>
The unique identifier of the data source to manually record.
</summary>
        </member>
        <member name="M:VxSdk.VxNewManualRecording.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewManualRecording.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewManualRecording" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewManualRecording.#ctor(VxSdk.VxNewManualRecording!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewManualRecording" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewManualRecording.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewManualRecording" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewManualRecording">
            <summary>
DEPRECATED: Replaced by VxNewRecording.
<para>
Represents a request for a new manual recording to be generated.
</para></summary>
        </member>
        <member name="F:VxSdk.VxNewExport.clips">
            <summary>
The clips that shall be included in this export when triggered.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExport.alternateLocation">
            <summary>
If specified, the export will be saved to this alternate network location.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExport.format">
            <summary>
The export format to use.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExport.clipSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewExport.clips" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExport.password">
            <summary>
The password for the export. If set, the export data will be signed and encrypted. This password will be
required to decrypt the export data. If not set, the export data will not be signed or encrypted.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExport.name">
            <summary>
The friendly name of the export.
</summary>
        </member>
        <member name="M:VxSdk.VxNewExport.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewExport.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewExport" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewExport.#ctor(VxSdk.VxNewExport!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewExport" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewExport.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewExport" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewExport">
            <summary>
Represents a new export to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExportClip.startTime">
            <summary>
The time at which the clip begins.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExportClip.endTime">
            <summary>
The time at which the clip ends.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExportClip.dataSourceId">
            <summary>
The unique identifier of the data source.
</summary>
        </member>
        <member name="F:VxSdk.VxNewExportClip.dataEncodingId">
            <summary>
The specific data encoding to export (quality, framerate, and resolution). This can be obtained from the
desired data interface of the clip. If not specified, the server shall select the data encoding.
</summary>
        </member>
        <member name="M:VxSdk.VxNewExportClip.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewExportClip.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewExportClip" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewExportClip.#ctor(VxSdk.VxNewExportClip!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewExportClip" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewExportClip.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewExportClip" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewExportClip">
            <summary>
Represents a clip that will be exported as part of a new export.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSource.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.linkedPtzInfo">
            <summary>
Provides information on any data sources that are tracking this data source. Only available if this data
source supports linked PTZ. 
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.state">
            <summary>
The current operational state of the associated device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.type">
            <summary>
The type of media this data source contains.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.capabilities">
            <summary>
List of capabilities supported by this data source, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.dataInterfaces">
            <summary>
The data interfaces available for retrieval of data from this data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.retentionLimit">
            <summary>
The maximum retention (in hours) that the system will keep recorded data for this data source. Any recorded
data that exceeds this limit will be deleted. If <see cref="F:VxSdk.IVxConfiguration.Storage.retentionLimit" /> is
also set, the lowest non-zero value will be used. A value of 0 means no retention limit will be used.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.pruningThreshold">
            <summary>
The threshold, in hours, after which recordings older than this are eligible for pruning. Any recorded media
retained longer than the threshold will be pruned as needed to free space on disk for recording. If set,
this value overrides the threshold in IVxConfiguration::Storage. This is only applicable when the data
source type is video. A value of 0 will disable pruning.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.number">
            <summary>
The number used to designate the data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.linkedPtzInfoSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDataSource.linkedPtzInfo" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.index">
            <summary>
The zero-based index (per host device) indicating the "position" of the data source (per data source type)
within the host device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.dataInterfaceSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDataSource.dataInterfaces" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.capabilitiesSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDataSource.capabilities" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.sourceEndpoint">
            <summary>
The source URI of the data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.snapshotUri">
            <summary>
The URI to retrieve the current live frame.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.name">
            <summary>
The friendly name of this data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.ip">
            <summary>
The IP of this data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.id">
            <summary>
The unique identifier of the data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.encoding">
            <summary>
The encoding of the data source. Usually only provided by metadata sources.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.hasRecorded">
            <summary>
Indicates whether the recorded video is available.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.hasLive">
            <summary>
Indicates whether the live stream is available.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.isRecording">
            <summary>
Indicates whether the data source is currently recording.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.isManuallyRecording">
            <summary>
Indicates whether the data source is currently being manually recorded (by one or more data storage).
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.isEnabled">
            <summary>
Indicates whether this data source is currently enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSource.isCapturing">
            <summary>
Indicates whether this data source is currently being captured by a recorder.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSource.SetRetentionLimit(System.Int32)">
            <summary>
Sets the retentionLimit property.
</summary>
            <param name="retentionLimit">The new retention limit value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.SetPruningThreshold(System.Int32)">
            <summary>
Sets the pruningThreshold property.
</summary>
            <param name="pruningThreshold">The new threshold, in hours.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.SetNumber(System.Int32)">
            <summary>
Sets the number property.
</summary>
            <param name="number">The new number value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetVideoRelations(VxSdk.VxCollection&lt;VxSdk.IVxResourceRel****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all possible video resource relations for this data source (both linked and non-linked). Each linked
resource shall be considered to be associated to this data source while non-linked resources shall not be
(they are available to be associated).
<para>Available filters: kAdvancedQuery, kAllTags, kAllPrivateTags, kLinked.</para></summary>
            <param name="resourceRelCollection">A <see cref="T:VxSdk.VxCollection" /> of related resources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetVideoEncodingsConfiguration(VxSdk.VxCollection&lt;VxSdk.IVxDataSourceConfig.VideoEncoding****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the video encoding configurations for this data source, if supported.
</summary>
            <param name="videoEncodingCollection">A <see cref="T:VxSdk.VxCollection" /> of the video encoding configurations.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetTags(VxSdk.VxCollection&lt;VxSdk.IVxTag****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the tags associated with this data source.
<para>
Available filters: kAdvancedQuery, kFolder, kId, kModifiedSince, kName, kOwned, kOwner, kParentId,
kResourceId, kResourceType.
</para></summary>
            <param name="tagCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated tags.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetSmartCompressionConfiguration(VxSdk.IVxDataSourceConfig.SmartCompression**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the smart compression configuration for this data source, if supported.
</summary>
            <param name="smartCompressionConfig">The smart compression configuration if supported, otherwise <c>nullptr</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetRtspEndpoint(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the RTSP stream endpoint URI.
</summary>
            <param name="endpoint">The RTSP endpoint.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetPtzController(VxSdk.IVxPtzController**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxPtzController" /> associated with this data source.
</summary>
            <param name="ptzController">
                <c>nullptr</c> if PTZ is not supported, else the <see cref="T:VxSdk.IVxPtzController" />.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetPtzConfiguration(VxSdk.IVxDataSourceConfig.Ptz**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the PTZ configuration for this data source, if supported.
</summary>
            <param name="ptzConfig">The PTZ configuration if supported, otherwise <c>nullptr</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetMultiviewInfo(VxSdk.VxCollection&lt;VxSdk.IVxUserInfo****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the multiple viewer information for this data source. This information contains details on the
current viewers of this data source.
</summary>
            <param name="userInfoCollection">
A <see cref="T:VxSdk.VxCollection" /> of user information for all viewers of this data source.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetMotionConfiguration(VxSdk.IVxConfiguration.Motion**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
DEPRECATED
<para>Gets the motion detection configuration for this data source, if supported.</para></summary>
            <param name="motionConfig">The motion configuration if supported, otherwise <c>nullptr</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetMotionConfiguration(VxSdk.IVxDataSourceConfig.Motion**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the motion detection configuration for this data source, if supported.
</summary>
            <param name="motionConfig">The motion configuration if supported, otherwise <c>nullptr</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetMetadataSnapshotEndpoint(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Gets the URI to the download location of a metadata "snapshot" from this data source. 
</summary>
            <param name="endpoint">The metadata snapshot endpoint.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <param name="time">The point in time of the metadata to return (defaults to the current time if not supplied).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetMetadataRelations(VxSdk.VxCollection&lt;VxSdk.IVxResourceRel****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all possible metadata resource relations for this data source (both linked and non-linked). Each
linked resource shall be considered to be associated to this data source while non-linked resources shall
not be (they are available to be associated).
<para>Available filters: kAdvancedQuery, kAllTags, kAllPrivateTags, kLinked.</para></summary>
            <param name="resourceRelCollection">A <see cref="T:VxSdk.VxCollection" /> of related resources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetMember(VxSdk.IVxMember**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxMember" /> that this data source resides in.
</summary>
            <param name="member">The <see cref="T:VxSdk.IVxMember" /> this data source resides in..</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetLineCounts(VxSdk.VxLineCountingRequest*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.VxLineCounts**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the requested line counts for this data source.
</summary>
            <param name="lineCountingRequest">The requested line counts.</param>
            <param name="lineCounts">
                <c>nullptr</c> if the request fails, else the <see cref="T:VxSdk.VxLineCounts" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDevice" /> that hosts this data source.
</summary>
            <param name="hostDevice">The host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetGaps(VxSdk.VxCollection&lt;VxSdk.IVxGap****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the gaps for this data source.
<para>Available filters: kDataStorageId, kSearchEndTime, kSearchStartTime, kStartTime.</para></summary>
            <param name="gapCollection">A <see cref="T:VxSdk.VxCollection" /> of the gaps for this data source.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetEdgeClips(VxSdk.VxCollection&lt;VxSdk.IVxClip****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the edge clips associated with this data source; may take a long time (minutes).
<para>
Available filters: kDataSourceId, kEndTime, kEvent, kFramerate, kSearchEndTime, kSearchStartTime,
kStartTime.
</para></summary>
            <param name="clipCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated edge clips.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetDataStorages(VxSdk.VxCollection&lt;VxSdk.IVxDataStorage****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data storages associated with this data source.
<para>Available filters: kAdvancedQuery, kCommissioned, kId, kModifiedSince, kName, kType.</para></summary>
            <param name="dataStorageCollection">A <see cref="T:VxSdk.VxCollection" /> of data storages.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetClips(VxSdk.VxCollection&lt;VxSdk.IVxClip****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the clips associated with this data source.
<para>
Available filters: kDataSourceId, kEndTime, kEvent, kFramerate, kSearchEndTime, kSearchStartTime,
kStartTime.
</para></summary>
            <param name="clipCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated clips.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetBookmarks(VxSdk.VxCollection&lt;VxSdk.IVxBookmark****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the bookmarks associated with this data source.
<para>
Available filters: kAdvancedQuery, kDataSourceId, kDataSourceType, kDescription, kGroupId, kId, kLocked,
kModifiedSince, kName, kSearchEndTime, kSearchStartTime, kTime.
</para></summary>
            <param name="bookmarkCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated bookmarks.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetAvailableAnalyticBehaviorTypes(VxSdk.VxAnalyticBehaviorType.Value*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the list of analytic behavior types that are supported.
</summary>
            <param name="analyticBehaviorTypes">The analytic behavior types that are supported..</param>
            <param name="size">The size of <paramref name="analyticBehaviorTypes" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetAudioRelations(VxSdk.VxCollection&lt;VxSdk.IVxResourceRel****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all possible audio resource relations for this data source (both linked and non-linked). Each linked
resource shall be considered to be associated to this data source while non-linked resources shall not be
(they are available to be associated).
<para>Available filters: kAdvancedQuery, kAllTags, kAllPrivateTags, kLinked.</para></summary>
            <param name="resourceRelCollection">A <see cref="T:VxSdk.VxCollection" /> of related resources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetAnalyticSessions(VxSdk.VxCollection&lt;VxSdk.IVxAnalyticSession****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the analytic sessions for this data source.
<para>Available filters: kAdvancedQuery, kDataSourceId, kDeviceId, kId, kModifiedSince.</para></summary>
            <param name="analyticSessionCollection">
A <see cref="T:VxSdk.VxCollection" /> of the analytic sessions for this data source.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetAnalyticConfigs(VxSdk.VxCollection&lt;VxSdk.IVxAnalyticConfig****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Get the analytic configurations for this data source.
</summary>
            <param name="analyticConfigCollection">A <see cref="T:VxSdk.VxCollection" /> of the analytic configs for this data source.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetAnalyticCapabilities(VxSdk.VxAnalyticCapability.Value*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the list of analytic capabilities that are supported.
</summary>
            <param name="analyticCapabilities">The analytic capabilities that are supported.</param>
            <param name="size">The size of <paramref name="analyticCapabilities" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.GetAllDataStorages(VxSdk.VxCollection&lt;VxSdk.IVxDataStorage****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all data storages associated with this data source; includes edge and failover data storages.
<para>Available filters: kAdvancedQuery, kCommissioned, kId, kModifiedSince, kName, kType.</para></summary>
            <param name="dataStorageCollection">A <see cref="T:VxSdk.VxCollection" /> of data storages.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.Enable">
            <summary>
Enable this data source.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling thisdata source.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.Disable">
            <summary>
Disable this data source. A disabled data source shall not expose any data interface, will not be recorded,
and will not consume any system license feature counts.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this data source.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.CreatePixelSearch(VxSdk.VxNewPixelSearch*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.IVxPixelSearch**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new pixel search for this data source.
</summary>
            <param name="newPixelSearch">The new pixel search to create.</param>
            <param name="pixelSearch">
                <c>nullptr</c> if pixel search creation fails, else the new <see cref="T:VxSdk.IVxPixelSearch" />.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.CreateMjpegDataSession(VxSdk.IVxDataSession**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Create a new MJPEG <see cref="T:VxSdk.IVxDataSession" />.
</summary>
            <param name="dataSession">
                <c>nullptr</c> if it fails, else the new MJPEG streams <see cref="T:VxSdk.IVxDataSession" />.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.CanPtz(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets a value indicating whether PTZ is enabled.
</summary>
            <param name="canPtz">
                <c>true</c> if PTZ is enabled, <c>false</c> if not.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.CanPixelSearch(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets a value indicating whether pixel search is available for this data source.
</summary>
            <param name="canPixelSearch">
                <c>true</c> if pixel search is available, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.AddAnalyticSession(VxSdk.VxNewAnalyticSession*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new analytic session.
</summary>
            <param name="newAnalyticSession">The new analytic session to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSource.AddAnalyticConfig(VxSdk.VxNewAnalyticConfig*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new analytic config.
</summary>
            <param name="newAnalyticConfig">The new analytic config to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxDataSource">
            <summary>
Represents a data producer in the system hosted by a device. Each data source provides a list of data
interfaces, which provide a particular protocol used to transmit and control the data produced by this data
source.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.stream">
            <summary>
The ordinal source of the stream: primary, secondary, tertiary, etc.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.format">
            <summary>
The media stream encoding format.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.resolution">
            <summary>
The resolution of the stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.configurationOptions">
            <summary>
A list of the valid video encoding options for each format. If the format does not contain any options
you must first switch to that format to determine them.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.profile">
            <summary>
The encoding profile for the format.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.multicastPort">
            <summary>
The port used for multicast streaming.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.gop">
            <summary>
The GOP size of the stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.configurationOptionsSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDataSourceConfig.VideoEncoding.configurationOptions" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.bitrate">
            <summary>
The bitrate of the stream (in bps).
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.framerate">
            <summary>
The framerate of the stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.rateControl">
            <summary>
The method used to control the bitrate of the stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.multicastIp">
            <summary>
The IP used for multicast streaming.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.VideoEncoding.name">
            <summary>
The friendly name for this stream.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetResolution(VxSdk.VxResolution*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the resolution property.
</summary>
            <param name="resolution">The new resolution value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetRateControl(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the rateControl property.
</summary>
            <param name="rateControl">The new rate control value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetProfile(VxSdk.VxEncoderProfile.Value)">
            <summary>
Sets the profile property.
</summary>
            <param name="profile">The new profile value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetMulticastPort(System.Int32)">
            <summary>
Sets the multicastPort property.
</summary>
            <param name="multicastPort">The new multicast port value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetMulticastIp(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the multicastIp property.
</summary>
            <param name="multicastIp">The new multicast IP value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetGop(System.Int32)">
            <summary>
Sets the gop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetFramerate(System.Single)">
            <summary>
Sets the framerate property.
</summary>
            <param name="framerate">The new framerate value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetFormat(VxSdk.VxStreamFormat.Value)">
            <summary>
Sets the format property.
</summary>
            <param name="format">The new format value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.SetBitrate(System.Int32)">
            <summary>
Sets the bitrate property.
</summary>
            <param name="bitrate">The new bitrate value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.VideoEncoding.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDataSourceConfig.VideoEncoding">
            <summary>
Represents a configuration of a video encoding.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.level">
            <summary>
The Smart Compression level.  Offers a trade-off between image quality and compression efficiency.
When not disabled, dynamic GOP can be enabled for each stream.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.tertiaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the tertiary (3rd) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.septenaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the septenary (7th) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.senaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the senary (6th) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.secondaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the secondary (2nd) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.quinaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the quinary (5th) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.quaternaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the quaternary (4th) stream and the value is the maximum number
of frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.primaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the primary (1st) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.octonaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the octonary (8th) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.nonaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the nonary (9th) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.SmartCompression.denaryDynamicGop">
            <summary>
If not 0, dynamic GOP is enabled for the denary (10th) stream and the value is the maximum number of
frames between I-frames.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetTertiaryDynamicGop(System.Int32)">
            <summary>
Sets the tertiaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetSeptenaryDynamicGop(System.Int32)">
            <summary>
Sets the septenaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetSenaryDynamicGop(System.Int32)">
            <summary>
Sets the senaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetSecondaryDynamicGop(System.Int32)">
            <summary>
Sets the secondaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetQuinaryDynamicGop(System.Int32)">
            <summary>
Sets the quinaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetQuaternaryDynamicGop(System.Int32)">
            <summary>
Sets the quaternaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetPrimaryDynamicGop(System.Int32)">
            <summary>
Sets the primaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetOctonaryDynamicGop(System.Int32)">
            <summary>
Sets the octonaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetNonaryDynamicGop(System.Int32)">
            <summary>
Sets the nonaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetLevel(VxSdk.VxSmartCompressionLevel.Value)">
            <summary>
Sets the level property.
</summary>
            <param name="level">The new Smart Compression level value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.SetDenaryDynamicGop(System.Int32)">
            <summary>
Sets the denaryDynamicGop property.
</summary>
            <param name="gop">The new gop value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.SmartCompression.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDataSourceConfig.SmartCompression">
            <summary>
Represents a configuration of Smart Compression for a particular video data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Ptz.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.Ptz.protocol">
            <summary>
The protocol used by the encoder device to PTZ this channel.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Ptz.SetProtocol(VxSdk.VxPtzControlProtocol.Value)">
            <summary>
Sets the protocol property.
</summary>
            <param name="protocol">The new PTZ protocol value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Ptz.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Ptz.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDataSourceConfig.Ptz">
            <summary>
Represents a configuration of PTZ for a particular video data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.Motion.mode">
            <summary>
The motion detection mode.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.Motion.threshold">
            <summary>
The amount of area that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less area required to trigger motion).
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSourceConfig.Motion.sensitivity">
            <summary>
The amount of change that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less change required to trigger motion).
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.SetThreshold(System.Int32)">
            <summary>
Sets the threshold property.
</summary>
            <param name="threshold">The new threshold value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.SetSensitivity(System.Int32)">
            <summary>
Sets the sensitivity property.
</summary>
            <param name="sensitivity">The new sensitivity value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.SetMode(VxSdk.VxMotionMode.Value)">
            <summary>
Sets the mode property.
</summary>
            <param name="mode">The new mode value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSourceConfig.Motion.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDataSourceConfig.Motion">
            <summary>
Represents a motion detection configuration.
</summary>
        </member>
        <member name="T:VxSdk.IVxDataSourceConfig">
            <summary>
Represents the configuration of a data source.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.format">
            <summary>
The media stream encoding format that these options/limits apply to.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.resolutions">
            <summary>
The list of resolutions that are available for the stream.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.profiles">
            <summary>
The list of encoding profiles that are available for the stream.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.resolutionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxVideoEncodingOption.resolutions" />.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.rateControlsSize">
            <summary>
The size of <see cref="F:VxSdk.VxVideoEncodingOption.rateControls" />.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.profilesSize">
            <summary>
The size of <see cref="F:VxSdk.VxVideoEncodingOption.profiles" />.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.minGop">
            <summary>
The minimum GOP size that can be set for the stream.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.minBitrate">
            <summary>
The minimum bitrate that can be set for the stream (in bps).
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.maxGop">
            <summary>
The maximum GOP size that can be set for the stream.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.maxBitrate">
            <summary>
The maximum bitrate that can be set for the stream (in bps).
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.frameratesSize">
            <summary>
The size of <see cref="F:VxSdk.VxVideoEncodingOption.framerates" />.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.framerates">
            <summary>
The list of valid framerates.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.rateControls">
            <summary>
The list of available methods that control the bitrate of the stream.
</summary>
        </member>
        <member name="F:VxSdk.VxVideoEncodingOption.hasOptions">
            <summary>
Indicates whether there are any video encoding options available. If <c>true</c> you must first switch to
the <see cref="F:VxSdk.VxVideoEncodingOption.format" /> to determine them.
</summary>
        </member>
        <member name="M:VxSdk.VxVideoEncodingOption.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxVideoEncodingOption.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxVideoEncodingOption" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxVideoEncodingOption.#ctor(VxSdk.VxVideoEncodingOption!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxVideoEncodingOption" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxVideoEncodingOption.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxVideoEncodingOption" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxVideoEncodingOption">
            <summary>
Represents the valid video encoding options/limits for the specified format.
</summary>
        </member>
        <member name="M:VxSdk.IVxBookmark.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmark.time">
            <summary>
The time at which the point of interest occurred.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmark.name">
            <summary>
The friendly name of the bookmark.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmark.id">
            <summary>
The unique identifier of the bookmark.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmark.groupId">
            <summary>
The unique identifier of the associated bookmark group (if any).
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmark.description">
            <summary>
The friendly description of the bookmark.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmark.dataSourceId">
            <summary>
The unique identifier of the associated data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxBookmark.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.SetDescription(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the description property.
</summary>
            <param name="description">The new description value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.GetLock(VxSdk.IVxBookmarkLock**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the lock configuration for this bookmark.
</summary>
            <param name="bookmarkLock">The lock configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.GetDataSource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data source associated with this bookmark.
</summary>
            <param name="dataSource">The associated data source.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.DeleteBookmark">
            <summary>
Delete this bookmark from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the bookmark.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmark.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxBookmark">
            <summary>
Represents a point in time of interest with reference to a particular data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxGap.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.reasonData">
            <summary>
Optional additional reason data.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.reason">
            <summary>
The reason for this gap.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.gapFillerStatus">
            <summary>
The status of filling this gap.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.reasonDataSize">
            <summary>
The size of <see cref="F:VxSdk.IVxGap.reasonData" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.startTime">
            <summary>
The start time of the gap.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.endTime">
            <summary>
The end time of the gap.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.dataStorageId">
            <summary>
The unique identifier of the data storage with the gap.
</summary>
        </member>
        <member name="F:VxSdk.IVxGap.dataSourceId">
            <summary>
The unique identifier of the gapped data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxGap.GetDataStorage(VxSdk.IVxDataStorage**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data storage with the gap.
</summary>
            <param name="dataStorage">The data storage with the gap.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxGap.GetDataSource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data source associated with this gap.
</summary>
            <param name="dataSource">The associated data source.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxGap.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxGap">
            <summary>
Represents a span of time that a clip should exist for a particular data source on a particular data storage
but for some reason the clip does not exist. Not all instances of gaps may be detectable by the system and thus
 may not be reported.
</summary>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmarkLock.startTime">
            <summary>
The time at which the bookmark lock begins. Must be before endTime.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmarkLock.endTime">
            <summary>
The time at which the bookmark lock ends. Must be after startTime.
</summary>
        </member>
        <member name="F:VxSdk.IVxBookmarkLock.isEnabled">
            <summary>
Indicates whether or not the bookmark lock is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.SetStartTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the startTime property.
</summary>
            <param name="startTime">The new startTime value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.SetIsEnabled(System.Boolean)">
            <summary>
Sets the isEnabled property.
</summary>
            <param name="isEnabled">The new isEnabled value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.SetEndTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the endTime property.
</summary>
            <param name="endTime">The new endTime value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxBookmarkLock.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxBookmarkLock">
            <summary>
Represents the lock configuration of a bookmark. An enabled lock will prevent the media it locks from being
garbage collected on recorders.
</summary>
        </member>
        <member name="M:VxSdk.IVxTag.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxTag.parentId">
            <summary>
The unique identifier of the parent tag if this tag is a folder tag and is not a top-level folder tag.
</summary>
        </member>
        <member name="F:VxSdk.IVxTag.owner">
            <summary>
The name of the user that owns the tag if private. If not present, indicates that the tag is not owned
(public).
</summary>
        </member>
        <member name="F:VxSdk.IVxTag.name">
            <summary>
The friendly name of the tag.
</summary>
        </member>
        <member name="F:VxSdk.IVxTag.id">
            <summary>
The unique identifier of the tag.
</summary>
        </member>
        <member name="F:VxSdk.IVxTag.isFolder">
            <summary>
Indicates whether this tag is part of a folder-like hierarchy where it has a reference to a parent tag or
is a top-level folder tag.
</summary>
        </member>
        <member name="M:VxSdk.IVxTag.UnLink(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a device association from this tag.
</summary>
            <param name="device">The device to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.UnLink(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Removes a data source association from this tag.
</summary>
            <param name="dataSource">The data source to remove association with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.SetParentId(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the unique identifier of the tag that is the parent of this tag. Leave blank to remove the current
parent tag.
</summary>
            <param name="parentId">The unique identifier of the parent tag, if any.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the parent tag.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.Merge(VxSdk.IVxTag*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Merges this tag into the given tag. All links associated with this tag will be re-associated with the given
tag; this tag will then be deleted.
</summary>
            <param name="tag">The tag to merge into.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.Link(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a device with this tag. If the device is deleted, the association with this tag shall also be
removed.
</summary>
            <param name="device">The device to associate the tag with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.Link(VxSdk.IVxDataSource*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Associates a data source with this tag. If the data source is deleted, the association with this tag shall
also be removed.
</summary>
            <param name="dataSource">The data source to associate the tag with.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.GetParent(VxSdk.IVxTag**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxTag" /> that is the parent this tag, if any.
</summary>
            <param name="tag">The <see cref="T:VxSdk.IVxTag" /> that is the parent this tag.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.GetOwner(VxSdk.IVxUser**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxUser" /> that owns this tag, if any.
</summary>
            <param name="user">The <see cref="T:VxSdk.IVxUser" /> that owns this tag.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDevice****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices associated with this tag.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="deviceCollection">The devices associated with this tag.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.GetLinks(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources associated with this tag.
<para>Available filters: kAdvancedQuery, kModifiedSince.</para></summary>
            <param name="dataSourceCollection">The data sources associated with this tag.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.DeleteTag">
            <summary>
Deletes this tag from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the tag.</returns>
        </member>
        <member name="M:VxSdk.IVxTag.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxTag">
            <summary>
Represents a non-hierarchical identifier typically associated with one or more resources (i.e. device or data
source). A tag helps to describe a resource and allows it to be found more efficiently.
</summary>
        </member>
        <member name="M:VxSdk.IVxUserInfo.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.phoneNumbers">
            <summary>
The telephone number(s) for the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.phoneNumberSize">
            <summary>
The size of <see cref="F:VxSdk.IVxUserInfo.phoneNumbers" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.note">
            <summary>
Supplemental information about the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.name">
            <summary>
Gets the friendly name, within the domain, of the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.lastName">
            <summary>
The last name of the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.firstName">
            <summary>
The first name of the user.
</summary>
        </member>
        <member name="F:VxSdk.IVxUserInfo.employeeId">
            <summary>
The employee identifier associated with the user.
</summary>
        </member>
        <member name="M:VxSdk.IVxUserInfo.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxUserInfo">
            <summary>
Represents general information about a user.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataStorage.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataStorage.type">
            <summary>
The data storage type.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataStorage.name">
            <summary>
The friendly name of the data storage.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataStorage.id">
            <summary>
The unique identifier of the data storage.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataStorage.isFailover">
            <summary>
Indicates whether the data storage is configured as a failover unit.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataStorage.UnassignDevice(VxSdk.IVxDevice*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Unassign a device from this data storage.
</summary>
            <param name="device">The device to remove from the data storage.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.GetStorageConfiguration(VxSdk.IVxConfiguration.Storage**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the storage configuration.
</summary>
            <param name="storageConfig">The storage configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.GetRetentions(VxSdk.VxCollection&lt;VxSdk.VxRetention****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the resource retention information for this data storage.
<para>Available filters: kId, kResourceId.</para></summary>
            <param name="retentionCollection">A <see cref="T:VxSdk.VxCollection" /> of retention information.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the host device of this data storage.
</summary>
            <param name="hostDevice">The host device of this data storage.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.GetDeviceAssignments(VxSdk.VxCollection&lt;VxSdk.IVxDeviceAssignment****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the devices assigned to this data storage.
<para>Available filters: kDataSourceId, kDataStorageId, kDeviceId, kModifiedSince.</para></summary>
            <param name="deviceAssignmentCollection">A <see cref="T:VxSdk.VxCollection" /> of the assigned devices.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.GetDataSources(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources assigned to this data storage.
<para>
Available filters: kAdvancedQuery, kAllTags, kCapturing, kCommissioned, kEnabled, kEncoding, kHasFolderTags,
kId, kIp, kManualRecording, kModifiedSince, kName, kNumber, kRecording, kState, kType, kUnassigned.
</para></summary>
            <param name="dataSourceCollection">A <see cref="T:VxSdk.VxCollection" /> of the assigned data sources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.AssignDevice(VxSdk.VxNewDeviceAssignment*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Assign a device to this data storage to be managed and recorded based on its configuration.
</summary>
            <param name="newDeviceAssignment">The device assignment to add to the data storage.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataStorage.AddClip(VxSdk.VxNewClip*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Save the data specified in the new clip to this data storage. Once saved, the data will be represented as a
new clip (not immediately available). Data that is already saved will not be retrieved again. If there is
overlap with data that is already saved, only the new data will be saved.
</summary>
            <param name="newClip">The new clip to add to the data storage.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxDataStorage">
            <summary>
Represents a data storage provider in the system (e.g. NSM5200 storage pool or VideoXpert Storage) hosted by a
system device. The data storage can be directed to store media produced by a device by assigning the device to
it.
</summary>
        </member>
        <member name="F:VxSdk.VxRetention.resourceRef">
            <summary>
The reference to the resource.
</summary>
        </member>
        <member name="F:VxSdk.VxRetention.oldestRecording">
            <summary>
The time of the oldest recording for the resource.
</summary>
        </member>
        <member name="M:VxSdk.VxRetention.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxRetention.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxRetention" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxRetention.#ctor(VxSdk.VxRetention!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRetention" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxRetention.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRetention" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxRetention">
            <summary>
Represents retention information for a referenced resource.
</summary>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDeviceAssignment.volumeGroupId">
            <summary>
The unique identifier of the volume group to use for this device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDeviceAssignment.id">
            <summary>
The unique identifier of the device assignment.
</summary>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.SetVolumeGroupId(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the unique identifier of the volume group to use for this device. If not provided, a volume group will
be selected automatically.
</summary>
            <param name="volumeGroupId">The unique identifier.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.GetDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the assigned <see cref="T:VxSdk.IVxDevice" />.
</summary>
            <param name="device">The assigned <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.GetDataStorage(VxSdk.IVxDataStorage**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDataStorage" /> that this device assignment is for.
</summary>
            <param name="dataStorage">The <see cref="T:VxSdk.IVxDataStorage" /> for this device assignment.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.GetDataSources(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources assigned by this device assignment.
<para>
Available filters: kAdvancedQuery, kAllTags, kCapturing, kCommissioned, kEnabled, kEncoding, kHasFolderTags,
kId, kIp, kManualRecording, kModifiedSince, kName, kNumber, kRecording, kState, kType, kUnassigned.
</para></summary>
            <param name="dataSourceCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated data sources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDeviceAssignment.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDeviceAssignment">
            <summary>
Represents a device assignment on a data storage.
</summary>
        </member>
        <member name="M:VxSdk.IVxDriver.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDriver.version">
            <summary>
The driver version number.
</summary>
        </member>
        <member name="F:VxSdk.IVxDriver.vendor">
            <summary>
The name of the vendor that manufactured the device that the driver is for.
</summary>
        </member>
        <member name="F:VxSdk.IVxDriver.type">
            <summary>
The driver type identifier.
</summary>
        </member>
        <member name="F:VxSdk.IVxDriver.name">
            <summary>
The friendly name of the driver.
</summary>
        </member>
        <member name="M:VxSdk.IVxDriver.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDriver.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDriver">
            <summary>
Represents a device communication driver.
</summary>
        </member>
        <member name="M:VxSdk.IVxDevice.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.initializationStatusReason">
            <summary>
The error status reason when device initialization failed.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.type">
            <summary>
The type of device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.status">
            <summary>
The current device status.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.state">
            <summary>
The current operational state of the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.statusSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDevice.status" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.port">
            <summary>
The host port.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.licensedFeaturesSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDevice.licensedFeatures" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.licensableFeaturesSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDevice.licensableFeatures" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.endpointsSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDevice.endpoints" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.licensedFeatures">
            <summary>
List of supported features that are currently licensed for use by this device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.licensableFeatures">
            <summary>
List of supported features that may be licensed for use by this device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.endpoints">
            <summary>
List of source URIs that the device will support.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.webappUrl">
            <summary>
The product webapp URL.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.virtualIp">
            <summary>
The virtual IP of the device, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.version">
            <summary>
The current version of software running on the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.vendor">
            <summary>
The device vendor, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.username">
            <summary>
The account username used to communicate with the device, if any.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.serial">
            <summary>
The serial number of the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.name">
            <summary>
The friendly name of the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.model">
            <summary>
The device model name.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.macAddress">
            <summary>
The device MAC address.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.ip">
            <summary>
The IP of the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.id">
            <summary>
The unique identifier of the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.hostname">
            <summary>
Hostname of the device. If set, takes precedence over the ip. The combination of hostname, ip, port and
type must be unique.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.driverTypeId">
            <summary>
The driver type identifier used for device communication.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.driverDeviceId">
            <summary>
The driver device identifier.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.discovered">
            <summary>
The time when this device was discovered.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.isLicenseRequired">
            <summary>
Indicates whether a license is required for commissioning the device.
</summary>
        </member>
        <member name="F:VxSdk.IVxDevice.isCommissioned">
            <summary>
Indicates whether the device is commissioned.
</summary>
        </member>
        <member name="M:VxSdk.IVxDevice.UpdateSoftware(VxSdk.IVxFile*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Updates the software running on the device.
</summary>
            <param name="updateFile">The software update file.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of updating the software.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.TriggerRefresh">
            <summary>
Triggers a refresh of this <see cref="T:VxSdk.IVxDevice" /> on the VideoXpert system; updating it
by retrieving the latest information directly from the device.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing the <see cref="T:VxSdk.IVxDevice" />.
</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.Silence">
            <summary>
Silences all audible alarms on the device.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetVersion(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the version property.
</summary>
            <param name="version">The new version value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the username property.
</summary>
            <param name="username">The new username value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the password property.
</summary>
            <param name="password">The new password value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetIp(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the ip property.
</summary>
            <param name="ip">The new ip value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetHostname(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the hostname property. If set, takes precedence over the ip.
</summary>
            <param name="hostname">The new hostname value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetEndpoints(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32)">
            <summary>
Sets the endpoints property, which is a list of source URIs that the device will support.
</summary>
            <param name="endpoints">The source URIs.</param>
            <param name="endpointsSize"> The size of <see cref="F:VxSdk.IVxDevice.endpoints" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetDriverTypeId(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the driver type identifier property.
</summary>
            <param name="driverTypeId">The new driver type identifier value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.SetDevicePort(System.Int32)">
            <summary>
Sets the port property.
</summary>
            <param name="port">The new port value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.RestoreBackup(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Restores a backup of the device configuration.
</summary>
            <param name="backupPath">The local path to the backup file.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.Replace(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Replace an offline device with a new device. Not available for all types of devices.
</summary>
            <param name="replacementDeviceId">The ID of the replacement device</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of replacing this device.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.HasDiagnostics(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets a value indicating whether this device provides any diagnostic information.
</summary>
            <param name="hasDiagnostics">
                <c>true</c> if this device provides diagnostic information, <c>false</c> if not.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetTimeConfiguration(VxSdk.IVxConfiguration.Time**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the time configuration.
</summary>
            <param name="timeConfig">The time configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetThermalEtdConfiguration(VxSdk.IVxConfiguration.ThermalEtd**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the thermal elevated temperature detection configuration.
</summary>
            <param name="thermalEtdConfig">The thermal elevated temperature detection configuration, if available.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetRelayOutputs(VxSdk.VxCollection&lt;VxSdk.IVxRelayOutput****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the relay outputs hosted by this device.
<para>Available filters: kAdvancedQuery, kEnabled, kId, kModifiedSince, kName, kState.</para></summary>
            <param name="relayOutputCollection">
A <see cref="T:VxSdk.VxCollection" /> of the relay outputs hosted by this device.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetMonitors(VxSdk.VxCollection&lt;VxSdk.IVxMonitor****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the monitors residing on the device.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kNumber.</para></summary>
            <param name="monitorCollection">
A <see cref="T:VxSdk.VxCollection" /> of the monitors residing on the device.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetLogs(VxSdk.VxCollection&lt;VxSdk.IVxLog****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the logs for this device.
<para>Available filters: kInitiated, kModifiedSince.</para></summary>
            <param name="logCollection">A <see cref="T:VxSdk.VxCollection" /> of the logs present on this device.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetDiagnostics(VxSdk.VxDiagnostics**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the diagnostic information for this device.
</summary>
            <param name="diagnostics">The diagnostic information.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetDeviceAssignments(VxSdk.VxCollection&lt;VxSdk.IVxDeviceAssignment****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the assignments to a data storage for this device.
<para>Available filters: kDataSourceId, kDataStorageId, kDeviceId, kModifiedSince.</para></summary>
            <param name="deviceAssignmentCollection">A <see cref="T:VxSdk.VxCollection" /> of the device assignments.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetDatabaseBackups(VxSdk.IVxDbBackups**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the database backup information for this device, if any.
</summary>
            <param name="databaseBackups">
The <see cref="T:VxSdk.IVxDbBackups" /> for the device if available, otherwise <c>nullptr</c>.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetDataStorage(VxSdk.IVxDataStorage**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDataStorage" /> hosted by this device, if any.
</summary>
            <param name="dataStorage">
The <see cref="T:VxSdk.IVxDataStorage" /> hosted by this device if available, otherwise <c>nullptr</c>.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetDataSources(VxSdk.VxCollection&lt;VxSdk.IVxDataSource****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data sources hosted by this device.
<para>
Available filters: kAdvancedQuery, kAllTags, kCapturing, kCommissioned, kEnabled, kEncoding, kHasFolderTags,
kId, kIp, kManualRecording, kModifiedSince, kName, kNumber, kRecording, kState, kType, kUnassigned.
</para></summary>
            <param name="dataSourceCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated data sources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetBackup(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets a backup of the device configuration.
</summary>
            <param name="endpoint">The backup endpoint.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetAuthenticationConfiguration(VxSdk.IVxConfiguration.Auth**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the authentication configuration.
</summary>
            <param name="authConfig">The authentication configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetAnalyticSessions(VxSdk.VxCollection&lt;VxSdk.IVxAnalyticSession****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the analytic sessions hosted by this device.
<para>Available filters: kAdvancedQuery, kDataSourceId, kDeviceId, kId, kModifiedSince.</para></summary>
            <param name="analyticSessionCollection">
A <see cref="T:VxSdk.VxCollection" /> of the analytic sessions hosted by this device.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetAlarmInputs(VxSdk.VxCollection&lt;VxSdk.IVxAlarmInput****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the alarm inputs hosted by this device.
<para>Available filters: kAdvancedQuery, kId, kModifiedSince, kName, kState.</para></summary>
            <param name="alarmInputCollection">
A <see cref="T:VxSdk.VxCollection" /> of the alarm inputs hosted by this device.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.GetAccessPoints(VxSdk.VxCollection&lt;VxSdk.IVxAccessPoint****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the access points residing on the device.
<para>Available filters: kAdvancedQuery, kHasStatus, kId, kModifiedSince, kName, kState, kType.</para></summary>
            <param name="accessPointCollection">
A <see cref="T:VxSdk.VxCollection" /> of the access points residing on the device.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.DeleteDevice">
            <summary>
Remove the device and its hosted data sources and data storages. If the device is assigned to a data
storage, it shall be unassigned.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.CreateLog">
            <summary>
Creates a new log, the contents of which shall be determined by the server by default.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.CanCreateLogs(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets a value indicating whether this device is capable of generating logs.
</summary>
            <param name="canCreateLogs">
                <c>true</c> if this device is capable of generating logs, <c>false</c> if not.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDevice.AddAnalyticSession(VxSdk.VxNewAnalyticSession*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Adds a new analytic session.
</summary>
            <param name="newAnalyticSession">The new analytic session to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxDevice">
            <summary>
Represents a particular physical device in the system.
</summary>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticSession.source">
            <summary>
The RTSP URI to use as the source for the analytic session.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticSession.id">
            <summary>
The unique identifier of the analytic session.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticSession.dataEncodingId">
            <summary>
The unique identifier specifying which data encoding to use as a source.
</summary>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.SetSource(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the RTSP URI to use as the source for the analytic session.
</summary>
            <param name="source">The new source URI value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.SetDataEncodingId(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the unique identifier specifying which data encoding to use as a source. This value can be used instead
of <see cref="F:VxSdk.IVxAnalyticSession.source" /> to determine which stream to use.
</summary>
            <param name="dataEncodingId">The new dataEncodingId value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the the associated host <see cref="T:VxSdk.IVxDevice" />.
</summary>
            <param name="hostDevice">The associated host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.GetDataSource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the the associated video <see cref="T:VxSdk.IVxDataSource" />.
</summary>
            <param name="dataSource">The associated video <see cref="T:VxSdk.IVxDataSource" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.GetAnalyticConfig(VxSdk.IVxAnalyticConfig**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxAnalyticConfig" /> for this session.
</summary>
            <param name="analyticConfig">The <see cref="T:VxSdk.IVxAnalyticConfig" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.DeleteAnalyticSession">
            <summary>
Delete this analytic session.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the analytic session.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticSession.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxAnalyticSession">
            <summary>
Represents an analytic session for a single video data source on an analytic server.
</summary>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticConfig.size">
            <summary>
Specifies the resolution of the grid used for all AnalyticBehavior data.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticConfig.analyticBehaviors">
            <summary>
The associated analytic behaviors for this config.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticConfig.analyticBehaviorSize">
            <summary>
The size of <see cref="F:VxSdk.IVxAnalyticConfig.analyticBehaviors" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticConfig.minConfidence">
            <summary>
Defines the minimum confidence filtering value for detected objects 
in a video scene. Minimum confidence is defined as percentage of confidence 
represented as a decimal. For example, 0.0 = 0%, and 1.0 = 100%. Objects that 
have a detected confidence value less than the minimum will not be processed 
by the associated list of AnalyticBehavior.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticConfig.ptzPresetName">
            <summary>
Specifies the name of the PtzPreset that this configuration relates to. 
PTZ cameras supporting analytics can only be configured on PTZ presets.
</summary>
        </member>
        <member name="F:VxSdk.IVxAnalyticConfig.id">
            <summary>
The unique identifier of the analytic configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.SetSize(VxSdk.VxResolution*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the size property.
</summary>
            <param name="size">The new size value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.SetPtzPresetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the ptzPresetName property.
</summary>
            <param name="ptzPresetName">The new ptzPresetName value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.SetMinConfidence(System.Single)">
            <summary>
Sets the minConfidence property.
</summary>
            <param name="minConfidence">The new minConfidence value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.DeleteAnalyticConfig">
            <summary>
Delete this analytic config.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the analytic config.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxAnalyticConfig.AddAnalyticBehavior(VxSdk.VxNewAnalyticBehavior*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new analytic behavior.
</summary>
            <param name="newAnalyticBehavior">The new analytic behavior to be added.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxAnalyticConfig">
            <summary>
Represents a specific analytic configuration for a data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxRelayOutput.state">
            <summary>
The current state of the relay output.
</summary>
        </member>
        <member name="F:VxSdk.IVxRelayOutput.name">
            <summary>
The friendly name of the relay output.
</summary>
        </member>
        <member name="F:VxSdk.IVxRelayOutput.id">
            <summary>
The unique identifier of the relay output.
</summary>
        </member>
        <member name="F:VxSdk.IVxRelayOutput.description">
            <summary>
The friendly description of the relay output.
</summary>
        </member>
        <member name="F:VxSdk.IVxRelayOutput.isEnabled">
            <summary>
Indicates whether or not the relay output is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.SetDescription(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the description property.
</summary>
            <param name="description">The new description value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDevice" /> that hosts this relay output.
</summary>
            <param name="hostDevice">The host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Enable">
            <summary>
Enable this relay output.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling this relay output.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Disable">
            <summary>
Disable this relay output.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this relay output.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Deactivate">
            <summary>
Deactivate this relay output.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deactivating this relay output.</returns>
        </member>
        <member name="M:VxSdk.IVxRelayOutput.Activate">
            <summary>
Activate this relay output.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of activating this relay output.</returns>
        </member>
        <member name="T:VxSdk.IVxRelayOutput">
            <summary>
Represents a physical relay output.
</summary>
        </member>
        <member name="M:VxSdk.IVxMonitor.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.layout">
            <summary>
The cell grid layout.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.syncSpeed">
            <summary>
The play speed of the display data.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.yResolution">
            <summary>
The vertical resolution.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.xResolution">
            <summary>
The horizontal resolution.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.number">
            <summary>
The number used to designate the monitor.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.maximizedCell">
            <summary>
The index of the full screen monitor cell (-1 if no cells are maximized).
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.syncTimeAnchor">
            <summary>
The wall clock time at which the data playback should begin.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.syncTime">
            <summary>
The time at which the data should initially seek to (does not track time as the data plays).
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.name">
            <summary>
The friendly name of this monitor.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitor.id">
            <summary>
The unique identifier of the monitor.
</summary>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetSyncTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the time to seek to for all synced cells on the monitor. A value of <c>nullptr</c> will set the
streams to live.
</summary>
            <param name="syncTime">The time to seek to, <c>nullptr</c> for live.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetSyncSpeed(System.Single)">
            <summary>
Sets the play speed of the display data. Negative values indicate reverse speeds while positive values
indicate forward speeds (1 is normal speed). A value of 0 will pause the data playback.
</summary>
            <param name="syncSpeed">The sync playback speed.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetResolutionY(System.Int32)">
            <summary>
Sets the yResolution property.
</summary>
            <param name="yResolution">The new yResolution value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetResolutionX(System.Int32)">
            <summary>
Sets the xResolution property.
</summary>
            <param name="xResolution">The new xResolution value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetResolution(System.Int32,System.Int32)">
            <summary>
Sets the xResolution and yResolution properties.
</summary>
            <param name="xResolution">The new xResolution value.</param>
            <param name="yResolution">The new yResolution value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the properties.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetNumber(System.Int32)">
            <summary>
Sets the number property.
</summary>
            <param name="number">The new number value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetMaximizedCell(System.Int32)">
            <summary>
Sets the maximizedCell property.
</summary>
            <param name="cellIndex">The index of the cell to maximize; -1 to clear the current maximized cell.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.SetLayout(VxSdk.VxCellLayout.Value)">
            <summary>
Sets the layout property.
</summary>
            <param name="layout">The new layout value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.RemoveMonitor">
            <summary>
Deletes this monitor from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the monitor.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.GetMonitorCells(VxSdk.VxCollection&lt;VxSdk.IVxMonitorCell****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the cells currently active on this monitor.
</summary>
            <param name="cellCollection">A <see cref="T:VxSdk.VxCollection" /> of the active monitor cells.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the host device of this monitor.
</summary>
            <param name="hostDevice">The host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.GetAvailableLayouts(VxSdk.VxCollection&lt;VxSdk.VxCellLayout.Value**&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the layouts available for this monitor.
</summary>
            <param name="layoutCollection">A <see cref="T:VxSdk.VxCollection" /> of the available layouts.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitor.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxMonitor">
            <summary>
Represents a display for view data (typically video).
</summary>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.rotation">
            <summary>
The rotation applied to the video.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.z">
            <summary>
The Z location of the immersive position.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.y">
            <summary>
The Y location of the crop bounds or immersive position.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.x">
            <summary>
The X location of the crop bounds or immersive position.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.index">
            <summary>
The unique index of the cell based on its position within the current layout.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.speed">
            <summary>
The play speed of the display data.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.cropWidth">
            <summary>
The width of the crop bounds expressed as a percentage (0-1).
(e.g. 0.5 for 50% of the video frame width).
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.cropHeight">
            <summary>
The height of the crop bounds expressed as a percentage (0-1).
(e.g. 0.5 for 50% of the video frame height).
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.timeAnchor">
            <summary>
The wall clock time at which the data playback should begin.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.time">
            <summary>
The time at which the data should initially seek to (does not track time as the data plays).
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.dataSourceId">
            <summary>
The unique identifier of the data source displayed in the cell.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.isStatisticsOverlayEnabled">
            <summary>
Indicates whether or not the statistics overlay is enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.isInSync">
            <summary>
Indicates whether or not the cell is part of the monitor's sync group.
</summary>
        </member>
        <member name="F:VxSdk.IVxMonitorCell.isAnalyticsOverlayEnabled">
            <summary>
Indicates whether or not the analytics overlay is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the time to seek to on the monitor. A value of <c>nullptr</c> will set the stream to live. If no
frame is available for the given time the stream will remain unchanged.
</summary>
            <param name="time">The time to seek to, <c>nullptr</c> for live.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetSpeed(System.Single)">
            <summary>
Sets the play speed of the monitor data. Negative values indicate reverse speeds while positive values
indicate forward speeds (1 is normal speed). A value of 0 will pause the data playback.
</summary>
            <param name="speed">The playback speed.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetRotation(VxSdk.VxRotationType.Value)">
            <summary>
Sets the rotation applied to the video.
</summary>
            <param name="rotation">The rotation of the video.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetLocationZ(System.Int32)">
            <summary>
Sets the Z location of the immersive position.
</summary>
            <param name="z">The z location.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetLocationY(System.Int32)">
            <summary>
Sets the Y location of the crop bounds or immersive position.
</summary>
            <param name="y">The y location.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetLocationX(System.Int32)">
            <summary>
Sets the X location of the crop bounds or immersive position.
</summary>
            <param name="x">The x location.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetLocation(System.Int32,System.Int32,System.Int32)">
            <summary>
Sets the X, Y and Z locations of the crop bounds or immersive position.
</summary>
            <param name="x">The x location.</param>
            <param name="y">The y location.</param>
            <param name="z">The z location.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetDataSource(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the data source that this cell shall display.
</summary>
            <param name="dataSourceId">
The ID of the data source to display or a <c>nullptr</c> to remove the current data source.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetCropWidth(System.Single)">
            <summary>
Sets the width of the crop bounds applied to the video.
</summary>
            <param name="width">The width as a percentage (0-1).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetCropHeight(System.Single)">
            <summary>
Sets the height of the crop bounds applied to the video.
</summary>
            <param name="height">The height as a percentage (0-1).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.SetCropBounds(System.Single,System.Single)">
            <summary>
Sets the height and width of the crop bounds applied to the video.
</summary>
            <param name="height">The height as a percentage (0-1).</param>
            <param name="width">The width as a percentage (0-1).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.LeaveSyncGroup">
            <summary>
Removes this cell is to the monitor's sync group.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.JoinSyncGroup">
            <summary>
Adds this cell is to the monitor's sync group.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.EnableStatisticsOverlay">
            <summary>
Enables the statistics overlay. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.EnableAnalyticsOverlay">
            <summary>
Enables the analytics overlay. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.DisableStatisticsOverlay">
            <summary>
Disables the statistics overlay. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.DisableAnalyticsOverlay">
            <summary>
Disables the analytics overlay. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxMonitorCell.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxMonitorCell">
            <summary>
Represents a single viewport, hosted on a monitor, that can play media from a data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxLog.initiated">
            <summary>
The date and time at which the log was requested.
</summary>
        </member>
        <member name="F:VxSdk.IVxLog.id">
            <summary>
The unique identifier of the log.
</summary>
        </member>
        <member name="F:VxSdk.IVxLog.completed">
            <summary>
The date and time at which the log was completed.
</summary>
        </member>
        <member name="M:VxSdk.IVxLog.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxLog.GetLogEndpoint(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the URI to the download location of the actual log data. May be presented in whatever format is
suitable to the server. This endpoint will only be present if the log data is complete and available for
download.
</summary>
            <param name="endpoint">The log endpoint, if available.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxLog.DeleteLog">
            <summary>
Deletes this log from the device.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this log.</returns>
        </member>
        <member name="M:VxSdk.IVxLog.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxLog">
            <summary>
Represents a log file or set of log files.
</summary>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxAlarmInput.type">
            <summary>
The particular type of this alarm input.
</summary>
        </member>
        <member name="F:VxSdk.IVxAlarmInput.state">
            <summary>
The current state of the alarm input.
</summary>
        </member>
        <member name="F:VxSdk.IVxAlarmInput.name">
            <summary>
The friendly name of the alarm input.
</summary>
        </member>
        <member name="F:VxSdk.IVxAlarmInput.id">
            <summary>
The unique identifier of the alarm input.
</summary>
        </member>
        <member name="F:VxSdk.IVxAlarmInput.description">
            <summary>
The friendly description of the alarm input.
</summary>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.SetType(VxSdk.VxAlarmInputType.Value)">
            <summary>
Sets the type property.
</summary>
            <param name="type">The new type value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.SetDescription(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the description property.
</summary>
            <param name="description">The new description value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDevice" /> that hosts this alarm input.
</summary>
            <param name="hostDevice">The host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAlarmInput.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxAlarmInput">
            <summary>
Represents a physical alarm input.
</summary>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxAccessPoint.state">
            <summary>
The current operational state of the access point.
</summary>
        </member>
        <member name="F:VxSdk.IVxAccessPoint.status">
            <summary>
A list of the current access point statuses.
</summary>
        </member>
        <member name="F:VxSdk.IVxAccessPoint.type">
            <summary>
The particular type of the access point.
</summary>
        </member>
        <member name="F:VxSdk.IVxAccessPoint.statusSize">
            <summary>
The size of <see cref="F:VxSdk.IVxAccessPoint.status" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxAccessPoint.name">
            <summary>
The friendly name of the access point.
</summary>
        </member>
        <member name="F:VxSdk.IVxAccessPoint.id">
            <summary>
The unique identifier of the access point.
</summary>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.Unlock(System.Int32)">
            <summary>
Unlocks the access point for the given amount of time (in seconds).
</summary>
            <param name="seconds">The unlock time (in seconds). If 0, stay unlocked indefinitely.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this access point.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.SetType(VxSdk.VxAccessPointType.Value)">
            <summary>
Sets the type property.
</summary>
            <param name="type">The new type value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.SetName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the name property.
</summary>
            <param name="name">The new name value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.Lock(System.Int32)">
            <summary>
Locks the access point for the given amount of time (in seconds).
</summary>
            <param name="seconds">The lock time (in seconds). If 0, stay locked indefinitely.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this access point.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.GetRelations(VxSdk.VxCollection&lt;VxSdk.IVxResourceRel****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets all possible resource relations for this access point (both linked and non-linked). Each linked
resource shall be considered to be related to this access point.
<para>Available filters: kAdvancedQuery, kAllTags, kAllPrivateTags, kLinked.</para></summary>
            <param name="resourceRelCollection">A <see cref="T:VxSdk.VxCollection" /> of related resources.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.GetHostDevice(VxSdk.IVxDevice**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDevice" /> that hosts this access point.
</summary>
            <param name="hostDevice">The host <see cref="T:VxSdk.IVxDevice" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxAccessPoint.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxAccessPoint">
            <summary>
Represents an access control service (e.g. a door control or badge reader), typically hosted by an access
controller <see cref="T:VxSdk.IVxDevice" />.
</summary>
        </member>
        <member name="M:VxSdk.IVxResourceRel.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxResourceRel.isLinked">
            <summary>
Indicates whether the resource is linked to its parent.
</summary>
        </member>
        <member name="M:VxSdk.IVxResourceRel.SetLinkState(System.Boolean)">
            <summary>
Sets the link state of this resource to its parent.
</summary>
            <param name="isLinked">
                <c>true</c> to link this resource to its parent, <c>false</c> to unlink.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxResourceRel.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxResourceRel.GetResource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the related resource.
</summary>
            <param name="dataSource">The related resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxResourceRel.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxResourceRel">
            <summary>
Represents a related resource; that is, a resource that is related in some way to a parent resource. This
related resource may be linked to its parent resource for some effect.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSession.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSession.yResolution">
            <summary>
The vertical resolution of the data (Height).
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSession.xResolution">
            <summary>
The horizontal resolution of the data (Width).
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSession.quality">
            <summary>
The image quality of the data from 1 to 100. Smaller numbers have better quality than larger numbers.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSession.speed">
            <summary>
The play speed of the data.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSession.jpegUri">
            <summary>
The URI of the JPEG frame.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataSession.id">
            <summary>
The unique identifier of the data session.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataSession.Update">
            <summary>
Updates this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of updating this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.SetResolution(System.UInt16,System.UInt16)">
            <summary>
Sets the resolution properties.
</summary>
            <param name="xResolution">The new horizontal resolution value.</param>
            <param name="yResolution">The new vertical resolution value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the properties.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.SetQuality(System.UInt16)">
            <summary>
Sets the quality property.
</summary>
            <param name="quality">The new quality value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.SetSpeed(System.Single)">
            <summary>
Sets the play speed of the data session. Negative values indicate reverse speeds while positive values
indicate forward speeds (1 is normal speed).
</summary>
            <param name="speed">The playback speed.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.Seek(System.Int64,System.Single)">
            <summary>
Seeks to the frame nearest to the given time.
</summary>
            <param name="unixTime">The seek time in unix time format.</param>
            <param name="speed">The playback speed.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.RefreshSession">
            <summary>
Refreshes the data session.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.Play">
            <summary>
Starts or resumes the data session.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.Pause">
            <summary>
Pauses the data session.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.GoLive">
            <summary>
Sets the position of the data session as close to live as possible.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.GetUser(VxSdk.IVxUser**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxUser" /> that this session is being used by, if any.
</summary>
            <param name="user">The <see cref="T:VxSdk.IVxUser" /> using this session.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.GetDataSource(VxSdk.IVxDataSource**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDataSource" /> from which this session is retrieving data.
</summary>
            <param name="dataSource">The <see cref="T:VxSdk.IVxDataSource" /> for this session.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.GetDataInterface(VxSdk.IVxDataInterface**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxDataInterface" /> used by this session.
</summary>
            <param name="dataInterface">The <see cref="T:VxSdk.IVxDataInterface" /> used by this session.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.GetAuthToken(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the data session authentication token.
</summary>
            <param name="token">The authentication token.</param>
            <param name="size">The size of <paramref name="token" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.DeleteDataSession">
            <summary>
Terminates the current data session.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxDataSession.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxDataSession">
            <summary>
Represents a data session that is being transmitted by a data source, via a data interface, to a client.
</summary>
        </member>
        <member name="M:VxSdk.IVxPtzController.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxPtzController.lockExpireTime">
            <summary>
The time remaining (in seconds) until the PTZ lock expires.
</summary>
        </member>
        <member name="F:VxSdk.IVxPtzController.isLocked">
            <summary>
Indicates whether the PTZ control is locked.
</summary>
        </member>
        <member name="M:VxSdk.IVxPtzController.TriggerRefresh">
            <summary>
Triggers a refresh of this <see cref="T:VxSdk.IVxPtzController" /> on the VideoXpert system; updating its
<see cref="T:VxSdk.IVxPattern">patterns</see> and <see cref="T:VxSdk.IVxPreset">presets</see> based on the current camera
configuration.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing the <see cref="T:VxSdk.IVxPtzController" />.
</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.TriggerPreset(VxSdk.IVxPreset*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Triggers a preset.
</summary>
            <param name="preset">The <see cref="T:VxSdk.IVxPreset" /> to trigger.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.TriggerPreset(System.Int32)">
            <summary>
Triggers a preset by index.
</summary>
            <param name="index">The index of the preset to trigger.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.TriggerPattern(VxSdk.IVxPattern*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Triggers a pattern.
</summary>
            <param name="pattern">The <see cref="T:VxSdk.IVxPattern" /> to trigger.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.RepositionPreset(VxSdk.IVxPreset*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Repositions a preset to the current PTZ spatial coordinates.
</summary>
            <param name="preset">The <see cref="T:VxSdk.IVxPreset" /> to reposition.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)">
            <summary>
Moves the camera position within a percentage relative to the device’s current field of view.
</summary>
            <remarks>
The rotational x and y parameters are used to move within a percentage of the current field of view of the
camera. For instance, if the x parameter were 50 and the y parameter were -50, the pan/tilt would move
halfway to the edge of the field of view along the x axis and halfway to the field of view along the
negative y axis from its present position.
</remarks>
            <param name="percentageX">
Percentage of the current field of view of the camera (X axis). Positive values are to the right, negative
values are to the left. Range: -100 to 100.
</param>
            <param name="percentageY">
Percentage of the current field of view of the camera (Y axis). Positive values are up, negative values are
down. Range: -100 to 100.
</param>
            <param name="percentageZ">
Zoom relative to the current position. It is expressed in terms of magnification * 100, such that if a user
wished to zoom in 2X the current magnification, the value would be 200, 2.5X the current magnification
would be 250. A negative number may not be valid if it is outside the bounds of the field of view.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.RelativePercentageMove(System.Int32,System.Int32)">
            <summary>
Moves the camera position within a percentage relative to the device’s current field of view.
</summary>
            <remarks>
The rotational x and y parameters are used to move within a percentage of the current field of view of the
camera. For instance, if the x parameter were 50 and the y parameter were -50, the pan/tilt would move
halfway to the edge of the field of view along the x axis and halfway to the field of view along the
negative y axis from its present position.
</remarks>
            <param name="percentageX">
Percentage of the current field of view of the camera (X axis). Positive values are to the right, negative
values are to the left. Range: -100 to 100.
</param>
            <param name="percentageY">
Percentage of the current field of view of the camera (Y axis). Positive values are up, negative values are
down. Range: -100 to 100.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.RelativeMove(System.Int32,System.Int32,System.Int32)">
            <summary>
Moves the camera position relative to the current position.
</summary>
            <param name="deltaX">
The degree to pan relative to the current X position. Negative values pan left, positive values pan right.
</param>
            <param name="deltaY">
The degree to tilt relative to the current Y position. Negative values pan left, positive values pan right.
</param>
            <param name="deltaZ">
The magnification level relative to the current Z position. Negative values pan left, positive values pan
right.
</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.PtzStop">
            <summary>
Stops all PTZ actions.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.GetPtzLock(VxSdk.IVxPtzLock**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxPtzLock" /> for this <see cref="T:VxSdk.IVxPtzController" />.
</summary>
            <param name="ptzLock">The <see cref="T:VxSdk.IVxPtzLock" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.GetPtzLimits(VxSdk.VxPtzLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the value limits for this PTZ controller.
</summary>
            <param name="ptzLimits">The PTZ limits.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.GetPresets(VxSdk.VxCollection&lt;VxSdk.IVxPreset****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the available presets.
<para>Available filters: kModifiedSince.</para></summary>
            <param name="presetCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated presets.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.GetPosition(System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the current absolute position coordinates.
</summary>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <param name="positionZ">The Z coordinate absolute position (zoom).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.GetPatterns(VxSdk.VxCollection&lt;VxSdk.IVxPattern****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the available patterns.
<para>Available filters: kModifiedSince.</para></summary>
            <param name="patternCollection">A <see cref="T:VxSdk.VxCollection" /> of the associated patterns.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.DeletePreset(VxSdk.IVxPreset*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Deletes a preset from the system.
</summary>
            <param name="preset">The <see cref="T:VxSdk.IVxPreset" /> to delete.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.ContinuousMove(System.Int32,System.Int32,VxSdk.VxZoomDirection.Value)">
            <summary>
Continuously moves the field of view at the given speed percentage until stopped.
</summary>
            <param name="speedX">Pan speed percentage (-100 to +100). Negative values pan left, positive values pan right.</param>
            <param name="speedY">Tilt speed percentage (-100 to +100). Negative values tilt downward, positive values tilt upward.</param>
            <param name="inOut">The direction to zoom.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.ContinuousMoveAtSpeed(System.Int32,System.Int32,System.Int32)">
            <summary>
Continuously moves the field of view at the given speed until stopped. 
</summary>
            <remarks>
The minimum/maximum speed values for each parameter may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="speedX">Pan speed. Negative values pan left, positive values pan right.</param>
            <param name="speedY">Tilt speed. Negative values tilt downward, positive values tilt upward.</param>
            <param name="speedZ">Zoom speed. Negative values zoom out, positive values zoom in.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.ContinuousIris(VxSdk.VxIrisDirection.Value)">
            <summary>
Continuously opens or closes the iris.
</summary>
            <param name="openClose">The direction to change the iris.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.ContinuousIrisAtSpeed(System.Int32)">
            <summary>
Continuously opens or closes the iris at the given speed.
</summary>
            <remarks>
The minimum/maximum iris speed values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="irisSpeed">Iris speed. Negative values close the iris, positive values open the iris.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.ContinuousFocus(VxSdk.VxFocusDirection.Value)">
            <summary>
Continuously focuses near or far.
</summary>
            <param name="nearFar">The direction to focus.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.ContinuousFocusAtSpeed(System.Int32)">
            <summary>
Continuously focuses near or far at the given speed.
</summary>
            <remarks>
The minimum/maximum focus speed values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="focusSpeed">Focus speed. Negative values focus near, positive values focus far.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AddPreset(System.Int32)">
            <summary>
Creates a new preset using the current PTZ spatial coordinates.
</summary>
            <param name="index">The unique index value for the new preset.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AddDigitalPreset(VxSdk.VxNewDigitalPtzPreset*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new digital PTZ preset. This preset will represent the given spatial coordinates.
</summary>
            <param name="newDigitalPtzPreset">The new digital PTZ preset.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AbsoluteZoom(System.Int32)">
            <summary>
Zooms to the absolute position of the given coordinates.
</summary>
            <remarks>
The minimum/maximum Z coordinate values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="positionZ">The Z coordinate absolute position (zoom).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AbsoluteTilt(System.Int32)">
            <summary>
Tilts to the absolute position of the given coordinate.
</summary>
            <remarks>
The minimum/maximum Y coordinate values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AbsolutePan(System.Int32)">
            <summary>
Pans to the absolute position of the given coordinate.
</summary>
            <remarks>
The minimum/maximum X coordinate values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AbsoluteMove(System.Int32,System.Int32,System.Int32)">
            <summary>
Moves to the absolute position of the given coordinates.
</summary>
            <remarks>
The minimum/maximum X, Y, and Z coordinate values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <param name="positionZ">The Z coordinate absolute position (zoom).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzController.AbsoluteMove(System.Int32,System.Int32)">
            <summary>
Moves to the absolute position of the given coordinates.
</summary>
            <remarks>
The minimum/maximum X and Y coordinate values may be retrieved using <c>GetPtzLimits</c>.
</remarks>
            <param name="positionX">The X coordinate absolute position (pan).</param>
            <param name="positionY">The Y coordinate absolute position (tilt).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxPtzController">
            <summary>
Represents a controller for a device that has pan, tilt, and/or zoom functionality.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minSpeedZ">
            <summary>
The zoom speed minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minSpeedY">
            <summary>
The tilt speed minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minSpeedX">
            <summary>
The pan speed minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minSpeedIris">
            <summary>
The iris speed minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minSpeedFocus">
            <summary>
The focus speed minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minPositionZ">
            <summary>
The Z coordinate minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minPositionY">
            <summary>
The Y coordinate minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.minPositionX">
            <summary>
The X coordinate minimum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxSpeedZ">
            <summary>
The zoom speed maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxSpeedY">
            <summary>
The tilt speed maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxSpeedX">
            <summary>
The pan speed maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxSpeedIris">
            <summary>
The iris speed maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxSpeedFocus">
            <summary>
The focus speed maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxPositionZ">
            <summary>
The Z coordinate maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxPositionY">
            <summary>
The Y coordinate maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.maxPositionX">
            <summary>
The X coordinate maximum limit.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitSpeedZ">
            <summary>
Indicates whether the Z speed limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitSpeedY">
            <summary>
Indicates whether the Y speed limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitSpeedX">
            <summary>
Indicates whether the X speed limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitSpeedIris">
            <summary>
Indicates whether the iris speed limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitSpeedFocus">
            <summary>
Indicates whether the focus speed limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitPositionZ">
            <summary>
Indicates whether the Z coordinate limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitPositionY">
            <summary>
Indicates whether the Y coordinate limits are available.
</summary>
        </member>
        <member name="F:VxSdk.VxPtzLimits.hasLimitPositionX">
            <summary>
Indicates whether the X coordinate limits are available.
</summary>
        </member>
        <member name="M:VxSdk.VxPtzLimits.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxPtzLimits.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxPtzLimits" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxPtzLimits.#ctor(VxSdk.VxPtzLimits!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPtzLimits" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxPtzLimits.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPtzLimits" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxPtzLimits">
            <summary>
Represents the value limits for a PTZ controller.
</summary>
        </member>
        <member name="M:VxSdk.IVxPtzLock.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxPtzLock.id">
            <summary>
The unique identifier of the PTZ lock.
</summary>
        </member>
        <member name="M:VxSdk.IVxPtzLock.Unlock">
            <summary>
Unlocks the PTZ control.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.Lock(System.Int32)">
            <summary>
Locks the PTZ control.
</summary>
            <param name="expireTime">The amount of time (in seconds) that the PTZ lock will be held. The
lock will not expire until it is explicitly unlocked if set to 0.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.GetOwner(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the name of the user that has locked the PTZ controller, if any.
</summary>
            <param name="owner">The PTZ lock owner.</param>
            <param name="size">The size of <paramref name="owner" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.GetLockState(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the current state of the PTZ lock.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.GetExpireTime(System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the amount of time (in seconds) that the PTZ lock will be held.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxPtzLock.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxPtzLock">
            <summary>
Represents a lock for a PTZ controller.
</summary>
        </member>
        <member name="M:VxSdk.IVxPreset.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.z">
            <summary>
The Z (zoom) coordinate absolute position relative to the 0 position. The 0 position is minimum zoom while
the 100 position is maximum zoom (digital presets only).
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.y">
            <summary>
The Y (tilt) coordinate absolute position, in degrees, relative to the (0, 0) position. The -180 position
is bottommost while the 180 position is topmost (digital presets only).
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.x">
            <summary>
The X (pan) coordinate absolute position, in degrees, relative to the (0, 0) position. The -180 position is
leftmost while the 180 position is rightmost (digital presets only).
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.index">
            <summary>
The unique numerical sequence value of this preset.
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.name">
            <summary>
The friendly name of the preset.
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.description">
            <summary>
The friendly description of the preset.
</summary>
        </member>
        <member name="F:VxSdk.IVxPreset.isDigital">
            <summary>
Indicates whether this preset is digital.
</summary>
        </member>
        <member name="M:VxSdk.IVxPreset.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxPreset">
            <summary>
Represents a predefined point that a PTZ device can PTZ to when triggered.
</summary>
        </member>
        <member name="M:VxSdk.IVxPattern.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxPattern.name">
            <summary>
The friendly name of the pattern.
</summary>
        </member>
        <member name="F:VxSdk.IVxPattern.description">
            <summary>
The friendly description of the pattern.
</summary>
        </member>
        <member name="M:VxSdk.IVxPattern.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxPattern">
            <summary>
Represents a predefined sequence of movement that a PTZ device can perform when triggered. A running pattern
will be halted upon any other PTZ request.
</summary>
        </member>
        <member name="M:VxSdk.IVxClip.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.recordingType">
            <summary>
The event type that triggered the recording of the clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.framerate">
            <summary>
The framerate of the clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.dataInterfaces">
            <summary>
The data interfaces available for retrieval of the stored media this clip represents.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.dataInterfaceSize">
            <summary>
The size of <see cref="F:VxSdk.IVxClip.dataInterfaces" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.type">
            <summary>
The type of media contained in the clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.startTime">
            <summary>
The start time of the clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.sourceDataStorageId">
            <summary>
The unique identifier of the data storage on which the media for this clip was originally stored. If
different than dataStorageId, indicates that this clip was copied to the data storage from another data
storage.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.endTime">
            <summary>
The end time of the clip.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.dataStorageId">
            <summary>
The unique identifier of the data storage on which the media for this clip is stored.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.dataSourceName">
            <summary>
The friendly name of the clips data source.
</summary>
        </member>
        <member name="F:VxSdk.IVxClip.dataSourceId">
            <summary>
The unique identifier of the clips data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxClip.GetSnapshotEndpoint(VxSdk.VxSnapshotFilter*,System.Int32,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the endpoint URI for snapshots.
</summary>
            <param name="filter">The filter(s) to use to generate the snapshot endpoint.</param>
            <param name="filterSize">The size of <paramref name="filter" />.</param>
            <param name="endpoint">The snapshots endpoint.</param>
            <param name="size">The size of <paramref name="endpoint" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxClip.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxClip">
            <summary>
Represents a contiguous duration of stored media originating from a single data source.
</summary>
        </member>
        <member name="M:VxSdk.IVxDataInterface.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.protocol">
            <summary>
The transport protocol used by the data interface.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.format">
            <summary>
The media stream encoding format.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.renderType">
            <summary>
The type of rendering required for the media data delivered by this interface. Clients can utilize this to
create the correct rendering pipeline. Defaults to standard.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.overlayTypes">
            <summary>
The available overlays.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.multicastTestPort">
            <summary>
The multicast test port used to test transmission capabilities.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.yResolution">
            <summary>
Vertical resolution of the data.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.xResolution">
            <summary>
Horizontal resolution of the data.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.overlayTypeSize">
            <summary>
The size of <see cref="F:VxSdk.IVxDataInterface.overlayTypes" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.bitrate">
            <summary>
Average bitrate of the stream, if available (in kbps).
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.framerate">
            <summary>
The framerate of the data.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.multicastTestIp">
            <summary>
The multicast test IP used to test transmission capabilities.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.dataEndpoint">
            <summary>
The protocol-specific stream control endpoint URI.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.dataEncodingId">
            <summary>
The unique identifier for a specific data encoding (based on encoding quality, framerate, and resolution).
Multiple identical copies of the data may exist across the system; these will have the same dataEncodingId.
This ID may be used when requesting a specific encoding to export, record, playback, etc.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.supportsMulticast">
            <summary>
Indicates whether the interface provides multicast transmission.
</summary>
        </member>
        <member name="F:VxSdk.IVxDataInterface.isTranscoded">
            <summary>
Indicates whether the interface provides a transcoded stream.
</summary>
        </member>
        <member name="T:VxSdk.IVxDataInterface">
            <summary>
Represents a data interface for a data source. Clients can retrieve data from the data source using the
protocol specified by this interface.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Twilio.fromNumber">
            <summary>
A Twilio phone number capable of sending SMS (e.g., +15595551234).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Twilio.accountSid">
            <summary>
The Twilio account SID.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Twilio.isEnabled">
            <summary>
Indicates whether or not SMS messaging via Twilio is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.ValidateTwilioInfo(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Validate the given Twilio info by attempting to use it to send a test SMS.
</summary>
            <param name="isValid">
                <c>true</c> if sending the test SMS was successful, otherwise <c>false</c>.</param>
            <param name="accountSid">A Twilio account SID.</param>
            <param name="authToken">A Twilio account authorization token.</param>
            <param name="fromNumber">A Twilio phone number capable of sending SMS (e.g., +15595551234).</param>
            <param name="toNumber">A phone number capable of receiving SMS to send messages to (e.g., +15595551234).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of validating the Twilio info.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.SetFromNumber(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the fromNumber property.
</summary>
            <param name="fromNumber">The Twilio phone number capable of sending SMS (e.g., +15595551234).</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.SetAuthToken(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the Twilio account authorization token.
</summary>
            <param name="authToken">The Twilio account authorization token.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the authorization token.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.SetAccountSid(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the accountSid property.
</summary>
            <param name="accountSid">The Twilio account SID.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.Enable">
            <summary>
Enables SMS messaging via Twilio.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling SMS messaging via Twilio.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.Disable">
            <summary>
Disables SMS messaging via Twilio.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling SMS messaging via Twilio.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Twilio.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Twilio">
            <summary>
Represents Twilio (twilio.com) SMS account configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Time.timeServerSource">
            <summary>
The source where the time server information comes from.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Time.externalTimeServersSize">
            <summary>
The size of <see cref="F:VxSdk.IVxConfiguration.Time.externalTimeServers" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Time.externalTimeServers">
            <summary>
The external time servers for time synchronization, typically using the NTP protocol.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Time.timeZone">
            <summary>
The time zone of the device, for localization purposes.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Time.timeServerAddress">
            <summary>
DEPRECATED
<para>The host address of the external time server.</para></summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Time.isTimeServerEnabled">
            <summary>
DEPRECATED
<para>Indicates whether or not the external time server is enabled.</para></summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.SetTimeZone(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the time zone of the device, for localization purposes.
</summary>
            <param name="timeZone">The new time zone value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.SetTimeServerSource(VxSdk.VxTimeServerSource.Value)">
            <summary>
Sets source where the time server information comes from.
</summary>
            <param name="timeServerSource">The new time server source value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.SetExternalTimeServers(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32)">
            <summary>
Sets the list of external time servers for time synchronization.
</summary>
            <param name="externalTimeServers">The external time server host addresses.</param>
            <param name="externalTimeServersSize"> The size of <paramref name="externalTimeServers" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.GetTime(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Gets the current internal system time.
</summary>
            <param name="currentTime">The current internal time from the system.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Time.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Time">
            <summary>
Represents the time configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.ThermalEtd.timeout">
            <summary>
The number of seconds before a new event is emitted for the same person in view.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.ThermalEtd.normalRangeUpperBound">
            <summary>
The upper bound of the normal temperature range, in degrees Celsius; higher temperatures will be
considered elevated.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.ThermalEtd.normalRangeLowerBound">
            <summary>
The lower bound of the normal temperature range, in degrees Celsius; lower temperatures will be
considered abnormally low.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.ThermalEtd.isEnabled">
            <summary>
Indicates whether or not elevated temperature detection events and overlays are enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.SetTimeout(System.Int32)">
            <summary>
Sets the timeout property.
</summary>
            <param name="timeout">The new timeout value in seconds.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.SetNormalRangeUpperBound(System.Single)">
            <summary>
Sets the normalRangeUpperBound property.
</summary>
            <param name="normalRangeUpperBound">The new normalRangeUpperBound value in degrees Celsius.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.SetNormalRangeLowerBound(System.Single)">
            <summary>
Sets the normalRangeLowerBound property.
</summary>
            <param name="normalRangeLowerBound">The new normalRangeLowerBound value in degrees Celsius.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.Enable">
            <summary>
Enables elevated temperature detection events and overlays.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling elevated temp. detection.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.Disable">
            <summary>
Disables elevated temperature detection events and overlays.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling elevated temp. detection.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.ThermalEtd.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.ThermalEtd">
            <summary>
Represents thermal elevated temperature detection configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.transmissionPreference">
            <summary>
The network communication transmission type preference.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.videoStreamRecordingSource">
            <summary>
The stream to record from for all assigned data sources (when scheduled to record).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.secondaryVideoStreamRecordingSource">
            <summary>
The second stream to record from all assigned data sources (when scheduled to record).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.retentionLimit">
            <summary>
The retention limit, in hours, on recorded data.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.pruningThreshold">
            <summary>
The threshold, in hours, after which recordings older than this are eligible for pruning. Any recorded
media retained longer than the threshold will be pruned as needed to free space on disk for recording.
This only applies to data source having type video. A value of 0 will disable pruning (pruning may be
enabled on a per data source basis still, see: IVxDataSource::pruningThreshold).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.monitoredDeviceIdsSize">
            <summary>
The size of <see cref="F:VxSdk.IVxConfiguration.Storage.monitoredDeviceIds" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.maxOutboundBitrate">
            <summary>
The maximum outbound bitrate for this VxStorage (in Mbps).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.manualRecordingTimeout">
            <summary>
The amount of time, in seconds, to allow a manual recording to be active.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.gapFillerInterval">
            <summary>
The interval, in seconds, to reattempt to automatically fill a gap.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.gapFillerDownloads">
            <summary>
The maximum number of concurrent downloads.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.gapFillerAttempts">
            <summary>
The maximum number of attempts to fill a gap before giving up.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.failoverMaxRecordingBitrate">
            <summary>
The maximum recording bitrate for this VxStorage when enabled as a failover unit (in Mbps).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.failoverGroupSize">
            <summary>
The size of <see cref="F:VxSdk.IVxConfiguration.Storage.failoverGroup" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.monitoredDeviceIds">
            <summary>
List of device IDs being monitored for failover.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.failoverGroup">
            <summary>
List of device IDs belonging to this VxStorage failover group (including itself).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.transmissionType">
            <summary>
The network communication transmission type preference.
</summary>
            <remarks>
DEPRECATED: This has been replaced by <see cref="F:VxSdk.IVxConfiguration.Storage.transmissionPreference" /> and will be removed in
the future.
</remarks>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.isGapFillerEnabled">
            <summary>
Indicated whether or not automatic gap filling is enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Storage.isFailoverEnabled">
            <summary>
Indicated whether or not this VxStorage is designated as a failover unit.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetVideoStreamRecordingSource(VxSdk.VxStreamSource.Value)">
            <summary>
Sets the stream to record from all assigned data sources (when scheduled to record).
</summary>
            <param name="videoStreamRecordingSource">The new video stream source to record.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetTransmissionPreference(VxSdk.VxTransmissionType.Value)">
            <summary>
Sets the network communication transmission type preference. Note that if the preferred communication
fails, this VxStorage may attempt to utilize unicast.
</summary>
            <param name="transmissionPreference">The new transmission preference.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetSecondaryVideoStreamRecordingSource(VxSdk.VxStreamSource.Value)">
            <summary>
Sets the second stream to record from all assigned data sources (when scheduled to record).
</summary>
            <param name="secondaryVideoStreamRecordingSource">The new second video stream source to record.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetRetentionLimit(System.Int32)">
            <summary>
Sets the retention limit, in hours, on recorded data; a value of 0 will disable the limit. Any
recorded data that exceeds this limit will be deleted.
</summary>
            <param name="retentionLimit">The new retention limit.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetPruningThreshold(System.Int32)">
            <summary>
Sets the threshold, in hours, after which recordings older than this are eligible for pruning. Any recorded
media retained longer than the threshold will be pruned as needed to free space on disk for recording.
This only applies to data source having type video. A value of 0 will disable pruning (pruning may be
enabled on a per data source basis still, see: IVxDataSource::pruningThreshold).
</summary>
            <param name="pruningThreshold">The new threshold, in hours.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetMonitoredDeviceIds(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte**,System.Int32)">
            <summary>
Sets the list of device IDs being monitored for failover.  If <see cref="F:VxSdk.IVxConfiguration.Storage.isFailoverEnabled" />
is <c>true</c> and a failure is detected on one of these, this VxStorage will failover all devices
assigned to the data storage on that device. A value of 0 will will clear any existing device IDs.
</summary>
            <param name="deviceIds">The device IDs to monitor.</param>
            <param name="deviceIdsSize"> The size of <paramref name="deviceIds" />.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetMaxOutboundBitrate(System.Int32)">
            <summary>
Sets the maximum outbound bitrate for this VxStorage (in Mbps).
</summary>
            <param name="maxOutboundBitrate">The new max bitrate value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetManualRecordingTimeout(System.Int32)">
            <summary>
Sets the amount of time, in seconds, to allow a manual recording to be active. The manual
recording will be automatically deleted after this amount of time elapses if it has not been
refreshed (see: <c>IVxManualRecording::ResetExpirationTimers</c>). No timeout is
applied if the value is less than 1.
</summary>
            <param name="manualRecordingTimeout">The new timeout value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetGapFillerInterval(System.Int32)">
            <summary>
Sets the interval, in seconds, to reattempt to automatically fill a gap.
</summary>
            <param name="gapFillerInterval">The new interval value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetGapFillerDownloads(System.Int32)">
            <summary>
Sets the maximum number of concurrent downloads.
</summary>
            <param name="gapFillerDownloads">The new gap filler downloads value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetGapFillerAttempts(System.Int32)">
            <summary>
Sets the maximum number of attempts to fill a gap before giving up.
</summary>
            <param name="gapFillerAttempts">The new attempts value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.SetFailoverMaxRecordingBitrate(System.Int32)">
            <summary>
Sets the maximum recording bitrate for this VxStorage when enabled as a failover unit (in Mbps).
</summary>
            <param name="failoverMaxRecordingBitrate">The new bitrate value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.RebuildDatabase">
            <summary>
Rebuilds the database. Has no effect if the database is already rebuilding.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of rebuilding the database.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.GetVolumeGroups(VxSdk.VxCollection&lt;VxSdk.IVxVolumeGroup****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the volume groups for this storage.
</summary>
            <param name="volumeGroupCollection">A <see cref="T:VxSdk.VxCollection" /> of volume groups.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.GetVolumes(VxSdk.VxCollection&lt;VxSdk.IVxVolume****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the volumes for this storage.
</summary>
            <param name="volumeCollection">A <see cref="T:VxSdk.VxCollection" /> of volumes.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.GetFileRecovery(VxSdk.IVxFileRecovery**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the file recovery control and monitor resource for this VxStorage.
</summary>
            <param name="fileRecovery">The file recovery control and monitor resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.EnableGapFiller">
            <summary>
Enables automatic gap filling.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling the gap filler.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.EnableFailover">
            <summary>
Enables this VxStorage as a failover unit (it will failover the data storages on any device
it's monitoring). NOTE: Failover units will not provide device assignment nor schedule management
functionality; they are dedicated to failover monitoring functions.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling this VxStorage as a failover unit.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.DisableGapFiller">
            <summary>
Disables automatic gap filling.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling the gap filler.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.DisableFailover">
            <summary>
Disables this VxStorage as a failover unit.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling this VxStorage as a failover unit.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.CreateVolumeGroup(VxSdk.VxNewVolumeGroup*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new volume group on the VxStorage.
</summary>
            <param name="newVolumeGroup">The new volume group to be created.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Storage.CreateVolume(VxSdk.VxNewVolume*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Creates a new volume on the VxStorage.
</summary>
            <param name="newVolume">The new volume to be created.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Storage">
            <summary>
Represents a VxStorage-specific configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Snmp.version">
            <summary>
Indicates which version of SNMP is enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Snmp.v3PrivacyProtocol">
            <summary>
The SNMP v3 privacy protocol.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Snmp.v3AuthProtocol">
            <summary>
The SNMP v3 authentication protocol.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Snmp.snmpPort">
            <summary>
The port on which to provide access to SNMP.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Snmp.v3ReadUsername">
            <summary>
The SNMP v3 read username.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Snmp.v2cReadCommunityString">
            <summary>
The SNMP v2c community string.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetVersion(VxSdk.VxSnmpVersion.Value)">
            <summary>
Sets the version property.
</summary>
            <param name="version">The version of SNMP to enable; <c>kNone</c> to disable SNMP..</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetV3PrivacyProtocol(VxSdk.VxPrivacyProtocol.Value)">
            <summary>
Sets the v3PrivacyProtocol property.
</summary>
            <param name="v3PrivacyProtocol">The SNMP v3 privacy protocol.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetV3AuthProtocol(VxSdk.VxAuthProtocol.Value)">
            <summary>
Sets the v3AuthProtocol property.
</summary>
            <param name="v3AuthProtocol">The SNMP v3 authentication protocol.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetV3ReadPrivacyPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the SNMP v3 read privacy password.
</summary>
            <param name="password">The read privacy password.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the read privacy password.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetV3ReadAuthPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the SNMP v3 read auth password.
</summary>
            <param name="password">The read auth password.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the read auth password.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetV3ReadUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the v3ReadUsername property.
</summary>
            <param name="v3ReadUsername">The SNMP v3 read username.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetV2cReadCommunityString(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the v2cReadCommunityString property.
</summary>
            <param name="v2cReadCommunityString">The SNMP v2c community string.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.SetSnmpPort(System.Int32)">
            <summary>
Sets the snmpPort property.
</summary>
            <param name="snmpPort">The SNMP port.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Snmp.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Snmp">
            <summary>
Represents the SNMP agent configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.timeout">
            <summary>
The timeout in milliseconds.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.smtpPort">
            <summary>
The SMTP port.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.username">
            <summary>
The username for SMTP access.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.host">
            <summary>
The SMTP host.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.fromAddress">
            <summary>
The "Mail From" email address.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.useSmtps">
            <summary>
Indicates whether SMTPS should be used instead of SMTP.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Smtp.isValidateCertEnabled">
            <summary>
Indicates whether or not validation of the servers certificate is enforced.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.ValidateSmtpInfo(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.VxSmtpInfo*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Validate the given SMTP information by attempting to use it to send a test email.
</summary>
            <param name="isValid">
                <c>true</c> if sending the test email was successful, otherwise <c>false</c>.</param>
            <param name="smtpInfo">The SMTP information to validate.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of validating the SMTP information.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.SetUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the username for SMTP access.
</summary>
            <param name="username">The username.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.SetTimeout(System.Int32)">
            <summary>
Sets the timeout property.
</summary>
            <param name="timeout">The timeout in milliseconds.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.SetSmtpPort(System.Int32)">
            <summary>
Sets the smtpPort property.
</summary>
            <param name="smtpPort">The SMTP port.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.SetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the password for SMTP access.
</summary>
            <param name="password">The password.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.SetHost(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the host property.
</summary>
            <param name="host">The SMTP host.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.SetFromAddress(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the fromAddress property.
</summary>
            <param name="fromAddress">The "Mail From" email address.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.EnableSmtps">
            <summary>
Enables the use of SMTPS instead of SMTP.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling SMTPS.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.EnableCertValidation">
            <summary>
Enables enforcing validation of the servers certificate.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling certificate validation enforcement.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.DisableSmtps">
            <summary>
Disables the use of SMTPS.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling SMTPS.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.DisableCertValidation">
            <summary>
Disables enforcing validation of the servers certificate.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling certificate validation enforcement.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Smtp.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Smtp">
            <summary>
Represents the SMTP configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Server.rtspPort">
            <summary>
The RTSP port number.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Server.httpsPort">
            <summary>
The HTTPS port number.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Server.httpPort">
            <summary>
The HTTP port number.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Server.isReverseDnsLookupEnabled">
            <summary>
Indicates whether or not hostname lookup from IP is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.SetRtspPort(System.Int32)">
            <summary>
Sets the rtspPort property.
</summary>
            <param name="rtspPort">The RTSP port.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.SetHttpsPort(System.Int32)">
            <summary>
Sets the httpsPort property.
</summary>
            <param name="httpsPort">The HTTPS port.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.SetHttpPort(System.Int32)">
            <summary>
Sets the httpPort property.
</summary>
            <param name="httpPort">The HTTP port.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.Restart">
            <summary>
Restarts the server; generally required after any port changes to have them take effect.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.EnableReverseDnsLookup">
            <summary>
Enables hostname lookup from IP.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling reverse DNS lookup.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.DisableReverseDnsLookup">
            <summary>
Disables hostname lookup from IP.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling reverse DNS lookup.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Server.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Server">
            <summary>
Represents general server configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Report.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Report.storageLocation">
            <summary>
The network storage location to save report data to (used instead of local cluster storage).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Report.maxAge">
            <summary>
The retention limit, in days, for reports; a value of 0 will disable the limit. Any report that exceeds
this limit will be deleted.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Report.SetStorageLocation(VxSdk.VxNetworkStorageInfo*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the storageLocation property.
</summary>
            <param name="storageLocation">The new storage location.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Report.SetMaxAge(System.Int32)">
            <summary>
Sets the maxAge property.
</summary>
            <param name="maxAge">The new max age, in days.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Report.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Report.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Report">
            <summary>
Represents report configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Node.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Node.type">
            <summary>
The particular type of node this is.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Node.status">
            <summary>
The current configuration status of this node
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Node.arbiterPort">
            <summary>
The port number that the arbiter node uses.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Node.hostAddress">
            <summary>
The host address.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Node.arbiterAlias">
            <summary>
The host alias for the arbiter node.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Node.isArbiter">
            <summary>
Indicates whether or not this node is an arbiter.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Node.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Node.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Node">
            <summary>
Represents an individual host machine (a "node") within a cluster.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Motion.mode">
            <summary>
The motion detection mode.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Motion.threshold">
            <summary>
The amount of area that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less area required to trigger motion).
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Motion.sensitivity">
            <summary>
The amount of change that needs to occur in order to qualify as motion. Higher values increase
sensitivity (less change required to trigger motion).
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.SetThreshold(System.Int32)">
            <summary>
Sets the threshold property.
</summary>
            <param name="threshold">The new threshold value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.SetSensitivity(System.Int32)">
            <summary>
Sets the sensitivity property.
</summary>
            <param name="sensitivity">The new sensitivity value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.SetMode(VxSdk.VxMotionMode.Value)">
            <summary>
Sets the mode property.
</summary>
            <param name="mode">The new mode value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Motion.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Motion">
            <summary>
Represents a motion detection configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.serverPort">
            <summary>
Port number of the LDAP server.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.vxSystemDn">
            <summary>
The site specific LDAP container; unique per VideoXpert site. This DN should contain the
<see cref="F:VxSdk.IVxConfiguration.Ldap.vxRootDn" /> (which is a suffix of this full DN).
<remarks>
Should be supplied if <see cref="F:VxSdk.IVxConfiguration.Ldap.useLdapUsersAndRoles" /> is <c>true</c>; ignored otherwise.
</remarks></summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.vxRootDn">
            <summary>
The LDAP container under which VideoXpert system information for all sites is stored; this should be the
same for all sites.
<remarks>
Should be supplied if <see cref="F:VxSdk.IVxConfiguration.Ldap.useLdapUsersAndRoles" /> is <c>true</c>; ignored otherwise.
</remarks></summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.ssoDomain">
            <summary>
The Active Directory/Kerberos domain used for single sign-on.
<remarks>Ignored if <see cref="F:VxSdk.IVxConfiguration.Ldap.isSsoEnabled" /> is <c>false</c>.</remarks></summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.serverName">
            <summary>
The hostname or IP address of the LDAP server.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.searchDnAccount">
            <summary>
The superuser DN account in the LDAP directory to use for performing searches there.
<remarks>
If <see cref="F:VxSdk.IVxConfiguration.Ldap.isSsoEnabled" /> is <c>true</c>, this account should have write permissions on
the <see cref="F:VxSdk.IVxConfiguration.Ldap.vxRootDn" />. Should be supplied if <see cref="F:VxSdk.IVxConfiguration.Ldap.isTwoStageBindingEnabled" /> or
<see cref="F:VxSdk.IVxConfiguration.Ldap.useLdapUsersAndRoles" /> are <c>true</c>; ignored otherwise.
</remarks></summary>
            <example>CN=users, DC=mycorp</example>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.searchAttributes">
            <summary>
The attributes against which to match the user’s identity/name.
</summary>
            <example>cn, mail</example>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.objectClasses">
            <summary>
The LDAP object classes to search for users.
</summary>
            <example>user, inetOrgPerson</example>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.baseDn">
            <summary>
The location in the LDAP database that will be used to search for and authenticate user entries.
</summary>
            <example>ou=Service Accounts, dc=Pelco, dc=org</example>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.useLdapUsersAndRoles">
            <summary>
Indicates whether or not LDAP will be used to manage users and roles.
<remarks><c>false</c> to only use the LDAP server for authentication; the VideoXpert system will manage users and
roles itself. <c>true</c> to manage user accounts and role assignments in the LDAP system. Note that
permissions on roles will still be managed by the VideoXpert system.
</remarks></summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.isTwoStageBindingEnabled">
            <summary>
Indicates whether or not two stage binding authentication is enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.isSsoEnabled">
            <summary>
Indicates whether or not single sign-on is enabled.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.isServerTlsEnabled">
            <summary>
Indicates whether or not SSL/TLS security is enabled for the LDAP server.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Ldap.isEnabled">
            <summary>
Indicates whether or not LDAP username/password authentication is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.ValidateLdapCredentials(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.VxLdapValidationCredentials*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Validate the given credentials on the specified LDAP server.
</summary>
            <param name="isValid">
                <c>true</c> if the config and credentials are valid, otherwise <c>false</c>.</param>
            <param name="ldapCredentials">The LDAP credentials to validate.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of validating the credentials.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetVxSystemDn(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the vxSystemDn property.
</summary>
            <param name="vxSystemDn">The new VideoXpert system DN.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetVxRootDn(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the vxRootDn property.
</summary>
            <param name="vxRootDn">TThe new VideoXpert root DN.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetSsoDomain(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the ssoDomain property.
</summary>
            <param name="ssoDomain">The new SSO domain.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetServerPort(System.Int32)">
            <summary>
Sets the serverPort property.
</summary>
            <param name="serverPort">The new server port.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetServerName(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the serverName property.
</summary>
            <param name="serverName">The new server hostname or IP.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetSearchDnPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the password for the search DN account.
</summary>
            <param name="searchDnPassword">The search DN password.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetSearchDnAccount(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the searchDnAccount property.
</summary>
            <param name="searchDnAccount">The new search DN account.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetSearchAttributes(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the searchAttributes property.
</summary>
            <param name="searchAttributes">The new search attributes.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetObjectClasses(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the objectClasses property.
</summary>
            <param name="objectClasses">The new object classes.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.SetBaseDn(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the baseDn property.
</summary>
            <param name="baseDn">The new base DN.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.EnableTwoStageBinding">
            <summary>
Enables two stage binding authentication. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling two stage binding authentication.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.EnableSso">
            <summary>
Enables single sign-on. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling single sign-on.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.EnableServerTls">
            <summary>
Enables the SSL/TLS security for the LDAP server.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling the SSL/TLS security.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.EnableLdapUsersAndRoles">
            <summary>
Enables management of users and roles through LDAP. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling LDAP management.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.EnableLdap">
            <summary>
Enables LDAP username/password authentication.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling LDAP authentication.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.DisableTwoStageBinding">
            <summary>
Disables two stage binding authentication. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling two stage binding authentication.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.DisableSso">
            <summary>
Disables single sign-on. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling single sign-on.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.DisableServerTls">
            <summary>
Disables the SSL/TLS security for the LDAP server.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling the SSL/TLS security.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.DisableLdapUsersAndRoles">
            <summary>
Disables management of users and roles through LDAP. 
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling LDAP management.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.DisableLdap">
            <summary>
Disables LDAP username/password authentication.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling LDAP authentication.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Ldap.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Ldap">
            <summary>
Represents the LDAP configuration available.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Export.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Export.forceProtect">
            <summary>
When <c>true</c>, every new export will be created with password protection.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Export.SetProtectPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Set a global password for all new exports. Ignored if forceProtect is <c>false</c>.
</summary>
            <param name="password">The new global password for exports.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Export.SetForceProtect(System.Boolean)">
            <summary>
Sets the forceProtect property.
</summary>
            <param name="forceProtect">The new force protect value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Export.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Export.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Export.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Export">
            <summary>
Represents export configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Event.maxEvents">
            <summary>
The retention limit, in number of events, on logged events from any sources. Any events that exceed
this limit shall be deleted, starting with the oldest events and giving priority to retaining high
severity events.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Event.localEventLimit">
            <summary>
The retention limit, in days, on logged events. Any events that exceed this limit shall be deleted.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Event.aggregatedEventLimit">
            <summary>
The retention limit, in days, on logged events from aggregated sources. Any aggregated events that
exceed this limit shall be deleted.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.SetMaxEvents(System.Int32)">
            <summary>
Sets the maxEvents property.
</summary>
            <param name="maxEvents">The new max events limit.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.SetLocalEventLimit(System.Int32)">
            <summary>
Sets the localEventLimit property.
</summary>
            <param name="localEventLimit">The new local event limit, in days.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.SetAggregatedEventLimit(System.Int32)">
            <summary>
Sets the aggregatedEventLimit property.
</summary>
            <param name="aggregatedEventLimit">The new aggregated event limit, in days.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Event.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Event">
            <summary>
Represents event configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.transcastMethod">
            <summary>
The default communication method between data sources to Media Gateways and
between Media Gateways to clients.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.status">
            <summary>
The current configuration status of the entire cluster.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.availabilityMode">
            <summary>
The availability mode for the cluster, which determines how the nodes in the cluster are balanced and failover.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.statusCode">
            <summary>
The current configuration status code.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.nodeLicenseLimit">
            <summary>
The maximum number of allowed nodes under the current license. A license is required to expand the
number of nodes that can be added to this cluster beyond this number. Set to -1 if there is no limit.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.localEventLimit">
            <summary>
The retention limit, in days, on logged events. Any events that exceed this limit shall be deleted.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.aggregatedEventLimit">
            <summary>
The retention limit, in days, on logged events from aggregated sources. Any aggregated events that
exceed this limit shall be deleted.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.statusDescription">
            <summary>
The current configuration status description.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.mediaGatewayVirtualIp">
            <summary>
The virtual IP or hostname used for Media Gateway devices.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.mediaGatewayTranscast">
            <summary>
The default communication method between data sources to Media Gateways and
between Media Gateways to clients.
</summary>
            <remarks>
DEPRECATED: This has been replaced by <see cref="F:VxSdk.IVxConfiguration.Cluster.transcastMethod" /> and will be removed in the future.
</remarks>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.exportPathUsername">
            <summary>
The username used to access the network resource at the location specified by <see cref="F:VxSdk.IVxConfiguration.Cluster.exportPath" />.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.exportPath">
            <summary>
The UNC network path to save export media to.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.discoveryVirtualIp">
            <summary>
The virtual IP or hostname used for device discovery if the cluster is not governed by a VideoXpert
Accessory Server. The load balancer uses this address for discovery announcements and balances
responses across the cluster.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.coreVirtualIp">
            <summary>
The virtual IP or hostname used for VideoXpert Core devices.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.isStreamProxyEnabled">
            <summary>
Indicates whether camera streams will be proxied through the VxStorage that they are assigned to or
will always be pulled directly from the Media Gateway.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Cluster.isExportPathEnabled">
            <summary>
Indicates whether or not the alternative export storage location is enabled.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.ValidateExportPath(System.Boolean*!System.Runtime.CompilerServices.IsImplicitlyDereferenced,VxSdk.VxNetworkStorageInfo*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Validate a network storage path for availability as export storage.
</summary>
            <param name="isValid">
                <c>true</c> if the path is valid, otherwise <c>false</c>.</param>
            <param name="exportStorageInfo">The export storage path to validate.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of validating the SMTP information.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetTranscastMethod(VxSdk.VxMgTranscast.Value)">
            <summary>
Sets the default communication method between data sources to Media Gateways and between Media Gateways
to clients.
</summary>
            <param name="transcastMethod">The new transcast method value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetMediaGatewayVirtualIp(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the virtual IP or hostname to use for Media Gateway devices.
</summary>
            <param name="mediaGatewayVirtualIp">The new virtual ip/hostname value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetLocalEventLimit(System.Int32)">
            <summary>
Sets the retention limit, in days, on logged events. Any events that exceed this limit shall be deleted.
</summary>
            <param name="localEventLimit">The new local event limit.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the limit.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetExportPathUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the export path username. If set (and <see cref="F:VxSdk.IVxConfiguration.Cluster.isExportPathEnabled" /> is <c>true&gt;</c>), this
username will be used to access the network resource specified in the <see cref="F:VxSdk.IVxConfiguration.Cluster.exportPath" />.
</summary>
            <param name="exportPathUsername">The new export path username value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the username.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetExportPathPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the export path password. If set (and <see cref="F:VxSdk.IVxConfiguration.Cluster.isExportPathEnabled" /> is <c>true&gt;</c>), this
password will be used to access the network resource specified in the <see cref="F:VxSdk.IVxConfiguration.Cluster.exportPath" />.
</summary>
            <param name="exportPathPassword">The new export path password value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the password.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetExportPath(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the UNC network path to save export media to. If set (and <see cref="F:VxSdk.IVxConfiguration.Cluster.isExportPathEnabled" /> is
<c>true&gt;</c>), this location will be used instead of local cluster storage. If not set, local cluster
storage will be used for storage of export media.
</summary>
            <param name="exportPath">The new export path value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the path.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetDiscoveryVirtualIp(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the virtual IP or hostname to use for device discovery (if the cluster is not governed by a
VideoXpert Accessory Server). The load balancer uses this address for discovery announcements
and balances responses across the cluster.
</summary>
            <param name="discoveryVirtualIp">The new virtual ip/hostname value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetCoreVirtualIp(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the virtual IP or hostname to use for VxCore devices.
</summary>
            <param name="coreVirtualIp">The new virtual ip/hostname value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetAvailabilityMode(VxSdk.VxClusterAvailabilityMode.Value)">
            <summary>
Sets the availabilityMode property.
</summary>
            <param name="availabilityMode">The new availability mode value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.SetAggregatedEventLimit(System.Int32)">
            <summary>
Sets the retention limit, in days, on logged events from aggregated sources. Any aggregated events that
exceed this limit shall be deleted.
</summary>
            <param name="aggregatedEventLimit">The new aggregated event limit.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the limit.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.GetTimeConfig(VxSdk.IVxConfiguration.Time**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the time configuration for the cluster.
</summary>
            <param name="timeConfig">The time configuration.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.GetNodeConfigurations(VxSdk.VxCollection&lt;VxSdk.IVxConfiguration.Node****&gt;*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the configuration for the nodes that the cluster is composed of.
</summary>
            <param name="nodeCollection">A <see cref="T:VxSdk.VxCollection" /> of node configurations.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.EnableStreamProxy">
            <summary>
Enables the stream proxy, which will proxy camera streams through the VxStorage that they are assigned
to (if applicable).
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling the stream proxy.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.EnableExportPath">
            <summary>
Enables the alternative export storage location.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling the storage location.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.DisableStreamProxy">
            <summary>
Disables the stream proxy, so camera streams are always pulled directly from the Media Gateway.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling the stream proxy.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.DisableExportPath">
            <summary>
Disables the alternative export storage location.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling the storage location.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Cluster.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Cluster">
            <summary>
Represents cluster configuration attributes. This representation shall be identical within a
cluster, regardless of the node it was retrieved from.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Bookmark.retentionPolicy">
            <summary>
Specifies if and when an old bookmark is automatically removed from the system.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Bookmark.retentionLimit">
            <summary>
The retention limit, in days, for bookmark; a value of 0 will disable the limit. Any bookmark
that exceeds this limit will be deleted. Ignored if the <see cref="F:VxSdk.IVxConfiguration.Bookmark.retentionPolicy" /> is not set
to <c>kDeleteAfterLimit</c>.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Bookmark.autoUnlock">
            <summary>
Automatically unlock any locked bookmark that has a <c>IVxBookmarkLock::endTime</c> older than this
number of days. A value of 0 will disable automatic unlocking.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.SetRetentionPolicy(VxSdk.VxBookmarkRetentionPolicy.Value)">
            <summary>
Sets the retentionPolicy property.
</summary>
            <param name="retentionPolicy">The new retention policy.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.SetRetentionLimit(System.Int32)">
            <summary>
Sets the retentionLimit property.
</summary>
            <param name="retentionLimit">The new retention limit, in days.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.SetAutoUnlock(System.Int32)">
            <summary>
Sets the autoUnlock property.
</summary>
            <param name="autoUnlock">The new auto unlock time, in days, or 0 to disable.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Bookmark.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Bookmark">
            <summary>
Represents bookmark configuration.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Auth.passwordExpiration">
            <summary>
The amount of time, in days, at which a user password will expire (from when it was last set/changed).
Ignored if <see cref="F:VxSdk.IVxConfiguration.Auth.isPasswordExpirationEnabled" /> is <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Auth.minPasswordLength">
            <summary>
The minimum length allowed for a new user password.
</summary>
        </member>
        <member name="F:VxSdk.IVxConfiguration.Auth.isPasswordExpirationEnabled">
            <summary>
Indicates whether or not password expiration is enabled for all users.
</summary>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.SetUser(VxSdk.VxNewUser*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Sets the user on the physical host device (creating/replacing as necessary). If successful, device username will be set to match.
</summary>
            <param name="user">The user to set on the device.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.SetPasswordExpiration(System.Int32)">
            <summary>
Sets the passwordExpiration property.
</summary>
            <param name="passwordExpiration">The amount of time, in days.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.SetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.Boolean)">
            <summary>
Sets the password on the physical host device (for the current username). If successful, device password will be set to match.
</summary>
            <param name="newPassword">New password being requested. Must contain more than 7 characters.</param>
            <param name="mustChangePassword">If <c>true</c>, the password will immediately be expired the first time it is used to login.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>
The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.
</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.EnablePasswordExpiration">
            <summary>
Enables password expiration for all users.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of enabling password expiration.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.DisablePasswordExpiration">
            <summary>
Disables password expiration for all users.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of disabling password expiration.</returns>
        </member>
        <member name="M:VxSdk.IVxConfiguration.Auth.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxConfiguration.Auth">
            <summary>
Represents authorization configuration.
</summary>
        </member>
        <member name="T:VxSdk.IVxConfiguration">
            <summary>
Represents the configuration of a device.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.phoneNumbers">
            <summary>
The telephone number(s) for the user.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.phoneNumberSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewUser.phoneNumbers" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.password">
            <summary>
The password to associate with the user. Must contain more than 7 characters.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.note">
            <summary>
Supplemental information about the user.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.name">
            <summary>
The unique name of the user that this resource is representing.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.lastName">
            <summary>
The last name of user.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.firstName">
            <summary>
The first name of user.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.employeeId">
            <summary>
The employee identifier associated with the user.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.email">
            <summary>
The email address of the user.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.domain">
            <summary>
The network domain for the user. Defaults to LOCAL.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.mustChangePassword">
            <summary>
If <c>true</c>, the new user will be forced to change their password the first time they log in.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.isPasswordExpirationDisabled">
            <summary>
If <c>true</c>, password expiration will be disable for this account; <c>false</c> will use the
global password expiration setting for this account.
</summary>
        </member>
        <member name="F:VxSdk.VxNewUser.canBypassLdap">
            <summary>
If <c>true</c>, the user can login to the system using local credentials instead of using the LDAP
authentication.
</summary>
        </member>
        <member name="M:VxSdk.VxNewUser.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewUser.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewUser" /> struct.
</summary>
        </member>
        <member name="M:VxSdk.VxNewUser.#ctor(VxSdk.VxNewUser!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewUser" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewUser.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewUser" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewUser">
            <summary>
Represents a new user to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxPhoneNumber.type">
            <summary>
The type of phone number.
</summary>
        </member>
        <member name="F:VxSdk.VxPhoneNumber.number">
            <summary>
The phone number.
</summary>
        </member>
        <member name="M:VxSdk.VxPhoneNumber.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxPhoneNumber.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxPhoneNumber" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxPhoneNumber.#ctor(VxSdk.VxPhoneNumber!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPhoneNumber" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxPhoneNumber.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPhoneNumber" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxPhoneNumber">
            <summary>
Represents a telephone number for a user.
</summary>
        </member>
        <member name="M:VxSdk.IVxVolume.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.used">
            <summary>
The amount of storage in use (in MB).
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.total">
            <summary>
The total amount of storage present (in MB).
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.buffer">
            <summary>
The percentage of the volume to keep free.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.username">
            <summary>
The username for access to the network path. Note: Ignored if the <see cref="F:VxSdk.IVxVolume.path" /> is not a UNC path.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.path">
            <summary>
The fully qualified Windows directory path.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.id">
            <summary>
The unique identifier of the volume.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.domain">
            <summary>
The domain for the volume network path. Note: Ignored if the <see cref="F:VxSdk.IVxVolume.path" /> is not a UNC path.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.isOnline">
            <summary>
Indicates whether or not the storage is online and available.
</summary>
        </member>
        <member name="F:VxSdk.IVxVolume.isBandwidthReserved">
            <summary>
Indicates whether or not this is a NAS volume that shares bandwidth with data streams (bandwidth will be
reserved for NAS operations).
</summary>
        </member>
        <member name="M:VxSdk.IVxVolume.SetUsername(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the username property.
</summary>
            <param name="username">The new username value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.SetPath(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the path property.
</summary>
            <param name="path">The new path value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.SetPassword(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the password used to access to the network path. Note: Ignored if the <see cref="F:VxSdk.IVxVolume.path" /> is not a UNC path.
</summary>
            <param name="password">The password value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.SetIsBandwidthReserved(System.Boolean)">
            <summary>
Sets the isBandwidthReserved property.
</summary>
            <param name="isBandwidthReserved">
                <c>true</c> to share bandwidth with data streams, otherwise <c>false</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.SetDomain(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*)">
            <summary>
Sets the domain property.
</summary>
            <param name="domain">The new domain value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.SetBuffer(System.Single)">
            <summary>
Sets the buffer property.
</summary>
            <param name="buffer">The new buffer percentage value.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of setting the property.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.Refresh">
            <summary>
Refreshes this objects member values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects member values.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.GetVolumeGroup(VxSdk.IVxVolumeGroup**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the <see cref="T:VxSdk.IVxVolumeGroup" /> that this volume is in, if any.
</summary>
            <param name="volumeGroup">The volume group if present, otherwise <c>nullptr</c>.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.GetLimits(VxSdk.VxLimits**!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Gets the limits related to this resource.
</summary>
            <param name="limits">The limits related to this resource.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of the request.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.DeleteVolume">
            <summary>
Delete this volume from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting the volume.</returns>
        </member>
        <member name="M:VxSdk.IVxVolume.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxVolume">
            <summary>
Represents a storage volume.
</summary>
        </member>
        <member name="M:VxSdk.IVxFileRecovery.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="F:VxSdk.IVxFileRecovery.status">
            <summary>
The current status of the file recovery.
</summary>
        </member>
        <member name="F:VxSdk.IVxFileRecovery.filesRecovered">
            <summary>
The number of files recovered.
</summary>
        </member>
        <member name="F:VxSdk.IVxFileRecovery.statusMessage">
            <summary>
The message about the current status of the file recovery, if any.
</summary>
        </member>
        <member name="M:VxSdk.IVxFileRecovery.Trigger(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
            <summary>
Triggers a file recovery.
</summary>
            <param name="volumeId">The unique identifier of the volume to recover files from.</param>
            <param name="startTime">The start time; files created before this time will not be recovered.</param>
            <param name="endTime">The end time; files created after this time will not be recovered.</param>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of triggering the file recovery.</returns>
        </member>
        <member name="M:VxSdk.IVxFileRecovery.Refresh">
            <summary>
Refreshes this objects values by retrieving its current information from the VideoXpert system.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of refreshing this objects values.</returns>
        </member>
        <member name="M:VxSdk.IVxFileRecovery.Halt">
            <summary>
Halts any file recovery in process.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of halting the file recovery process.</returns>
        </member>
        <member name="M:VxSdk.IVxFileRecovery.Delete">
            <summary>
Deletes this instance.
</summary>
            <returns>The <see cref="T:VxSdk.VxResult.Value">Result</see> of deleting this instance.</returns>
        </member>
        <member name="T:VxSdk.IVxFileRecovery">
            <summary>
Represents a file recovery controller/monitoring resource for a recorder.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolume.buffer">
            <summary>
The percentage of the volume to keep free.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolume.username">
            <summary>
The username for access to the network path. Note: Ignored if the <see cref="F:VxSdk.VxNewVolume.path" /> is not a UNC path.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolume.path">
            <summary>
The fully qualified Windows directory path.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolume.password">
            <summary>
The password for access to the network path. Note: Ignored if the <see cref="F:VxSdk.VxNewVolume.path" /> is not a UNC path.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolume.domain">
            <summary>
The domain for the volume network path. Note: Ignored if the <see cref="F:VxSdk.VxNewVolume.path" /> is not a UNC path.
</summary>
        </member>
        <member name="F:VxSdk.VxNewVolume.isBandwidthReserved">
            <summary>
Indicates whether or not this is a NAS volume that shares bandwidth with data streams (bandwidth will be
reserved for NAS operations).
</summary>
        </member>
        <member name="M:VxSdk.VxNewVolume.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewVolume.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewVolume" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewVolume.#ctor(VxSdk.VxNewVolume!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewVolume" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewVolume.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewVolume" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewVolume">
            <summary>
Represents a new volume to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxSnapshotFilter.key">
            <summary>
The filter key.
</summary>
        </member>
        <member name="F:VxSdk.VxSnapshotFilter.value">
            <summary>
The filter value.
</summary>
        </member>
        <member name="M:VxSdk.VxSnapshotFilter.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxSnapshotFilter.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxSnapshotFilter" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxSnapshotFilter.#ctor(VxSdk.VxSnapshotFilter!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxSnapshotFilter" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxSnapshotFilter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxSnapshotFilter" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxSnapshotFilter">
            <summary>
Represents a snapshot filter to be used when taking a snapshot.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.properties">
            <summary>
Optional additional information related to the event.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.propertySize">
            <summary>
The size of <see cref="F:VxSdk.VxNewEvent.properties" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.time">
            <summary>
The time at which the situation occurred.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.sourceDeviceId">
            <summary>
The unique identifier of the device that the situation occurred on.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.situationType">
            <summary>
The identifier for the type of situation that led to this new event.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.id">
            <summary>
The unique identifier of the event. If not provided, the server will create this value.
</summary>
        </member>
        <member name="F:VxSdk.VxNewEvent.generatorDeviceId">
            <summary>
The unique identifier of the device that generated this event.
</summary>
        </member>
        <member name="M:VxSdk.VxNewEvent.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewEvent.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewEvent" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewEvent.#ctor(VxSdk.VxNewEvent!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewEvent" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewEvent.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewEvent" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewEvent">
            <summary>
Represents a request for a new event to be generated. The event will be generated based upon the event data,
its situation configuration, and will receive a unique identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDigitalPtzPreset.z">
            <summary>
The Z (zoom) coordinate absolute position relative to the 0 position. The 0 position is minimum zoom while
the 100 position is maximum zoom.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDigitalPtzPreset.y">
            <summary>
The Y (tilt) coordinate absolute position, in degrees, relative to the (0,0) position The -180 position is
bottommost while the 180 position is topmost.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDigitalPtzPreset.x">
            <summary>
The X (pan) coordinate absolute position, in degrees, relative to the (0,0) position. The -180 position is
leftmost while the 180 position is rightmost.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDigitalPtzPreset.name">
            <summary>
The friendly name of the PTZ preset.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDigitalPtzPreset.description">
            <summary>
The friendly description for the new PTZ preset.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDigitalPtzPreset.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDigitalPtzPreset.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewDigitalPtzPreset" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDigitalPtzPreset.#ctor(VxSdk.VxNewDigitalPtzPreset!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDigitalPtzPreset" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewDigitalPtzPreset.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDigitalPtzPreset" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewDigitalPtzPreset">
            <summary>
Represents a new digital PTZ preset.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDeviceAssignment.dataSourceIdSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewDeviceAssignment.dataSourceIds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDeviceAssignment.dataSourceIds">
            <summary>
The data sources to assign.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDeviceAssignment.volumeGroupId">
            <summary>
The unique identifier of the volume group to use for this device. If not provided, a volume group will be
selected automatically.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDeviceAssignment.deviceId">
            <summary>
The unique identifier of the device to assign.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDeviceAssignment.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDeviceAssignment.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewDeviceAssignment" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDeviceAssignment.#ctor(VxSdk.VxNewDeviceAssignment!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDeviceAssignment" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewDeviceAssignment.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDeviceAssignment" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewDeviceAssignment">
            <summary>
Represents a new device assignment to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDrawing.name">
            <summary>
The friendly name of the drawing.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDrawing.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDrawing.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewDrawing" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDrawing.#ctor(VxSdk.VxNewDrawing!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDrawing" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewDrawing.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDrawing" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewDrawing">
            <summary>
Represents a new drawing to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDataObject.data">
            <summary>
The data to add to the data object.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDataObject.clientType">
            <summary>
The client type identifier. Recommend using the Java package naming convention.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDataObject.isPrivate">
            <summary>
Indicates whether this resource is owned by a user. If <c>true</c>, the data object will be owned by the
user submitting the request.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDataObject.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDataObject.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewDataObject" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDataObject.#ctor(VxSdk.VxNewDataObject!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDataObject" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewDataObject.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDataObject" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewDataObject">
            <summary>
Represents a new data object to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.type">
            <summary>
The particular type of the device.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.endpointsSize">
            <summary>
The size of <see cref="F:VxSdk.VxNewDevice.endpoints" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.endpoints">
            <summary>
List of source URIs that the device will support. If the device type is <see cref="F:kGeneric" />
then at least 1 URI must be provided. The URI must be unique, otherwise <see cref="F:kConflict" />
will be returned.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.version">
            <summary>
The current version of software running on the device, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.vendor">
            <summary>
The device vendor, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.username">
            <summary>
The account username used to communicate with the device, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.serial">
            <summary>
The serial number of the device, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.port">
            <summary>
The host port, if non-default. The combination of host, ip, port and type must be unique, otherwise
<see cref="F:kConflict" /> will be returned.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.password">
            <summary>
The account password used to communicate with the device, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.name">
            <summary>
The friendly name of the device.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.model">
            <summary>
The device model name, if any.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.ip">
            <summary>
The primary IP address of the device. Ignored if host is also provided. The combination of ip, port and
type must be unique, otherwise <see cref="F:kConflict" /> will be returned.
<remarks>DEPRECATED. Use host instead.</remarks></summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.id">
            <summary>
The id of this device
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.host">
            <summary>
Host address of the device. If set, takes precedence over the ip. The combination of host, port and
type must be unique, otherwise <see cref="F:kConflict" /> will be returned.
<para> NOTE: One of either host or ip must be provided. </para></summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.driverType">
            <summary>
The type identifier of the driver to use for the device when assigning it to a data storage.
</summary>
        </member>
        <member name="F:VxSdk.VxNewDevice.shouldAutoCommission">
            <summary>
                <c>true</c> to have this device automatically commissioned when created.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDevice.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDevice.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewDevice" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewDevice.#ctor(VxSdk.VxNewDevice!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDevice" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewDevice.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewDevice" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewDevice">
            <summary>
Represents a new device to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewClip.startTime">
            <summary>
The time at which to begin the clip.
</summary>
        </member>
        <member name="F:VxSdk.VxNewClip.endTime">
            <summary>
The time at which to end the clip.
</summary>
        </member>
        <member name="F:VxSdk.VxNewClip.dataStorageId">
            <summary>
The unique identifier of the data storage to retrieve the data from. The host device type must be
<see cref="F:kCamera" /> (it must be a camera supporting edge storage).
</summary>
        </member>
        <member name="F:VxSdk.VxNewClip.dataSourceId">
            <summary>
The unique identifier of the data source that generated the desired data.
</summary>
        </member>
        <member name="M:VxSdk.VxNewClip.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewClip.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewClip" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewClip.#ctor(VxSdk.VxNewClip!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewClip" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewClip.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewClip" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewClip">
            <summary>
Represents request to create a new clip on a data storage using data from another data storage. The new clip
will have the same <see cref="T:VxSdk.VxRecordingType.Value">recording type</see> as the data it is based on,
defaulting to kTimed. Typically this is used to save data from a camera supporting edge storage to a recorder.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.time">
            <summary>
The time at which the point of interest occurred.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.name">
            <summary>
The friendly name of the bookmark.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.lockStartTime">
            <summary>
The start time of the media to lock.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.lockEndTime">
            <summary>
The end time of the media to lock.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.groupId">
            <summary>
The unique identifier of the associated bookmark group. Typically used to identify related bookmarks (such
as those bookmarking the same time on audio and video).
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.description">
            <summary>
The friendly description of the bookmark.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.dataSourceId">
            <summary>
The unique identifier of the data source to associate with the bookmark.
</summary>
        </member>
        <member name="F:VxSdk.VxNewBookmark.isLocked">
            <summary>
Indicates whether this bookmark will be locked, which will prevent the media it locks from being garbage
collected on recorders.
</summary>
        </member>
        <member name="M:VxSdk.VxNewBookmark.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewBookmark.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewBookmark" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewBookmark.#ctor(VxSdk.VxNewBookmark!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewBookmark" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewBookmark.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewBookmark" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewBookmark">
            <summary>
Represents a new bookmark to be created.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticSession.source">
            <summary>
The RTSP URI to use as the source for the analytic session. This value can be used instead
of <see cref="F:VxSdk.VxNewAnalyticSession.dataEncodingId" /> to determine which stream to use. This value takes priority over
the <see cref="F:VxSdk.VxNewAnalyticSession.dataEncodingId" /> if both values are provided. Note: This field is required when sending
to a <see cref="F:kAnalyticServer" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticSession.id">
            <summary>
The unique identifier of the analytic session. The server will generate this value if not supplied.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticSession.deviceId">
            <summary>
The unique identifier of the Device hosting this analytic session. The device must be of
type <see cref="F:kAnalyticServer" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticSession.dataSourceId">
            <summary>
The unique identifier of the video data source for this analytic session. The source URI should be pointing
to an RTSP stream on this DataSource.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticSession.dataEncodingId">
            <summary>
The unique identifier specifying which data encoding to use as a source. This value can be used instead
of <see cref="F:VxSdk.VxNewAnalyticSession.source" /> to determine which stream to use.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticSession.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticSession.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewAnalyticSession" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticSession.#ctor(VxSdk.VxNewAnalyticSession!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewAnalyticSession" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewAnalyticSession.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewAnalyticSession" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewAnalyticSession">
            <summary>
Represents a request for the creation of a new analytic session.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticConfig.size">
            <summary>
Specifies the resolution of the grid used for all analytic behaviors. The origin
for the grid is the upper left corner.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticConfig.minConfidence">
            <summary>
Defines the minimum confidence filtering value for detected objects in a video
scene. Objects that have a detected confidence value less than the minimum will
not be processed by the associated list of analytic behaviors.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticConfig.ptzPresetName">
            <summary>
Specifies the name of the PTZ preset that this configuration relates to. 
PTZ cameras supporting analytics can only be configured on PTZ presets.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticConfig.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticConfig.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewAnalyticConfig" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticConfig.#ctor(VxSdk.VxNewAnalyticConfig!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewAnalyticConfig" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewAnalyticConfig.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewAnalyticConfig" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewAnalyticConfig">
            <summary>
Represents a request for the creation of a new analytic config.
</summary>
        </member>
        <member name="F:VxSdk.VxResolution.width">
            <summary>
The width in pixels.
</summary>
        </member>
        <member name="F:VxSdk.VxResolution.height">
            <summary>
The height in pixels.
</summary>
        </member>
        <member name="M:VxSdk.VxResolution.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxResolution.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxResolution" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxResolution.#ctor(VxSdk.VxResolution!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxResolution" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxResolution.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxResolution" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxResolution">
            <summary>
Represents a resolution in pixels.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.objectWrongWayZone">
            <summary>
The object wrong way zone data used when <see cref="F:VxSdk.VxNewAnalyticBehavior.behaviorType" /> is set to
<see cref="F:kObjectWrongWay" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.objectLineCounter">
            <summary>
The object line counter data used when <see cref="F:VxSdk.VxNewAnalyticBehavior.behaviorType" /> is set to
<see cref="F:kObjectLineCounter" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.objectInZone">
            <summary>
The object zone data used to configure analytics of <see cref="F:VxSdk.VxNewAnalyticBehavior.behaviorType" /> is set
to <see cref="F:kObjectInZone" />.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.objectType">
            <summary>
The type of object this analytic pertains to.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.behaviorType">
            <summary>
The type of analytic behavior being performed.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.severity">
            <summary>
The severity value for events generated from this analytic behavior, from 1 (highest) to 10 (lowest).
If set, overrides the corresponding situation severity.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.name">
            <summary>
The friendly name of the analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.id">
            <summary>
The unique identifier of the analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.VxNewAnalyticBehavior.isEnabled">
            <summary>
Indicates whether or not this analytic behavior is enabled.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticBehavior.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticBehavior.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNewAnalyticBehavior" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNewAnalyticBehavior.#ctor(VxSdk.VxNewAnalyticBehavior!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewAnalyticBehavior" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNewAnalyticBehavior.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNewAnalyticBehavior" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNewAnalyticBehavior">
            <summary>
Represents a request for the creation of a new analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectWrongWayZone.zone">
            <summary>
Ordered list of points that make up the wrong-way zone. The zone is defined as an simple convex
quadrilateral. Do NOT repeat the starting vertex at the end of the list–it is implicitly included.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectWrongWayZone.vector">
            <summary>
Defines the wrong-way zone’s vector. The vector points in the direction that indicates the
correct direction of flow. An objects heading opposite the vector are considered to be heading
in the wrong direction.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectWrongWayZone.zoneSize">
            <summary>
The size of <see cref="F:VxSdk.VxObjectWrongWayZone.zone" />.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectWrongWayZone.minTriggerAngle">
            <summary>
Defines the minimum angle between a detected object’s trajectory vector and the wrong-way
zone’s vector. Any object that is traveling at an angle &gt;= the minimum from the reference
vector will be considered heading in the wrong-direction.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectWrongWayZone.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectWrongWayZone.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxObjectWrongWayZone" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectWrongWayZone.#ctor(VxSdk.VxObjectWrongWayZone!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxObjectWrongWayZone" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxObjectWrongWayZone.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxObjectWrongWayZone" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxObjectWrongWayZone">
            <summary>
Represents the configuration for an object wrong way type analytic behavior. Wrong-way zones
generate events for all objects that are traveling opposite of a defined correct direction.
</summary>
        </member>
        <member name="F:VxSdk.VxVector.y">
            <summary>
Starting y-axis coordinate value.
</summary>
        </member>
        <member name="F:VxSdk.VxVector.x">
            <summary>
Starting x-axis coordinate value.
</summary>
        </member>
        <member name="F:VxSdk.VxVector.angle">
            <summary>
The direction as a counter-clockwise angle, in degrees, from the horizontal axis.
</summary>
        </member>
        <member name="M:VxSdk.VxVector.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxVector.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxVector" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxVector.#ctor(VxSdk.VxVector!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxVector" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxVector.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxVector" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxVector">
            <summary>
Represents a starting coordinate and the angle from the horizontal axis the vector is pointing.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectInZone.vertices">
            <summary>
Ordered list of points that make up the zone. Must contain at least 3 points, which together
specify the closed polygonal zone within which to look for objects of the prescribed type.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectInZone.verticesSize">
            <summary>
The size of <see cref="F:VxSdk.VxObjectInZone.vertices" />.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectInZone.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectInZone.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxObjectInZone" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectInZone.#ctor(VxSdk.VxObjectInZone!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxObjectInZone" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxObjectInZone.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxObjectInZone" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxObjectInZone">
            <summary>
Represents the configuration for an object in zone type of analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.startPoint">
            <summary>
The starting coordinate for the object counting line.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.endPoint">
            <summary>
The ending coordinate for the object counting line.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.lineCounterType">
            <summary>
Defines the type of line counter (i.e. unidirectional, bidirectional, 
or omnidirectional). The type defines how the line counter increments 
and maintains it’s counts.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.maxCountThreshold">
            <summary>
The maximum count threshold that must be met before an event is triggered. 
This value is used by both the bidirectional capacity events and the 
sliding window events.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.eventWindowSecs">
            <summary>
Define the event’s time window for testing if the counts 
maximum threshold is met within this window. For example, 
if <see cref="F:VxSdk.VxObjectLineCounter.maxCountThreshold" /> is 100 and <see cref="F:VxSdk.VxObjectLineCounter.eventWindowSecs" /> 
is 3600 then an event would be generated if 100 objects cross a 
counting line over the last hour. Once the hour elapses the 
event trigger’s base count is reset and the count window slides to the 
next hour and starts over. Ignored if <see cref="F:VxSdk.VxObjectLineCounter.maxCountThreshold" /> is not set.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.rightCountLabel">
            <summary>
Friendly name associated with a bidirectional counter’s right count.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.leftCountLabel">
            <summary>
Friendly name associated with a bidirectional counter’s left count.
</summary>
        </member>
        <member name="F:VxSdk.VxObjectLineCounter.eventsEnabled">
            <summary>
If true, line counter specific events for this line counter will be enabled.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectLineCounter.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectLineCounter.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxObjectLineCounter" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxObjectLineCounter.#ctor(VxSdk.VxObjectLineCounter!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxObjectLineCounter" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxObjectLineCounter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxObjectLineCounter" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxObjectLineCounter">
            <summary>
Represents the configuration for an object line counter type of analytic behavior.
</summary>
        </member>
        <member name="F:VxSdk.VxPoint.y">
            <summary>
The Y-axis coordinate value.
</summary>
        </member>
        <member name="F:VxSdk.VxPoint.x">
            <summary>
The X-axis coordinate value.
</summary>
        </member>
        <member name="M:VxSdk.VxPoint.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxPoint.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxPoint" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxPoint.#ctor(VxSdk.VxPoint!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPoint" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxPoint.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxPoint" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxPoint">
            <summary>
Represents a location on a Cartesian grid.
</summary>
        </member>
        <member name="F:VxSdk.VxNetworkStorageInfo.username">
            <summary>
The username for access to the resource.
</summary>
        </member>
        <member name="F:VxSdk.VxNetworkStorageInfo.path">
            <summary>
The UNC network path of the resource.
</summary>
        </member>
        <member name="F:VxSdk.VxNetworkStorageInfo.password">
            <summary>
The password for access to the resource.
</summary>
        </member>
        <member name="M:VxSdk.VxNetworkStorageInfo.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxNetworkStorageInfo.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxNetworkStorageInfo" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxNetworkStorageInfo.#ctor(VxSdk.VxNetworkStorageInfo!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNetworkStorageInfo" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxNetworkStorageInfo.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxNetworkStorageInfo" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxNetworkStorageInfo">
            <summary>
Represents information about a network storage resource.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorPosition.position">
            <summary>
The position and size of the monitor.
</summary>
        </member>
        <member name="F:VxSdk.VxMonitorPosition.monitorId">
            <summary>
The unique identifier of the monitor that this position represents.
</summary>
        </member>
        <member name="M:VxSdk.VxMonitorPosition.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxMonitorPosition.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxMonitorPosition" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxMonitorPosition.#ctor(VxSdk.VxMonitorPosition!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxMonitorPosition" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxMonitorPosition.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxMonitorPosition" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxMonitorPosition">
            <summary>
Represents a monitor position that describes where a monitor resides in a coordinate plane (specifically the
IV quadrant of a Cartesian plane where 0,0 is the top left point).
</summary>
        </member>
        <member name="F:VxSdk.VxRect.width">
            <summary>
The width value.
</summary>
        </member>
        <member name="F:VxSdk.VxRect.top">
            <summary>
The top value.
</summary>
        </member>
        <member name="F:VxSdk.VxRect.left">
            <summary>
The left value.
</summary>
        </member>
        <member name="F:VxSdk.VxRect.height">
            <summary>
The height value.
</summary>
        </member>
        <member name="M:VxSdk.VxRect.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxRect.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxRect" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxRect.#ctor(VxSdk.VxRect!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRect" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxRect.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxRect" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxRect">
            <summary>
Represents rectangular integer coordinates indicated by a combination of left, top, width, and height values.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.port">
            <summary>
The VideoXpert system port.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.username">
            <summary>
The username to login with.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.password">
            <summary>
The password to login with.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.licenseKey">
            <summary>
The license key to use.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.ipAddress">
            <summary>
The VideoXpert system IP.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.authToken">
            <summary>
The authentication token to use.
</summary>
        </member>
        <member name="F:VxSdk.VxLoginInfo.useSsl">
            <summary>
Indicates whether the connection will use SSL.
</summary>
        </member>
        <member name="M:VxSdk.VxLoginInfo.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLoginInfo.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLoginInfo" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLoginInfo.#ctor(VxSdk.VxLoginInfo!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLoginInfo" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLoginInfo.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLoginInfo" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLoginInfo">
            <summary>
Represents the information needed to log in to a VideoXpert system.
</summary>
        </member>
        <member name="F:VxSdk.VxLinkedPtzInfo.name">
            <summary>
The name of the tracking data source.
</summary>
        </member>
        <member name="F:VxSdk.VxLinkedPtzInfo.ip">
            <summary>
The IP of the tracking data source.
</summary>
        </member>
        <member name="M:VxSdk.VxLinkedPtzInfo.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLinkedPtzInfo.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLinkedPtzInfo" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLinkedPtzInfo.#ctor(VxSdk.VxLinkedPtzInfo!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLinkedPtzInfo" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLinkedPtzInfo.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLinkedPtzInfo" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLinkedPtzInfo">
            <summary>
Represents linked PTZ information.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCounts.lineCounts">
            <summary>
The list of line counts.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCounts.lineCountSize">
            <summary>
The size of <see cref="F:VxSdk.VxLineCounts.lineCounts" />.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCounts.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCounts.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLineCounts" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCounts.#ctor(VxSdk.VxLineCounts!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLineCounts" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLineCounts.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLineCounts" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLineCounts">
            <summary>
Represents the list of line count values requested.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCountingRequest.interval">
            <summary>
The summarization interval to use for the counter values.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCountingRequest.analyticBehaviorIdSize">
            <summary>
The size of <see cref="F:VxSdk.VxLineCountingRequest.analyticBehaviorIds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCountingRequest.startTime">
            <summary>
The start time of the line count interval.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCountingRequest.endTime">
            <summary>
The end time of the line count interval. If not specified, the current time will be used.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCountingRequest.analyticBehaviorIds">
            <summary>
The list of unique identifiers of the analytic behaviors to report line counters for.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCountingRequest.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCountingRequest.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLineCountingRequest" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCountingRequest.#ctor(VxSdk.VxLineCountingRequest!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLineCountingRequest" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLineCountingRequest.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLineCountingRequest" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLineCountingRequest">
            <summary>
Represents a request for line count values.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.outCountCorrection">
            <summary>
The correction value for the <see cref="F:VxSdk.VxLineCount.outCount" /> of bi-directional counter types.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.outCount">
            <summary>
The summarized out line counter value for bi-directional counter types.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.inCountCorrection">
            <summary>
The correction value for the <see cref="F:VxSdk.VxLineCount.inCount" /> of bi-directional counter types.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.inCount">
            <summary>
The summarized in line counter value for bi-directional counter types.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.countCorrection">
            <summary>
The correction value for the <see cref="F:VxSdk.VxLineCount.count" /> of uni-directional and omni-directional counter types.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.count">
            <summary>
The summarized line counter value for uni-directional and omni-directional counter types.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.startTime">
            <summary>
The start time of the line count interval.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.endTime">
            <summary>
The end time of the line count interval.
</summary>
        </member>
        <member name="F:VxSdk.VxLineCount.analyticBehaviorId">
            <summary>
The unique identifier of the analytic behavior this line count information is for.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCount.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCount.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLineCount" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLineCount.#ctor(VxSdk.VxLineCount!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLineCount" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLineCount.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLineCount" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLineCount">
            <summary>
Represents line counting information based on a line counting request. A line count is the number of times an
identified object has crossed a configured object line counter within an interval specified in the line
counting request.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.stringLimits">
            <summary>
The collection of string limits.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.objectLimits">
            <summary>
The collection of object limits.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.listLimits">
            <summary>
The collection of list limits.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.integerLimits">
            <summary>
The collection of integer limits.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.floatLimits">
            <summary>
The collection of float limits.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.booleanLimits">
            <summary>
The collection of boolean limits.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.stringLimitsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.stringLimits" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.objectLimitsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.objectLimits" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.listLimitsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.listLimits" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.integerLimitsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.integerLimits" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.floatLimitsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.floatLimits" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.booleanLimitsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.booleanLimits" />.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.#ctor(VxSdk.VxLimits!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits" /> struct.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.String.optionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.String.options" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.String.options">
            <summary>
A list of valid values that may be applied to the field.
If no values are present, this indicates that the field is currently read-only.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.String.fieldName">
            <summary>
The name of the field that this string limit applies to.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.String.defaultValue">
            <summary>
The field’s default value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.String.hasDefaultValue">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.String.defaultValue" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.String.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.String.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits.String" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.String.#ctor(VxSdk.VxLimits.String!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.String" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.String.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.String" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits.String">
            <summary>
Represents the valid values for a string field. 
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Object.optionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.Object.options" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Object.options">
            <summary>
A list of valid values that may be applied to the field.
If no values are present, this indicates that the field is currently read-only.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Object.fieldName">
            <summary>
The name of the field that this object limit applies to.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Object.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Object.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits.Object" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Object.#ctor(VxSdk.VxLimits.Object!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Object" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.Object.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Object" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits.Object">
            <summary>
Represents the valid values for an object field. 
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.List.minItems">
            <summary>
The minimum number of items that may appear in the list.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.List.maxItems">
            <summary>
The maximum number of items that may appear in the list.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.List.fieldName">
            <summary>
The name of the field that this list limit applies to.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.List.hasMinItems">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.List.minItems" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.List.hasMaxItems">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.List.maxItems" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.List.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.List.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits.List" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.List.#ctor(VxSdk.VxLimits.List!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.List" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.List.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.List" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits.List">
            <summary>
Represents the valid values for an array field. 
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.min">
            <summary>
The field’s minimum valid value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.max">
            <summary>
The field’s maximum valid value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.defaultValue">
            <summary>
The field’s default value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.fieldName">
            <summary>
The name of the field that this integer limit applies to.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.hasMin">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Integer.min" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.hasMax">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Integer.max" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Integer.hasDefaultValue">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Integer.defaultValue" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Integer.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Integer.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits.Integer" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Integer.#ctor(VxSdk.VxLimits.Integer!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Integer" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.Integer.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Integer" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits.Integer">
            <summary>
Represents the valid values for a numeric integer field.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.optionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.Float.options" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.min">
            <summary>
The field’s minimum valid value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.max">
            <summary>
The field’s maximum valid value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.defaultValue">
            <summary>
The field’s default value.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.fieldName">
            <summary>
The name of the field that this float limit applies to.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.options">
            <summary>
A list of valid values that may be applied to the field.
If no values are present, this indicates that the field is currently read-only.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.hasMin">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Float.min" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.hasMax">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Float.max" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Float.hasDefaultValue">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Float.defaultValue" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Float.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Float.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits.Float" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Float.#ctor(VxSdk.VxLimits.Float!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Float" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.Float.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Float" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits.Float">
            <summary>
Represents the valid values for a numeric float field.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Boolean.optionsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLimits.Boolean.options" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Boolean.fieldName">
            <summary>
The name of the field that this boolean limit applies to.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Boolean.options">
            <summary>
A list of valid values that may be applied to the field.
If no values are present, this indicates that the field is currently read-only.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Boolean.hasDefaultValue">
            <summary>
                <c>true</c> if a <see cref="F:VxSdk.VxLimits.Boolean.defaultValue" /> has been set, otherwise <c>false</c>.
</summary>
        </member>
        <member name="F:VxSdk.VxLimits.Boolean.defaultValue">
            <summary>
The field’s default value.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Boolean.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Boolean.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLimits.Boolean" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLimits.Boolean.#ctor(VxSdk.VxLimits.Boolean!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Boolean" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLimits.Boolean.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLimits.Boolean" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits.Boolean">
            <summary>
Represents the valid values for a boolean field.
</summary>
        </member>
        <member name="T:VxSdk.VxLimits">
            <summary>
Represents a map of limits related to a resource.
<remarks>
A resource will supply a limit for any field that is supported but does not have a valid value available.
The presence of a limit indicates that the associated field is supported, regardless of whether the field
is present in the resource representation or not.
</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLicenseSup.events">
            <summary>
List of events that are related to this license software upgrade plan; an audit trail.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSup.currentBalance">
            <summary>
The current number of channel-years remaining.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSup.extensionYearCount">
            <summary>
The number of channel-years needed to extend the software upgrade plan license for 1 year.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSup.eventsSize">
            <summary>
The size of <see cref="F:VxSdk.VxLicenseSup.events" />.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSup.catchUpCount">
            <summary>
The number of channel-years needed to bring the software upgrade plan license up-to-date today.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSup.expirationTime">
            <summary>
The expiration time of the software upgrade plan.
</summary>
        </member>
        <member name="M:VxSdk.VxLicenseSup.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLicenseSup.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLicenseSup" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLicenseSup.#ctor(VxSdk.VxLicenseSup!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLicenseSup" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLicenseSup.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLicenseSup" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLicenseSup">
            <summary>
Represents software upgrade plan licensing information.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSupEvent.type">
            <summary>
The type of software upgrade plan event.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSupEvent.value">
            <summary>
A numerical value that provides additional data related to the type of event this is.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSupEvent.currentBalance">
            <summary>
The current number of channel-years available (at the time of this event).
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSupEvent.time">
            <summary>
The time at which this event occurred.
</summary>
        </member>
        <member name="F:VxSdk.VxLicenseSupEvent.expirationTime">
            <summary>
The projected expiration of the software upgrade plan (at the time of this event).
</summary>
        </member>
        <member name="M:VxSdk.VxLicenseSupEvent.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLicenseSupEvent.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLicenseSupEvent" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLicenseSupEvent.#ctor(VxSdk.VxLicenseSupEvent!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLicenseSupEvent" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLicenseSupEvent.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLicenseSupEvent" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLicenseSupEvent">
            <summary>
Represents a specific event that occurred for a software upgrade plan.
</summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.serverPort">
            <summary>
Port number of the LDAP server.
</summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.vxSystemDn">
            <summary>
The site specific LDAP container; unique per VideoXpert site. This DN should contain the
<see cref="F:VxSdk.VxLdapValidationCredentials.vxRootDn" /> (which is a suffix of this full DN).
<remarks>
Should be supplied if <see cref="F:VxSdk.VxLdapValidationCredentials.useLdapUsersAndRoles" /> is <c>true</c>; ignored otherwise.
</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.vxRootDn">
            <summary>
The LDAP container under which VideoXpert system information for all sites is stored; this should be the
same for all sites.
<remarks>
Should be supplied if <see cref="F:VxSdk.VxLdapValidationCredentials.useLdapUsersAndRoles" /> is <c>true</c>; ignored otherwise.
</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.username">
            <summary>
The user login name.
</summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.ssoDomain">
            <summary>
The Active Directory/Kerberos domain used for single sign-on.
<remarks>Ignored if <see cref="F:VxSdk.VxLdapValidationCredentials.isSsoEnabled" /> is <c>false</c>.</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.serverName">
            <summary>
The hostname or IP address of the LDAP server.
</summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.searchDnPassword">
            <summary>
The password for the superuser DN account in the LDAP directory that performs searches.
<remarks>
Should be supplied if <see cref="F:VxSdk.VxLdapValidationCredentials.isTwoStageBindingEnabled" /> or <see cref="F:VxSdk.VxLdapValidationCredentials.useLdapUsersAndRoles" /> are
<c>true</c>; ignored otherwise.
</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.searchDnAccount">
            <summary>
The superuser DN account in the LDAP directory to use for performing searches there.
<remarks>
If <see cref="F:VxSdk.VxLdapValidationCredentials.isSsoEnabled" /> SSO is <c>true</c>, this account should have write permissions on
the <see cref="F:VxSdk.VxLdapValidationCredentials.vxRootDn" />. Should be supplied if <see cref="F:VxSdk.VxLdapValidationCredentials.isTwoStageBindingEnabled" /> or
<see cref="F:VxSdk.VxLdapValidationCredentials.useLdapUsersAndRoles" /> are <c>true</c>; ignored otherwise.
</remarks></summary>
            <example>CN=users, DC=mycorp</example>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.searchAttributes">
            <summary>
Attributes against which to match the user’s identity/name.
</summary>
            <example>cn, mail</example>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.password">
            <summary>
The user password.
<remarks>Ignored if <see cref="F:VxSdk.VxLdapValidationCredentials.isSsoEnabled" /> is <c>true</c>.</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.objectClasses">
            <summary>
The LDAP object classes to search for users.
</summary>
            <example>user, inetOrgPerson</example>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.baseDn">
            <summary>
The location in the LDAP database that will be used to search for and authenticate user entries.
</summary>
            <example>ou=Service Accounts, dc=Pelco, dc=org</example>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.useLdapUsersAndRoles">
            <summary>
Indicates whether or not LDAP will be used to manage users and roles.
<remarks><c>false</c> to only use the LDAP server for authentication; the VideoXpert system will manage users and
roles itself. <c>true</c> to manage user accounts and role assignments in the LDAP system. Note that
permissions on roles will still be managed by the VideoXpert system.
</remarks></summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.isTwoStageBindingEnabled">
            <summary>
Indicates whether or not two stage binding authentication is enabled.
</summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.isSsoEnabled">
            <summary>
Indicates whether or not single sign-on is enabled.
</summary>
        </member>
        <member name="F:VxSdk.VxLdapValidationCredentials.isServerTlsEnabled">
            <summary>
Indicates whether or not SSL/TLS security is enabled for the LDAP server.
</summary>
        </member>
        <member name="M:VxSdk.VxLdapValidationCredentials.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxLdapValidationCredentials.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxLdapValidationCredentials" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxLdapValidationCredentials.#ctor(VxSdk.VxLdapValidationCredentials!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLdapValidationCredentials" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxLdapValidationCredentials.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxLdapValidationCredentials" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxLdapValidationCredentials">
            <summary>
Represents credentials that are used to verify the connection to the LDAP server. The information
will not be stored.
</summary>
        </member>
        <member name="F:VxSdk.VxInternalEvent.properties">
            <summary>
Optional additional information related to the event.
</summary>
        </member>
        <member name="F:VxSdk.VxInternalEvent.propertySize">
            <summary>
The size of <see cref="F:VxSdk.VxInternalEvent.properties" />.
</summary>
        </member>
        <member name="F:VxSdk.VxInternalEvent.eventType">
            <summary>
The internal event type.
</summary>
        </member>
        <member name="F:VxSdk.VxInternalEvent.systemId">
            <summary>
The unique identifier of the system that generated this event.
</summary>
        </member>
        <member name="F:VxSdk.VxInternalEvent.id">
            <summary>
The unique identifier of the event.
</summary>
        </member>
        <member name="M:VxSdk.VxInternalEvent.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxInternalEvent.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxInternalEvent" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxInternalEvent.#ctor(VxSdk.VxInternalEvent!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxInternalEvent" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxInternalEvent.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxInternalEvent" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxInternalEvent">
            <summary>
Represents an internal event generated by the VxSDK.
</summary>
        </member>
        <member name="F:VxSdk.VxKvObject.value">
            <summary>
The object value.
</summary>
        </member>
        <member name="F:VxSdk.VxKvObject.key">
            <summary>
The object key.
</summary>
        </member>
        <member name="M:VxSdk.VxKvObject.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxKvObject.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxKvObject" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxKvObject.#ctor(VxSdk.VxKvObject!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxKvObject" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxKvObject.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxKvObject" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxKvObject">
            <summary>
Represents a key/value pair object.
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.renderType">
            <summary>
The type of rendering required for the media data delivered by this interface. Clients can utilize this to
create the correct rendering pipeline. 
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.videoUrl">
            <summary>
The RTSP URL for streaming the video data of the export.
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.videoDataSourceId">
            <summary>
The identifier of the video data source that the exported clip came from.
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.startTime">
            <summary>
The time at which the export media begins.
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.endTime">
            <summary>
The time at which the export media ends.
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.audioUrl">
            <summary>
The RTSP URL for streaming the audio data of the export.
</summary>
        </member>
        <member name="F:VxSdk.VxExportStreamClip.audioDataSourceId">
            <summary>
The identifier of the audio data source that the exported clip came from.
</summary>
        </member>
        <member name="M:VxSdk.VxExportStreamClip.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxExportStreamClip.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxExportStreamClip" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxExportStreamClip.#ctor(VxSdk.VxExportStreamClip!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxExportStreamClip" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxExportStreamClip.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxExportStreamClip" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxExportStreamClip">
            <summary>
Represents streaming access to a single clip within an export.
</summary>
        </member>
        <member name="F:VxSdk.VxExportEstimate.size">
            <summary>
The estimated file size of the exported media in kilobytes (KB); will be 0 if unknown or unavailable.
</summary>
        </member>
        <member name="F:VxSdk.VxExportEstimate.isTooLarge">
            <summary>
If <c>true</c>, indicates that the server was unable to estimate the entire request because it was too
large and the <see cref="F:VxSdk.VxExportEstimate.size" /> value is a minimum amount and not the actual estimate.
</summary>
        </member>
        <member name="M:VxSdk.VxExportEstimate.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxExportEstimate.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxExportEstimate" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxExportEstimate.#ctor(VxSdk.VxExportEstimate!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxExportEstimate" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxExportEstimate.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxExportEstimate" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxExportEstimate">
            <summary>
Represents an estimate for an export.
</summary>
        </member>
        <member name="F:VxSdk.VxDiscoveryRequest.protocols">
            <summary>
The protocols to use for the discovery; if omitted, all available protocols are used.
</summary>
        </member>
        <member name="F:VxSdk.VxDiscoveryRequest.searchAt">
            <summary>
The specific devices to discover.
</summary>
        </member>
        <member name="F:VxSdk.VxDiscoveryRequest.searchAtSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiscoveryRequest.searchAt" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiscoveryRequest.protocolsSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiscoveryRequest.protocols" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiscoveryRequest.extend">
            <summary>
                <c>true</c> to extend the previous discovery; this will maintain the existing initiated and number
counters. Defaults to <c>true</c> if discovery was initiated is within the past 12 hours. <c>false</c> will
begin a new discovery (new initiated and reset number counters). Ignored if discovery is currently in
progress (discovery is always extended in this case).
</summary>
        </member>
        <member name="M:VxSdk.VxDiscoveryRequest.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiscoveryRequest.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiscoveryRequest" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiscoveryRequest.#ctor(VxSdk.VxDiscoveryRequest!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiscoveryRequest" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiscoveryRequest.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiscoveryRequest" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiscoveryRequest">
            <summary>
Represents a request to discover new devices.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.temperaturesSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.temperatures" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.storagesSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.storages" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.powersSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.powers" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.networksSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.networks" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.loadsSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.loads" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.hddsSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.hdds" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.fansSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.fans" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.databasesSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.databases" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.backupPowerSize">
            <summary>
The size of <see cref="F:VxSdk.VxDiagnostics.backupPowers" />.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.temperatures">
            <summary>
The temperature diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.storages">
            <summary>
The storage diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.retention">
            <summary>
The retention diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.powers">
            <summary>
The power diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.networks">
            <summary>
The network diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.loads">
            <summary>
The load diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.hdds">
            <summary>
The hdd diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.fans">
            <summary>
The fan diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.eventing">
            <summary>
The eventing diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.databases">
            <summary>
The database diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.backupPowers">
            <summary>
The backup power diagnostics.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.assignments">
            <summary>
The assignment diagnostics.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.#ctor(VxSdk.VxDiagnostics!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics" /> struct.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Temperature.thresholdLow">
            <summary>
Temperature threshold under which normal operating temperature is exceeded (in Celsius).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Temperature.thresholdHigh">
            <summary>
Temperature threshold over which normal operating temperature is exceeded (in Celsius).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Temperature.degrees">
            <summary>
Temperature reading (in Celsius).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Temperature.id">
            <summary>
Temperature identifier.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Temperature.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Temperature.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Temperature" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Temperature.#ctor(VxSdk.VxDiagnostics.Temperature!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Temperature" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Temperature.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Temperature" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Temperature">
            <summary>
Represents temperature sensor diagnostic information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Storage.used">
            <summary>
Amount of storage in use (in MB).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Storage.total">
            <summary>
Total amount of storage present (in MB).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Storage.id">
            <summary>
Storage identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Storage.isOnline">
            <summary>
                <c>true</c> if storage is online and available. <c>false</c> otherwise.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Storage.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Storage.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Storage" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Storage.#ctor(VxSdk.VxDiagnostics.Storage!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Storage" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Storage.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Storage" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Storage">
            <summary>
Represents storage diagnostic information. Contains information on the capacity and usage of local storage.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Retention.retentionTime">
            <summary>
Current media storage retention time (in hours).
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Retention.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Retention.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Retention" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Retention.#ctor(VxSdk.VxDiagnostics.Retention!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Retention" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Retention.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Retention" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Retention">
            <summary>
Represents storage retention information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Power.id">
            <summary>
Power identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Power.isOk">
            <summary>
                <c>true</c> if power supply is online. <c>false</c> otherwise.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Power.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Power.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Power" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Power.#ctor(VxSdk.VxDiagnostics.Power!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Power" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Power.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Power" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Power">
            <summary>
Represents power supply diagnostic information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Network.bandwidthUsed">
            <summary>
Amount of bandwidth in use (in kbps).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Network.bandwidthTotal">
            <summary>
Total amount of bandwidth available (in kbps).
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Network.id">
            <summary>
Network identifier.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Network.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Network.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Network" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Network.#ctor(VxSdk.VxDiagnostics.Network!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Network" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Network.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Network" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Network">
            <summary>
Represents network diagnostic information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Load.type">
            <summary>
The type of load this resource is referencing.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Load.percent">
            <summary>
Percentage being used.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Load.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Load.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Load" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Load.#ctor(VxSdk.VxDiagnostics.Load!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Load" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Load.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Load" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Load">
            <summary>
Represents load diagnostic information. May be used to indicate load on a CPU, application, etc.
The <see cref="F:VxSdk.VxDiagnostics.Load.type" /> will distinguish the entity being represented.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Hdd.status">
            <summary>
Current drive health status.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Hdd.statusProgress">
            <summary>
Specifies how close the current status operation is to completion (e.g. rebuilding). Defaults
to 0 if no ongoing status operation is in progress.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Hdd.model">
            <summary>
Drive model identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Hdd.id">
            <summary>
Disk identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Hdd.isOk">
            <summary>
                <c>true</c> if the HDD status is ok, <c>false</c> if the HDD is failed.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Hdd.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Hdd.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Hdd" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Hdd.#ctor(VxSdk.VxDiagnostics.Hdd!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Hdd" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Hdd.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Hdd" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Hdd">
            <summary>
Represents hard disk drive (HDD) diagnostic information. Contains information on the health of
individual hard disks.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Fan.rpm">
            <summary>
RPM of the fan.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Fan.id">
            <summary>
Fan identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Fan.isOk">
            <summary>
                <c>true</c> if the fan status is ok, <c>false</c> if the fan is failed.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Fan.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Fan.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Fan" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Fan.#ctor(VxSdk.VxDiagnostics.Fan!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Fan" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Fan.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Fan" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Fan">
            <summary>
Represents fan specific diagnostic information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Eventing.eventRate">
            <summary>
The average event rate (events per hour).
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Eventing.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Eventing.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Eventing" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Eventing.#ctor(VxSdk.VxDiagnostics.Eventing!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Eventing" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Eventing.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Eventing" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Eventing">
            <summary>
Represents eventing information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Database.status">
            <summary>
Database health status.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Database.statusProgress">
            <summary>
Specifies how close the current status operation is to completion (e.g. rebuilding). Defaults
to 0 if no ongoing status operation is in progress.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Database.id">
            <summary>
Database identifier.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Database.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Database.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Database" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Database.#ctor(VxSdk.VxDiagnostics.Database!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Database" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Database.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Database" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Database">
            <summary>
Represents database health information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.BackupPower.remaining">
            <summary>
Estimated backup time remaining (in minutes). 0 if no backup is available.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.BackupPower.id">
            <summary>
Backup power identifier.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.BackupPower.isEnabled">
            <summary>
                <c>true</c> if currently on backup power, <c>false</c> otherwise.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.BackupPower.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.BackupPower.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.BackupPower" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.BackupPower.#ctor(VxSdk.VxDiagnostics.BackupPower!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.BackupPower" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.BackupPower.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.BackupPower" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.BackupPower">
            <summary>
Represents backup power diagnostic information.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Assignments.maxDataSources">
            <summary>
Maximum number of data sources that may be assigned.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Assignments.dataSources">
            <summary>
Number of data sources currently assigned.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Assignments.maxBitrate">
            <summary>
Maximum bitrate that may be assigned.
</summary>
        </member>
        <member name="F:VxSdk.VxDiagnostics.Assignments.bitrate">
            <summary>
Total bitrate that is currently assigned.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Assignments.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Assignments.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDiagnostics.Assignments" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Assignments.#ctor(VxSdk.VxDiagnostics.Assignments!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Assignments" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDiagnostics.Assignments.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDiagnostics.Assignments" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics.Assignments">
            <summary>
Represents data session information.
</summary>
        </member>
        <member name="T:VxSdk.VxDiagnostics">
            <summary>
Represents a collection of device diagnostics. Each diagnostic is represented by a list of that diagnostic’s type. When
multiple diagnostics exist in the list, the diagnostic identifier may be used to distinguish between them.
</summary>
        </member>
        <member name="F:VxSdk.VxResourceRef.type">
            <summary>
The type of resource being referenced.
</summary>
        </member>
        <member name="F:VxSdk.VxResourceRef.id">
            <summary>
The unique resource identifier. This must match exactly with the unique identifier of the resource being
referenced.
</summary>
        </member>
        <member name="M:VxSdk.VxResourceRef.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxResourceRef.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxResourceRef" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxResourceRef.#ctor(VxSdk.VxResourceRef!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxResourceRef" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxResourceRef.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxResourceRef" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxResourceRef">
            <summary>
Represents a reference to a resource on the VideoXpert system (i.e. a device, datasource, tag, etc.).
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.port">
            <summary>
The device(s) port.
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.username">
            <summary>
The account username to communicate with the device(s), if any.
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.password">
            <summary>
The account password to communicate with the device(s), if any.
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.ipStartAddress">
            <summary>
The IP starting address (inclusive). If present, this must be the same format as <see cref="F:VxSdk.VxDeviceSearch.ipEndAddress" />
and must be present if <see cref="F:VxSdk.VxDeviceSearch.ipEndAddress" /> is present.
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.ipEndAddress">
            <summary>
The IP ending address (inclusive). If present, this must be the same format as <see cref="F:VxSdk.VxDeviceSearch.ipStartAddress" />
and must be present if <see cref="F:VxSdk.VxDeviceSearch.ipStartAddress" /> is present. Address range from <see cref="F:VxSdk.VxDeviceSearch.ipStartAddress" />
must not exceed 1024 addresses.
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.host">
            <summary>
The host address of the device. Ignored if <see cref="F:VxSdk.VxDeviceSearch.ipStartAddress" /> and <see cref="F:VxSdk.VxDeviceSearch.ipEndAddress" /> are present.
</summary>
        </member>
        <member name="F:VxSdk.VxDeviceSearch.driverType">
            <summary>
The type identifier of the driver to use for device communication.
</summary>
        </member>
        <member name="M:VxSdk.VxDeviceSearch.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxDeviceSearch.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxDeviceSearch" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxDeviceSearch.#ctor(VxSdk.VxDeviceSearch!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDeviceSearch" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxDeviceSearch.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxDeviceSearch" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxDeviceSearch">
            <summary>
Represents device search helpers used for discovery.
</summary>
        </member>
        <member name="F:VxSdk.VxCollectionFilter.key">
            <summary>
The filter key.
</summary>
        </member>
        <member name="F:VxSdk.VxCollectionFilter.value">
            <summary>
The filter value.
</summary>
        </member>
        <member name="M:VxSdk.VxCollectionFilter.Clear">
            <summary>
Clears this instance.
</summary>
        </member>
        <member name="M:VxSdk.VxCollectionFilter.Dispose">
            <summary>
Finalizes an instance of the <see cref="T:VxSdk.VxCollectionFilter" /> class.
</summary>
        </member>
        <member name="M:VxSdk.VxCollectionFilter.#ctor(VxSdk.VxCollectionFilter!System.Runtime.CompilerServices.IsConst*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxCollectionFilter" /> struct.
</summary>
            <param name="ref">The reference.</param>
        </member>
        <member name="M:VxSdk.VxCollectionFilter.#ctor">
            <summary>
Initializes a new instance of the <see cref="T:VxSdk.VxCollectionFilter" /> struct.
</summary>
        </member>
        <member name="T:VxSdk.VxCollectionFilter">
            <summary>
Represents a filter to be used when creating a VxCollection.
</summary>
        </member>
        <member name="M:VxSdk.Utilities.StrCopySafe(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte*,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*,System.Int32)">
            <summary>
Performs a safe string copy.
</summary>
            <param name="dst">The destination.</param>
            <param name="src">The source.</param>
            <param name="dstSize">The size of <paramref name="dst" />.</param>
        </member>
        <member name="F:kOut">
            <summary>Zoom out.</summary>
        </member>
        <member name="F:kIn">
            <summary>Zoom in.</summary>
        </member>
        <member name="T:VxSdk.VxZoomDirection">
            <summary>
Values that represent zoom directions.
</summary>
        </member>
        <member name="F:kUnicast">
            <summary>Unicast transmission.</summary>
        </member>
        <member name="F:kMulticast">
            <summary>Multicast transmission.</summary>
        </member>
        <member name="T:VxSdk.VxTransmissionType">
            <summary>
Values that represent network communication transmission types.
</summary>
        </member>
        <member name="F:kAuto">
            <summary>Time server information is determined automatically, for example, from DHCP.</summary>
        </member>
        <member name="T:VxSdk.VxTimeServerSource">
            <summary>
Values that represent where the time server information is obtained.
</summary>
        </member>
        <member name="F:kMonth">
            <summary>A time interval of one month.</summary>
        </member>
        <member name="F:kHour">
            <summary>A time interval of one hour.</summary>
        </member>
        <member name="F:kDay">
            <summary>A time interval of one day.</summary>
        </member>
        <member name="T:VxSdk.VxTimeInterval">
            <summary>
Values that represent a definite length of time.
</summary>
        </member>
        <member name="F:kUnlicensed">
            <summary>Unlicensed system.</summary>
        </member>
        <member name="F:kProfessional">
            <summary>Professional system license.</summary>
        </member>
        <member name="F:kEnterprise">
            <summary>Enterprise system license.</summary>
        </member>
        <member name="T:VxSdk.VxSystemLicenseType">
            <summary>
Values that represent the types of system licenses.
</summary>
        </member>
        <member name="F:kTampered">
            <summary>A license tampered event.</summary>
        </member>
        <member name="F:kInstalledSup3">
            <summary>A 3-year license installed event.</summary>
        </member>
        <member name="F:kInstalledSup1">
            <summary>A 1-year license installed event.</summary>
        </member>
        <member name="F:kExtendedSup">
            <summary>A license extended event.</summary>
        </member>
        <member name="F:kExpiredSup3">
            <summary>A 3-year license expired event.</summary>
        </member>
        <member name="F:kExpiredSup1">
            <summary>A 1-year license expired event.</summary>
        </member>
        <member name="F:kDecommissioned">
            <summary>A license decommissioned event.</summary>
        </member>
        <member name="T:VxSdk.VxSupEventType">
            <summary>
Values that represent software upgrade plan licensing event types.
</summary>
        </member>
        <member name="F:kDenary">
            <summary>The 10th stream.</summary>
        </member>
        <member name="F:kNonary">
            <summary>The 9th stream.</summary>
        </member>
        <member name="F:kOctonary">
            <summary>The 8th stream.</summary>
        </member>
        <member name="F:kSeptenary">
            <summary>The 7th stream.</summary>
        </member>
        <member name="F:kSenary">
            <summary>The 6th stream.</summary>
        </member>
        <member name="F:kQuinary">
            <summary>The 5th stream.</summary>
        </member>
        <member name="F:kQuaternary">
            <summary>The 4th stream.</summary>
        </member>
        <member name="F:kTertiary">
            <summary>The 3rd stream.</summary>
        </member>
        <member name="F:kSecondary">
            <summary>The 2nd stream.</summary>
        </member>
        <member name="F:kPrimary">
            <summary>The 1st stream.</summary>
        </member>
        <member name="T:VxSdk.VxStreamSource">
            <summary>
Values that represent a stream source.
</summary>
        </member>
        <member name="F:kRtspRtp">
            <summary>The RTSP/RTP protocol.</summary>
        </member>
        <member name="F:kMjpegPull">
            <summary>The Mjpeg (pull) protocol.</summary>
        </member>
        <member name="T:VxSdk.VxStreamProtocol">
            <summary>
Values that represent stream protocols.
</summary>
        </member>
        <member name="F:kG711">
            <summary>G.711 encoding format.</summary>
        </member>
        <member name="F:kJpeg">
            <summary>JPEG encoding format.</summary>
        </member>
        <member name="F:kMpeg4">
            <summary>MPEG-4 encoding format.</summary>
        </member>
        <member name="F:kH265">
            <summary>H.265 encoding format.</summary>
        </member>
        <member name="F:kH264">
            <summary>H.264 encoding format.</summary>
        </member>
        <member name="T:VxSdk.VxStreamFormat">
            <summary>
Values that represent media stream encoding formats.
</summary>
        </member>
        <member name="F:kSNMP3">
            <summary>SNMPv3 protocol.</summary>
        </member>
        <member name="F:kSNMP2c">
            <summary>SNMPv2c protocol.</summary>
        </member>
        <member name="T:VxSdk.VxSnmpVersion">
            <summary>
Values that represent which version of SNMP is enabled.
</summary>
        </member>
        <member name="F:kOffset">
            <summary>Return multiple images offset by this amount of time, in seconds, between images.</summary>
        </member>
        <member name="F:kWidth">
            <summary>Scale to given width in pixels, maintaining ratio.</summary>
        </member>
        <member name="T:VxSdk.VxSnapshotFilterItem">
            <summary>
Values that represent snapshot filter types.
</summary>
        </member>
        <member name="F:kMedium">
            <summary>Allows some distortion in order to achieve medium compression efficiency gains.</summary>
        </member>
        <member name="T:VxSdk.VxSmartCompressionLevel">
            <summary>
Values that represent Smart Compression levels, which offer a trade-off between image quality and compression efficiency.
</summary>
        </member>
        <member name="F:kComplete">
            <summary>The search has completed.</summary>
        </member>
        <member name="T:VxSdk.VxSearchStatus">
            <summary>
Values that represent the status of a search.
</summary>
        </member>
        <member name="F:kRecord">
            <summary>Record all resources associated with the schedule.</summary>
        </member>
        <member name="F:kEventSourceRecord">
            <summary>
Record only the resource (associated with the schedule) that was the source of the event causing the
schedule trigger to activate.
</summary>
        </member>
        <member name="T:VxSdk.VxScheduleAction">
            <summary>
Values that represent schedule recording actions.
</summary>
        </member>
        <member name="F:kTcpUdpMulticast">
            <summary>TCP, UDP and multicast streaming capabilities.</summary>
        </member>
        <member name="F:kTcpUdp">
            <summary>TCP and UDP streaming capabilities.</summary>
        </member>
        <member name="F:kTcp">
            <summary>TCP streaming capability.</summary>
        </member>
        <member name="T:VxSdk.VxRtspCapability">
            <summary>
Values that represent network streaming capabilities.
</summary>
        </member>
        <member name="F:k270">
            <summary>270 degrees.</summary>
        </member>
        <member name="F:k180">
            <summary>180 degrees.</summary>
        </member>
        <member name="F:k90">
            <summary>90 degrees.</summary>
        </member>
        <member name="F:k0">
            <summary>0 degrees.</summary>
        </member>
        <member name="T:VxSdk.VxRotationType">
            <summary>
Values that represent rotation types (in 90 degree increments).
</summary>
        </member>
        <member name="F:kSdkLicenseGracePeriodExpired">
            <summary>
The license associated with the license key was not found on the server and the license grace period
has expired.
</summary>
        </member>
        <member name="F:kSdkLicenseGracePeriodActive">
            <summary>
The license associated with the license key was not found on the server, but the license grace period
is active.
</summary>
        </member>
        <member name="F:kSdkLicenseExpired">
            <summary>The license on the server has expired.</summary>
        </member>
        <member name="F:kSdkLicenseVersionInvalid">
            <summary>The license on the server does not support this version of the SDK.</summary>
        </member>
        <member name="F:kSdkLicenseKeyInvalid">
            <summary>The SDK license key data is invalid.</summary>
        </member>
        <member name="F:kSdkLicenseKeyEmpty">
            <summary>The SDK license key is empty.</summary>
        </member>
        <member name="F:kPermissionConflict">
            <summary>
The requested operation is not possible due to a permission conflict with the resource. Typically this
is due to a violation of permission hierarchy (e.g. a nested permission is being assigned without its
parent permission already assigned).
</summary>
        </member>
        <member name="F:kPasswordTooSimilar">
            <summary>
A password too similar to a previous password was supplied in an attempt to create a new user password.
</summary>
        </member>
        <member name="F:kPasswordTooShort">
            <summary>
A password of insufficient length was supplied in an attempt to create a new user password.
</summary>
        </member>
        <member name="F:kPasswordReqMoreUpper">
            <summary>
A password with an insufficient number of uppercase letters was supplied in an attempt to create a new
user password.
</summary>
        </member>
        <member name="F:kPasswordReqMoreSpecial">
            <summary>
A password with an insufficient number of special characters was supplied in an attempt to create a new
user password.
</summary>
        </member>
        <member name="F:kPasswordReqMoreLower">
            <summary>
A password with an insufficient number of lowercase letters was supplied in an attempt to create a new
user password.
</summary>
        </member>
        <member name="F:kPasswordReqMoreDigits">
            <summary>
A password with an insufficient number of digits was supplied in an attempt to create a new user
password.
</summary>
        </member>
        <member name="F:kResourceLocked">
            <summary>
An attempt to edit a locked resource was made by a user that does not own the IVxResourceLock.
</summary>
        </member>
        <member name="F:kReadOnlyField">
            <summary>An attempt to edit a read-only field was made.</summary>
        </member>
        <member name="F:kPortInUse">
            <summary>
An attempt to set a new port number failed because the port number is already in use.
</summary>
        </member>
        <member name="F:kInvalidValue">
            <summary>
An attempt to set an invalid value on a writable field was made. The value may be invalid due to being
out of range, unavailable, etc.
</summary>
        </member>
        <member name="F:kNeedOverride">
            <summary>Locked by lower authority user, may override.</summary>
        </member>
        <member name="F:kCameraLocked">
            <summary>Camera is locked by same or higher authority user.</summary>
        </member>
        <member name="F:kCameraInUse">
            <summary>
Camera is in use (or the usage dwell time is active) by same or higher authority user.
</summary>
        </member>
        <member name="F:kNoLicense">
            <summary>
Unable to commission (or float) a feature because no valid license is available for it.
</summary>
        </member>
        <member name="F:kLicenseReqLdapAdmin">
            <summary>Unable to apply the license; valid LDAP administrator credentials are required.</summary>
        </member>
        <member name="F:kLicenseCountExceeded">
            <summary>
A valid license is available but the available count on that license is fully utilized.
</summary>
        </member>
        <member name="F:kIncompatibleLicense">
            <summary>
The license that was supplied is not compatible with the device and/or system that it is being applied
to.
</summary>
        </member>
        <member name="F:kActivationFailed">
            <summary>The activation failed.</summary>
        </member>
        <member name="F:kActivationHostNotFound">
            <summary>The activation failed due to communication error with the FNO licensing server.</summary>
        </member>
        <member name="F:kActivationConflict">
            <summary>
The license that was supplied has an activation conflict with an existing license (e.g. duplicate
activation IDs).
</summary>
        </member>
        <member name="F:kResponseTooLarge">
            <summary>
The server is incapable of handling the client request due to the size of the resulting response. What
constitutes ’too large’ is entirely up to the server.
</summary>
        </member>
        <member name="F:kOperationFailed">
            <summary>The requested operation failed.</summary>
        </member>
        <member name="F:kNotReadyUnauthorized">
            <summary>
The server is not in an appropriate state to be able to service this request due to an authorization
issue between it and another entity. The server requires intervention in order to resolve this.
</summary>
        </member>
        <member name="F:kNotReadyUnauthenticated">
            <summary>
The server is not in an appropriate state to be able to service this request due to an authentication
issue between it and another entity. The server requires intervention in order to resolve this.
</summary>
        </member>
        <member name="F:kNotReady">
            <summary>
The server is not in an appropriate state to be able to service this request. The server requires
intervention in order to resolve this.
</summary>
        </member>
        <member name="F:kInsufficientResources">
            <summary>The server has insufficient resources to satisfy the request.</summary>
        </member>
        <member name="F:kConflict">
            <summary>
The requested operation is not possible due to a conflict with the resource. Typically this is due to a
violation of a uniqueness property on one of the resource’s fields.
</summary>
        </member>
        <member name="F:kNoAvailableStreams">
            <summary>
The server is unable to initiate any new stream sessions due to having reached its stream count
capacity.
</summary>
        </member>
        <member name="F:kEndOfStream">
            <summary>
No further stream data is available (the end of all recorded data has been reached; no further data is
currently be recorded).
</summary>
        </member>
        <member name="F:kEdgeOfStream">
            <summary>
No further stream data is currently available (the edge of a currently recording clip has been
reached); more data will be available shortly.
</summary>
        </member>
        <member name="F:kCameraUnavailable">
            <summary>Camera is unavailable, data cannot be retrieved at this time.</summary>
        </member>
        <member name="F:kInvalidLicense">
            <summary>No valid license was found on the VideoXpert system.</summary>
        </member>
        <member name="F:kCommunicationError">
            <summary>There was an error communicating to the device.</summary>
        </member>
        <member name="F:kInvalidParameters">
            <summary>A parameter was invalid.</summary>
        </member>
        <member name="F:kActionUnavailable">
            <summary>The attempted action is unsupported by the system.</summary>
        </member>
        <member name="F:kInvalidLoginInfo">
            <summary>The login credentials were invalid.</summary>
        </member>
        <member name="F:kInsufficientSize">
            <summary>The size value was not sufficient enough to allocate the collection.</summary>
        </member>
        <member name="F:kUnsupportedVersion">
            <summary>The VideoXpert system version is not supported.</summary>
        </member>
        <member name="F:kOK">
            <summary>The action was successful.</summary>
        </member>
        <member name="F:kUnknownError">
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdk.VxResult">
            <summary>
Values that represent the result of calls to the VideoXpert system.
</summary>
        </member>
        <member name="F:kRelayOutput">
            <summary>A relay output resource.</summary>
        </member>
        <member name="F:kTag">
            <summary>A tag resource.</summary>
        </member>
        <member name="F:kDrawing">
            <summary>A drawing resource.</summary>
        </member>
        <member name="T:VxSdk.VxResourceType">
            <summary>
Values that represent a type of resource.
</summary>
        </member>
        <member name="F:kUserAction">
            <summary>A report about user-related events.</summary>
        </member>
        <member name="F:kSystemStatus">
            <summary>A report about the health of the system.</summary>
        </member>
        <member name="F:kStorage">
            <summary>A report about data storages.</summary>
        </member>
        <member name="F:kRecordingGap">
            <summary>A report about gaps.</summary>
        </member>
        <member name="F:kLineCount">
            <summary>A report containing analytic line counting data from data sources.</summary>
        </member>
        <member name="F:kCameraRoleAccess">
            <summary>A report about data sources accessibility by each role.</summary>
        </member>
        <member name="T:VxSdk.VxReportType">
            <summary>
Values that represent report types.
</summary>
        </member>
        <member name="F:kStorageUnavailable">
            <summary>The configured storage location is unavailable.</summary>
            <summary>Storage is unavailable, data cannot be retrieved at this time.</summary>
        </member>
        <member name="F:kStorageUnauthenticated">
            <summary>The configured storage location cannot be used because the configured credentials are invalid.</summary>
        </member>
        <member name="F:kStorageFull">
            <summary>The configured storage location is full.</summary>
        </member>
        <member name="T:VxSdk.VxReportStatusReason">
            <summary>
Values that represent the reason for a report failing to be generated.
</summary>
        </member>
        <member name="T:VxSdk.VxReportStatus">
            <summary>
Values that represent the status of a report.
</summary>
        </member>
        <member name="F:kUser">
            <summary>A user resource.</summary>
            <summary>A report about users.</summary>
            <summary>A user resource.</summary>
        </member>
        <member name="F:kSituation">
            <summary>A situation resource.</summary>
        </member>
        <member name="F:kRole">
            <summary>A role resource.</summary>
            <summary>A report about roles.</summary>
        </member>
        <member name="F:kDevice">
            <summary>A device resource.</summary>
            <summary>A report about devices.</summary>
            <summary>A device resource.</summary>
        </member>
        <member name="F:kDataStorage">
            <summary>A data storage resource.</summary>
            <summary>A data storage resource.</summary>
        </member>
        <member name="F:kDataSource">
            <summary>A data source resource.</summary>
            <summary>A data source resource.</summary>
        </member>
        <member name="F:kAnalyticBehavior">
            <summary>An analytic behavior resource.</summary>
        </member>
        <member name="T:VxSdk.VxReportFilterType">
            <summary>
Values that represent a type of resource to filter by in a report.
</summary>
        </member>
        <member name="F:kUserRoleNames">
            <summary>The user role names report field.</summary>
        </member>
        <member name="F:kUserPhoneNumber">
            <summary>The user phone number report field.</summary>
        </member>
        <member name="F:kUserPasswordExpiration">
            <summary>The user password expiration report field.</summary>
        </member>
        <member name="F:kUserNote">
            <summary>The user note report field.</summary>
        </member>
        <member name="F:kUserName">
            <summary>The user name report field.</summary>
        </member>
        <member name="F:kUserLastName">
            <summary>The user last name report field.</summary>
        </member>
        <member name="F:kUserId">
            <summary>The user id report field.</summary>
        </member>
        <member name="F:kUserFirstName">
            <summary>The user first name report field.</summary>
        </member>
        <member name="F:kUserEmployeeId">
            <summary>The user employee id report field.</summary>
        </member>
        <member name="F:kSystemNumVideoDatasources">
            <summary>The system num video data sources report field.</summary>
        </member>
        <member name="F:kSystemNumUsers">
            <summary>The system num users report field.</summary>
        </member>
        <member name="F:kSystemNumDevices">
            <summary>The system num devices report field.</summary>
        </member>
        <member name="F:kSystemNumDatastorages">
            <summary>The system num data storages report field.</summary>
        </member>
        <member name="F:kSystemNumAudioDatasources">
            <summary>The system num audio data sources report field.</summary>
        </member>
        <member name="F:kSystemName">
            <summary>The system name report field.</summary>
        </member>
        <member name="F:kSystemId">
            <summary>The system id report field.</summary>
        </member>
        <member name="F:kStatusServiceState">
            <summary>The status service state report field.</summary>
        </member>
        <member name="F:kStatusRtsp">
            <summary>The status rtsp report field.</summary>
        </member>
        <member name="F:kStatusHttp">
            <summary>The status http report field.</summary>
        </member>
        <member name="F:kSituationName">
            <summary>The situation name report field.</summary>
        </member>
        <member name="F:kRoleName">
            <summary>The role name report field.</summary>
        </member>
        <member name="F:kRoleId">
            <summary>The role id report field.</summary>
        </member>
        <member name="F:kPropertyOther">
            <summary>The property other report field.</summary>
        </member>
        <member name="F:kPropertyMods">
            <summary>The property mods report field.</summary>
        </member>
        <member name="F:kPropertyIds">
            <summary>The property ids report field.</summary>
        </member>
        <member name="F:kPrivilegeRestricted">
            <summary>The privilege restricted report field.</summary>
        </member>
        <member name="F:kPrivilegePriority">
            <summary>The privilege priority report field.</summary>
        </member>
        <member name="F:kPrivilegePermission">
            <summary>The privilege permission report field.</summary>
        </member>
        <member name="F:kPermissionSysRecording">
            <summary>The permission system recording report field.</summary>
        </member>
        <member name="F:kPermissionSurveilVideoRecord">
            <summary>The permission surveillance video record report field.</summary>
        </member>
        <member name="F:kPermissionSurveilVideoPtzLock">
            <summary>The permission surveillance video ptz lock report field.</summary>
        </member>
        <member name="F:kPermissionSurveilVideoPtz">
            <summary>The permission surveillance video ptz report field.</summary>
        </member>
        <member name="F:kPermissionSurveilVideo">
            <summary>The permission surveillance video report field.</summary>
        </member>
        <member name="F:kPermissionSuperPtzpresets">
            <summary>The permission super ptz presets report field.</summary>
        </member>
        <member name="F:kPermissionInvestClipsMarksLocks">
            <summary>The permission invest clips marks locks report field.</summary>
        </member>
        <member name="F:kPermissionInvestClipsMarks">
            <summary>The permission invest clips marks report field.</summary>
        </member>
        <member name="F:kPermissionInvestClips">
            <summary>The permission invest clips report field.</summary>
        </member>
        <member name="F:kPermissionDevSettings">
            <summary>The permission dev settings report field.</summary>
        </member>
        <member name="F:kLineCounterType">
            <summary>The line counter type report field.</summary>
        </member>
        <member name="F:kLineCounterStartTime">
            <summary>The line counter start time report field.</summary>
        </member>
        <member name="F:kLineCounterOutCountCorrection">
            <summary>The line counter out count correction report field.</summary>
        </member>
        <member name="F:kLineCounterOutCount">
            <summary>The line counter out count report field.</summary>
        </member>
        <member name="F:kLineCounterName">
            <summary>The line counter name report field.</summary>
        </member>
        <member name="F:kLineCounterInCountCorrection">
            <summary>The line counter in count correction report field.</summary>
        </member>
        <member name="F:kLineCounterInCount">
            <summary>The line counter in count report field.</summary>
        </member>
        <member name="F:kLineCounterEndTime">
            <summary>The line counter end time report field.</summary>
        </member>
        <member name="F:kLineCounterCountCorrection">
            <summary>The line counter count correction report field.</summary>
        </member>
        <member name="F:kLineCounterCount">
            <summary>The line counter count report field.</summary>
        </member>
        <member name="F:kGapStart">
            <summary>The gap start report field.</summary>
        </member>
        <member name="F:kGapReason">
            <summary>The gap reason report field.</summary>
        </member>
        <member name="F:kGapFillerStatus">
            <summary>The gap filler status report field.</summary>
        </member>
        <member name="F:kGapEnd">
            <summary>The gap end report field.</summary>
        </member>
        <member name="F:kFieldGroupStreamConfiguration">
            <summary>The field group stream configuration report field.</summary>
        </member>
        <member name="F:kFieldGroupPrivileges">
            <summary>The field group privileges report field.</summary>
        </member>
        <member name="F:kFieldGroupCameraAssignments">
            <summary>The field group camera assignments report field.</summary>
        </member>
        <member name="F:kFieldGroup">
            <summary>The field group report field.</summary>
        </member>
        <member name="F:kEventTime">
            <summary>The event time report field.</summary>
        </member>
        <member name="F:kEventSourceUserName">
            <summary>The event source user name report field.</summary>
        </member>
        <member name="F:kEventSourceDeviceName">
            <summary>The event source device name report field.</summary>
        </member>
        <member name="F:kEventSourceDeviceId">
            <summary>The event source device id report field.</summary>
        </member>
        <member name="F:kEventSourceClientId">
            <summary>The event source client id report field.</summary>
        </member>
        <member name="F:kEventSituationType">
            <summary>The event situation type report field.</summary>
        </member>
        <member name="F:kEventSeverity">
            <summary>The event severity report field.</summary>
        </member>
        <member name="F:kEventId">
            <summary>The event id report field.</summary>
        </member>
        <member name="F:kEventAckUser">
            <summary>The event ack user report field.</summary>
        </member>
        <member name="F:kEventAckTime">
            <summary>The event ack time report field.</summary>
        </member>
        <member name="F:kEventAckState">
            <summary>The event ack state report field.</summary>
        </member>
        <member name="F:kEventAckClientName">
            <summary>The event ack client name report field.</summary>
        </member>
        <member name="F:kEventAckClientId">
            <summary>The event ack client id report field.</summary>
        </member>
        <member name="F:kDeviceVersion">
            <summary>The device version report field.</summary>
        </member>
        <member name="F:kDeviceVendor">
            <summary>The device vendor report field.</summary>
        </member>
        <member name="F:kDeviceType">
            <summary>The device type report field.</summary>
        </member>
        <member name="F:kDeviceState">
            <summary>The device state report field.</summary>
        </member>
        <member name="F:kDeviceSerial">
            <summary>The device serial report field.</summary>
        </member>
        <member name="F:kDevicePort">
            <summary>The device port report field.</summary>
        </member>
        <member name="F:kDeviceName">
            <summary>The device name report field.</summary>
        </member>
        <member name="F:kDeviceModel">
            <summary>The device model report field.</summary>
        </member>
        <member name="F:kDeviceIp">
            <summary>The device ip report field.</summary>
        </member>
        <member name="F:kDeviceHostname">
            <summary>The device hostname report field.</summary>
        </member>
        <member name="F:kDeviceCommissioned">
            <summary>The device commissioned report field.</summary>
        </member>
        <member name="F:kDatastorageType">
            <summary>The data storage type report field.</summary>
        </member>
        <member name="F:kDatastorageRetention">
            <summary>The data storage retention report field.</summary>
        </member>
        <member name="F:kDatastorageName">
            <summary>The data storage name report field.</summary>
        </member>
        <member name="F:kDatastorageId">
            <summary>The data storage id report field.</summary>
        </member>
        <member name="F:kDatastorageFailover">
            <summary>The data storage failover report field.</summary>
        </member>
        <member name="F:kDatasourceType">
            <summary>The data source type report field.</summary>
        </member>
        <member name="F:kDatasourceState">
            <summary>The data source state report field.</summary>
        </member>
        <member name="F:kDatasourceRecording">
            <summary>The data source recording report field.</summary>
        </member>
        <member name="F:kDatasourceNumber">
            <summary>The data source number report field.</summary>
        </member>
        <member name="F:kDatasourceName">
            <summary>The data source name report field.</summary>
        </member>
        <member name="F:kDatasourceIp">
            <summary>The data source ip report field.</summary>
        </member>
        <member name="F:kDatasourceId">
            <summary>The data source id report field.</summary>
        </member>
        <member name="F:kConfiguredMaxRetention">
            <summary>The configured max retention report field.</summary>
        </member>
        <member name="F:kCameraStreamResolution">
            <summary>The camera stream resolution report field.</summary>
        </member>
        <member name="F:kCameraStreamFramerate">
            <summary>The camera stream framerate report field.</summary>
        </member>
        <member name="F:kCameraStreamFormat">
            <summary>The camera stream format report field.</summary>
        </member>
        <member name="F:kCameraStreamEncodingId">
            <summary>The camera stream encoding id report field.</summary>
        </member>
        <member name="F:kCameraStreamBitrate">
            <summary>The camera stream bitrate report field.</summary>
        </member>
        <member name="F:kAlarmInputName">
            <summary>The alarm input name report field.</summary>
        </member>
        <member name="F:kAlarmInputId">
            <summary>The alarm input id report field.</summary>
        </member>
        <member name="F:kFisheye">
            <summary>Fisheye renderer.</summary>
        </member>
        <member name="F:kStandard">
            <summary>Standard renderer.</summary>
        </member>
        <member name="F:kOptera360">
            <summary>Optera 360 renderer.</summary>
        </member>
        <member name="F:kOptera270">
            <summary>Optera 270 renderer.</summary>
        </member>
        <member name="F:kOptera180">
            <summary>Optera 180 renderer.</summary>
        </member>
        <member name="F:kEvo">
            <summary>Evo renderer.</summary>
        </member>
        <member name="T:VxSdk.VxRenderType">
            <summary>
Values that represent the stream rendering types.
</summary>
        </member>
        <member name="T:VxSdk.VxRelayState">
            <summary>
Values that represent the state of a relay output.
</summary>
        </member>
        <member name="F:kTimed">
            <summary>Time-based (continuous); no event.</summary>
        </member>
        <member name="F:kManual">
            <summary>Manual user initiation.</summary>
            <summary>Time server information is provided by the user.</summary>
        </member>
        <member name="F:kAnalytic">
            <summary>Video analytic (non-motion).</summary>
        </member>
        <member name="T:VxSdk.VxRecordingType">
            <summary>
Values that represent the type of trigger that caused the recording.
</summary>
        </member>
        <member name="F:kNormal">
            <summary>Normal framerate.</summary>
        </member>
        <member name="F:kLow">
            <summary>Low framerate.</summary>
            <summary>Allows a little distortion in order to achieve small compression efficiency gains.</summary>
        </member>
        <member name="T:VxSdk.VxRecordingFramerate">
            <summary>
Values that represent the video framerate level.
</summary>
        </member>
        <member name="F:kProtocolP">
            <summary>P protocol.</summary>
        </member>
        <member name="F:kExtendedCoaxitron">
            <summary>Extended coaxitron protocol.</summary>
        </member>
        <member name="F:kProtocolD">
            <summary>D protocol.</summary>
        </member>
        <member name="F:kCoaxitron">
            <summary>Coaxitron protocol.</summary>
        </member>
        <member name="T:VxSdk.VxPtzControlProtocol">
            <summary>
Values that represent PTZ control protocols used by encoders to control analog PTZ cameras.
</summary>
        </member>
        <member name="F:kDES">
            <summary>DES encryption.</summary>
        </member>
        <member name="F:kAES">
            <summary>AES encryption.</summary>
        </member>
        <member name="T:VxSdk.VxPrivacyProtocol">
            <summary>
Values that represent SNMP v3 privacy protocols.
</summary>
        </member>
        <member name="F:kWorkFax">
            <summary>Work fax number.</summary>
        </member>
        <member name="F:kWork">
            <summary>Work number.</summary>
        </member>
        <member name="F:kPager">
            <summary>Pager number.</summary>
        </member>
        <member name="F:kOther">
            <summary>Other number.</summary>
        </member>
        <member name="F:kMobile">
            <summary>Mobile number.</summary>
        </member>
        <member name="F:kHomeFax">
            <summary>Home fax number.</summary>
        </member>
        <member name="F:kHome">
            <summary>Home number.</summary>
        </member>
        <member name="T:VxSdk.VxPhoneType">
            <summary>
Values that represent the type of a phone number.
</summary>
        </member>
        <member name="F:kSystemManagement">
            <summary>[Group] Access, licensing, and management of entire systems.</summary>
        </member>
        <member name="F:kDeviceManagement">
            <summary>[Group] Access, licensing, and management of edge devices in the system (e.g. cameras and recorders).</summary>
        </member>
        <member name="F:kUserManagement">
            <summary>[Group] Management of user accounts, roles, and authorizations.</summary>
        </member>
        <member name="F:kEventManagement">
            <summary>[Group] Access and management of system events.</summary>
        </member>
        <member name="F:kSupervisionAndReports">
            <summary>[Group] Supervisory activities aimed at “shift leaders”.</summary>
        </member>
        <member name="F:kPlugIns">
            <summary>[Group] Permissions related to plug-in capabilities such as mapping and external events.</summary>
        </member>
        <member name="F:kInvestigation">
            <summary>[Group] Investigative activities such as viewing/managing recorded media, initiating and retrieving exports, etc.</summary>
        </member>
        <member name="F:kSurveillance">
            <summary>[Group] Standard surveillance activities such as viewing live media, PTZ controls, initiating recording, etc.</summary>
        </member>
        <member name="F:kManageMyReports">
            <summary>Manage My Reports.</summary>
        </member>
        <member name="F:kStreamExports">
            <summary>Stream Exports.</summary>
        </member>
        <member name="F:kDownloadExports">
            <summary>Download Exports.</summary>
        </member>
        <member name="F:kViewExports">
            <summary>View Exports.</summary>
        </member>
        <member name="F:kCreatePrivateExportsTo">
            <summary>Create Private Exports To.</summary>
        </member>
        <member name="F:kStreamPrivateExports">
            <summary>Stream Private Exports.</summary>
        </member>
        <member name="F:kDownloadPrivateExports">
            <summary>Download Private Exports.</summary>
        </member>
        <member name="F:kManagePrivateExports">
            <summary>Manage Private Exports.</summary>
        </member>
        <member name="F:kAccessOnCameraStorage">
            <summary>Access On-Camera Storage.</summary>
        </member>
        <member name="F:kSendVideo">
            <summary>Send Video.</summary>
        </member>
        <member name="F:kViewFullCameraDetails">
            <summary>View Full Camera Details.</summary>
        </member>
        <member name="F:kManageMemberSystems">
            <summary>Manage member systems.</summary>
        </member>
        <member name="F:kManageSystemServers">
            <summary>Manage system servers.</summary>
        </member>
        <member name="F:kViewSystemHealth">
            <summary>View system health.</summary>
        </member>
        <member name="F:kConfigureRecording">
            <summary>Configure recording.</summary>
        </member>
        <member name="F:kDefineSystemShortcuts">
            <summary>Define system shortcuts.</summary>
        </member>
        <member name="F:kSetSystemLocaleOptions">
            <summary>Set system locale options.</summary>
        </member>
        <member name="F:kManageSystemLicenses">
            <summary>Manage system licenses.</summary>
        </member>
        <member name="F:kConfigureMonitorWallDecoders">
            <summary>Configure monitor wall decoders.</summary>
        </member>
        <member name="F:kManageDisplayDevices">
            <summary>Manage display devices.</summary>
        </member>
        <member name="F:kSetupEdgeDevices">
            <summary>Setup edge devices.</summary>
        </member>
        <member name="F:kUpdateDeviceSoftware">
            <summary>Update device software.</summary>
        </member>
        <member name="F:kManageDeviceLicenses">
            <summary>Manage device licenses.</summary>
        </member>
        <member name="F:kManageIO">
            <summary>Manage I/O.</summary>
        </member>
        <member name="F:kManageSystemTags">
            <summary>Manage system tags.</summary>
        </member>
        <member name="F:kManageRoles">
            <summary>Manage roles.</summary>
        </member>
        <member name="F:kResetUserPasswords">
            <summary>Reset user passwords.</summary>
        </member>
        <member name="F:kAssignRolesToUsers">
            <summary>Assign roles to users.</summary>
        </member>
        <member name="F:kManageUserAccounts">
            <summary>Manage user accounts.</summary>
        </member>
        <member name="F:kConfigureEvents">
            <summary>Configure events.</summary>
        </member>
        <member name="F:kHandleEvents">
            <summary>Handle events.</summary>
        </member>
        <member name="F:kViewEventHistory">
            <summary>View event history.</summary>
        </member>
        <member name="F:kMultiviewQty">
            <summary>Multiview qty.</summary>
        </member>
        <member name="F:kAuditUserActivity">
            <summary>AuditUser activity.</summary>
        </member>
        <member name="F:kManageSystemWorkspaces">
            <summary>Manage system workspaces.</summary>
        </member>
        <member name="F:kAccessUserWorkspaces">
            <summary>Access user workspaces.</summary>
        </member>
        <member name="F:kManageCameraTours">
            <summary>Manage camera tours.</summary>
        </member>
        <member name="F:kDefinePtzPresets">
            <summary>Define ptz presets.</summary>
        </member>
        <member name="F:kManageMapFiles">
            <summary>Manage map files.</summary>
        </member>
        <member name="F:kPlaceCamerasOnMap">
            <summary>Place cameras on map.</summary>
        </member>
        <member name="F:kViewMaps">
            <summary>View maps.</summary>
        </member>
        <member name="F:kUseMap">
            <summary>Use map.</summary>
        </member>
        <member name="F:kManageExports">
            <summary>Manage exports.</summary>
        </member>
        <member name="F:kExportMediaClips">
            <summary>Export media clips.</summary>
        </member>
        <member name="F:kSystemLocks">
            <summary>System locks.</summary>
        </member>
        <member name="F:kSystemBookmarks">
            <summary>System bookmarks.</summary>
        </member>
        <member name="F:kViewRecordedMedia">
            <summary>View recorded media.</summary>
        </member>
        <member name="F:kAccessRelays">
            <summary>Access relays.</summary>
        </member>
        <member name="F:kAccessAlarms">
            <summary>Access alarms.</summary>
        </member>
        <member name="F:kLaunchSavedViewsRemotely">
            <summary>Launch saved views remotely.</summary>
        </member>
        <member name="F:kRecordMedia">
            <summary>Record media.</summary>
        </member>
        <member name="F:kLockPtzMode">
            <summary>Lock PTZ mode.</summary>
        </member>
        <member name="F:kUsePtzMode">
            <summary>Use PTZ mode.</summary>
        </member>
        <member name="F:kViewLiveMedia">
            <summary>View live media.</summary>
        </member>
        <member name="T:VxSdk.VxPermissionId">
            <summary>
Values that represent a permission type.
</summary>
        </member>
        <member name="F:kMotion">
            <summary>Motion overlay.</summary>
            <summary>Motion anayltic.</summary>
        </member>
        <member name="T:VxSdk.VxOverlayType">
            <summary>
Values that represent available overlays.
</summary>
        </member>
        <member name="F:kSupport">
            <summary>Support node.</summary>
        </member>
        <member name="T:VxSdk.VxNodeType">
            <summary>
Values that represent a particular type of node.
</summary>
        </member>
        <member name="T:VxSdk.VxMotionMode">
            <summary>
Values that represent motion detection modes.
</summary>
        </member>
        <member name="F:kUnicast_Unicast">
            <summary>Unicast between the data source and VxMG; unicast between VxMG and client.</summary>
        </member>
        <member name="F:kUnicast_Multicast">
            <summary>Unicast between the data source and VxMG; multicast between VxMG and client.</summary>
        </member>
        <member name="F:kMulticast_Unicast">
            <summary>Multicast between the data source and VxMG; unicast between VxMG and client.</summary>
        </member>
        <member name="F:kMulticast_Multicast">
            <summary>Multicast between the data source and VxMG; multicast between VxMG and client.</summary>
        </member>
        <member name="T:VxSdk.VxMgTranscast">
            <summary>
Values that represent VxMediaGateway communication configurations. The first part indicates the default
communication used between a data source and the VxMediaGateway; the second part indicates the default
communication between the VxMediaGateway and a client.
</summary>
        </member>
        <member name="F:kUnauthorized">
            <summary>Invalid credentials; unavailable.</summary>
            <summary>The report could not be generated because the user is not authorized to access the data required to create the report.</summary>
            <summary>
An unauthorized request was made (i.e. user does not have permission to access the resource).
</summary>
        </member>
        <member name="F:kRemoving">
            <summary>Being removed; unavailable.</summary>
        </member>
        <member name="T:VxSdk.VxMemberState">
            <summary>
Values that represent operational states for a member system.
</summary>
        </member>
        <member name="F:kFatal">
            <summary>Fatal log level.</summary>
        </member>
        <member name="F:kError">
            <summary>Error log level.</summary>
        </member>
        <member name="F:kWarning">
            <summary>Warning log level.</summary>
        </member>
        <member name="F:kInfo">
            <summary>Info log level.</summary>
        </member>
        <member name="F:kDebug">
            <summary>Debug log level.</summary>
        </member>
        <member name="F:kTrace">
            <summary>Trace log level.</summary>
        </member>
        <member name="T:VxSdk.VxLogLevel">
            <summary>
Values that represent logging severity levels.
</summary>
        </member>
        <member name="F:kMemory">
            <summary>Memory load.</summary>
        </member>
        <member name="F:kGpu">
            <summary>GPU load.</summary>
        </member>
        <member name="F:kCpu">
            <summary>CPU load.</summary>
        </member>
        <member name="T:VxSdk.VxLoadType">
            <summary>
Values that represent the type of load being referenced.
</summary>
        </member>
        <member name="F:kOmnidirectional">
            <summary>Type of line-counter that maintains a single count for objects that cross a configured line in any direction.</summary>
        </member>
        <member name="F:kBidirectional">
            <summary>Type of line-counter that maintains two counts for objects that cross a configured line on either side of the line. For example in/out door counts.</summary>
        </member>
        <member name="F:kUnidirectional">
            <summary>Type of line-counter that counts objects that cross a configured line in a specific direction.</summary>
        </member>
        <member name="T:VxSdk.VxLineCounterType">
            <summary>
Values that represent the types of object line counter analytics.
</summary>
        </member>
        <member name="F:kTurkish">
            <summary>Turkish language.</summary>
        </member>
        <member name="F:kSpanish">
            <summary>Spanish language.</summary>
        </member>
        <member name="F:kRussian">
            <summary>Russian language.</summary>
        </member>
        <member name="F:kRomanian">
            <summary>Romanian language.</summary>
        </member>
        <member name="F:kPortuguese">
            <summary>Portuguese language.</summary>
        </member>
        <member name="F:kPolish">
            <summary>Polish language.</summary>
        </member>
        <member name="F:kKorean">
            <summary>Korean language.</summary>
        </member>
        <member name="F:kJapanese">
            <summary>Japanese language.</summary>
        </member>
        <member name="F:kItalian">
            <summary>Italian language.</summary>
        </member>
        <member name="F:kHungarian">
            <summary>Hungarian language.</summary>
        </member>
        <member name="F:kGerman">
            <summary>German language.</summary>
        </member>
        <member name="F:kFrench">
            <summary>French language.</summary>
        </member>
        <member name="F:kEnglish">
            <summary>English language.</summary>
        </member>
        <member name="F:kCzech">
            <summary>Czech language.</summary>
        </member>
        <member name="F:kCroatian">
            <summary>Croatian language.</summary>
        </member>
        <member name="F:kChinese">
            <summary>Chinese language.</summary>
        </member>
        <member name="F:kBulgarian">
            <summary>Bulgarian language.</summary>
        </member>
        <member name="F:kArabic">
            <summary>Arabic language.</summary>
        </member>
        <member name="T:VxSdk.VxLanguage">
            <summary>
Values that represent languages supported by VideoXpert.
</summary>
        </member>
        <member name="F:kOpen">
            <summary>Open the iris.</summary>
        </member>
        <member name="F:kClose">
            <summary>Close the iris.</summary>
        </member>
        <member name="T:VxSdk.VxIrisDirection">
            <summary>
Values that represent iris directions.
</summary>
        </member>
        <member name="F:kWestboundThrough">
            <summary>West-bound through area.</summary>
        </member>
        <member name="F:kWestboundRight">
            <summary>West-bound right area.</summary>
        </member>
        <member name="F:kWestboundPedestrian">
            <summary>West-bound pedestrian area.</summary>
        </member>
        <member name="F:kWestboundLeft">
            <summary>West-bound left area.</summary>
        </member>
        <member name="F:kSouthboundThrough">
            <summary>South-bound through area.</summary>
        </member>
        <member name="F:kSouthboundRight">
            <summary>South-bound right area.</summary>
        </member>
        <member name="F:kSouthboundPedestrian">
            <summary>South-bound pedestrian area.</summary>
        </member>
        <member name="F:kSouthboundLeft">
            <summary>South-bound left area.</summary>
        </member>
        <member name="F:kNorthboundThrough">
            <summary>North-bound through area.</summary>
        </member>
        <member name="F:kNorthboundRight">
            <summary>North-bound right area.</summary>
        </member>
        <member name="F:kNorthboundPedestrian">
            <summary>North-bound pedestrian area.</summary>
        </member>
        <member name="F:kNorthboundLeft">
            <summary>North-bound left area.</summary>
        </member>
        <member name="F:kEastboundThrough">
            <summary>East-bound through area.</summary>
        </member>
        <member name="F:kEastboundRight">
            <summary>East-bound right area.</summary>
        </member>
        <member name="F:kEastboundPedestrian">
            <summary>East-bound pedestrian area.</summary>
        </member>
        <member name="F:kEastboundLeft">
            <summary>East-bound left area.</summary>
        </member>
        <member name="T:VxSdk.VxIntersectionArea">
            <summary>
Values that represent the area of an intersection.
</summary>
        </member>
        <member name="F:kSystemLicenseExpired">
            <summary>The license on the system has expired.</summary>
        </member>
        <member name="F:kGraceLicenseExpired">
            <summary>The grace license has expired.</summary>
        </member>
        <member name="F:kSystemConnectionRestored">
            <summary>The connection to the VideoXpert system was restored.</summary>
        </member>
        <member name="F:kSystemConnectionLost">
            <summary>The connection to the VideoXpert system was lost.</summary>
        </member>
        <member name="T:VxSdk.VxInternalEventType">
            <summary>
Values that represent event types sent from the VxSDK.
</summary>
        </member>
        <member name="F:kTimedOut">
            <summary>Timed out while waiting for a response from a device.</summary>
        </member>
        <member name="F:kSoapFault">
            <summary>Encountered a SOAP fault while setting up communication with the device.</summary>
        </member>
        <member name="F:kServerOffline">
            <summary>A server has gone offline during device discovery.</summary>
        </member>
        <member name="F:kNoResponse">
            <summary>No response from the device.</summary>
        </member>
        <member name="F:kConnectFailed">
            <summary>Failed to establish a connection to the device.</summary>
        </member>
        <member name="T:VxSdk.VxInitializationStatusReason">
            <summary>
Values that represent initialization status reason indicators.
</summary>
        </member>
        <member name="F:kMissing">
            <summary>The disk missing.</summary>
        </member>
        <member name="T:VxSdk.VxHddStatus">
            <summary>
Values that represent the health status of a drive.
</summary>
        </member>
        <member name="F:kWriteError">
            <summary>Write error.</summary>
        </member>
        <member name="F:kTransportChanged">
            <summary>Transport changed.</summary>
        </member>
        <member name="F:kTimeJump">
            <summary>Time jump.</summary>
        </member>
        <member name="F:kStreamSourceChanged">
            <summary>Stream source changed.</summary>
        </member>
        <member name="F:kStreamLoss">
            <summary>Stream loss.</summary>
        </member>
        <member name="F:kStorageOffline">
            <summary>Storage device offline.</summary>
        </member>
        <member name="F:kNotSupported">
            <summary>Not supported.</summary>
            <summary>Device not supported.</summary>
        </member>
        <member name="F:kCameraOffline">
            <summary>Camera offline.</summary>
        </member>
        <member name="T:VxSdk.VxGapReason">
            <summary>
Values that represent the reason for a gap.
</summary>
        </member>
        <member name="F:kUnavailable">
            <summary>Gap filler status is unavailable.</summary>
            <summary>Offline; unavailable.</summary>
        </member>
        <member name="F:kDisabled">
            <summary>Gap filler is disabled.</summary>
            <summary>Motion detection disabled.</summary>
            <summary>PTZ control disabled.</summary>
            <summary>Smart Compression is disabled.</summary>
        </member>
        <member name="T:VxSdk.VxGapFillerStatus">
            <summary>
Values that represent the status of gap filling.
</summary>
        </member>
        <member name="F:kNear">
            <summary>Focus nearer.</summary>
        </member>
        <member name="F:kFar">
            <summary>Focus farther.</summary>
        </member>
        <member name="F:kStop">
            <summary>Stop focus movement.</summary>
            <summary>Stop iris movement.</summary>
            <summary>Stop zoom movement.</summary>
        </member>
        <member name="T:VxSdk.VxFocusDirection">
            <summary>
Values that represent focus directions.
</summary>
        </member>
        <member name="F:kSuccess">
            <summary>The file recovery succeeded.</summary>
        </member>
        <member name="F:kIdle">
            <summary>The file recovery process is idle.</summary>
        </member>
        <member name="T:VxSdk.VxFileRecoveryStatus">
            <summary>
Values that represent the status of a file recovery.
</summary>
        </member>
        <member name="F:kExportTempStorageFull">
            <summary>The temporary export storage is full.</summary>
        </member>
        <member name="T:VxSdk.VxExportStreamStatusReason">
            <summary>
Values that represent the reason for the current status of an export stream.
</summary>
        </member>
        <member name="F:kReady">
            <summary>The export stream is ready.</summary>
        </member>
        <member name="F:kPreparing">
            <summary>The export stream is being prepared.</summary>
        </member>
        <member name="F:kNeedsPreparation">
            <summary>The export stream needs preparation.</summary>
        </member>
        <member name="T:VxSdk.VxExportStreamStatus">
            <summary>
Values that represent status of an export stream.
</summary>
        </member>
        <member name="F:kExportStorageUnavailable">
            <summary>The export storage is unavailable.</summary>
            <summary>
The export storage location is not accessible; this may be due to an invalid location, network issue,
or storage issue.
</summary>
        </member>
        <member name="F:kExportStorageUnauthenticated">
            <summary>The export storage is unauthenticated.</summary>
            <summary> The export storage location is not accessible due to invalid credentials.</summary>
        </member>
        <member name="F:kExportStorageFull">
            <summary>The export storage is full.</summary>
            <summary>The export storage location does not have enough free space to store the export.</summary>
        </member>
        <member name="F:kExportDataUnretrievable">
            <summary>The export data is unretrievable.</summary>
            <summary>The export data is unretrievable.</summary>
            <summary>The data needed to perform the export operation can not be retrieved.</summary>
        </member>
        <member name="T:VxSdk.VxExportStatusReason">
            <summary>
Values that represent the reason for the current status of an export.
</summary>
        </member>
        <member name="F:kPending">
            <summary>The export is queued to start.</summary>
            <summary>Gap filling is pending.</summary>
            <summary>Being added; unavailable.</summary>
            <summary>The report is queued to be generated.</summary>
        </member>
        <member name="F:kExporting">
            <summary>The export is in progress.</summary>
        </member>
        <member name="T:VxSdk.VxExportStatus">
            <summary>
Values that represent status of an export.
</summary>
        </member>
        <member name="F:kMkvZip">
            <summary>MKV file(s) contained withing a zip file.</summary>
        </member>
        <member name="T:VxSdk.VxExportFormat">
            <summary>
Values that represent the format of exported data.
</summary>
        </member>
        <member name="F:kSimple">
            <summary>MPEG4 Simple profile.</summary>
        </member>
        <member name="F:kMain10">
            <summary>H265 Main10 profile.</summary>
        </member>
        <member name="F:kMain">
            <summary>H264/H265 Main profile.</summary>
        </member>
        <member name="F:kHigh">
            <summary>H264 High profile.</summary>
            <summary>Allows a lot of distortion in order to achieve greater compression efficiency gains.</summary>
        </member>
        <member name="F:kExtended">
            <summary>H264 Extended profile.</summary>
        </member>
        <member name="F:kBaseline">
            <summary>H264 Baseline profile.</summary>
        </member>
        <member name="F:kAdvancedSimple">
            <summary>MPEG4 Advanced Simple profile.</summary>
        </member>
        <member name="T:VxSdk.VxEncoderProfile">
            <summary>
Values that represent the profile used by an encoder to select the features used.
</summary>
        </member>
        <member name="F:kSerenity">
            <summary>Serenity drawing provider</summary>
        </member>
        <member name="F:kEsri">
            <summary>Esri drawing provider</summary>
        </member>
        <member name="T:VxSdk.VxDrawingProvider">
            <summary>
Values that represent which provider is associated with a drawing
</summary>
        </member>
        <member name="F:kWsDiscovery">
            <summary>WS-Discovery.</summary>
        </member>
        <member name="F:kSsdp">
            <summary>SSDP discovery.</summary>
        </member>
        <member name="T:VxSdk.VxDiscoveryProtocol">
            <summary>
Values that represent protocols to use for discovery.
</summary>
        </member>
        <member name="F:kDatabase">
            <summary>A VideoXpert database.</summary>
            <summary>Database node.</summary>
        </member>
        <member name="F:kAnalyticServer">
            <summary>An analytic server.</summary>
        </member>
        <member name="F:kUi">
            <summary>A UI device.</summary>
        </member>
        <member name="F:kRecorder">
            <summary>A network storage device.</summary>
            <summary>Recorder based motion detection.</summary>
        </member>
        <member name="F:kMonitor">
            <summary>A monitor device.</summary>
            <summary>A monitor resource.</summary>
        </member>
        <member name="F:kMg">
            <summary>A VideoXpert MediaGateway device.</summary>
        </member>
        <member name="F:kGeneric">
            <summary>A generic device.</summary>
        </member>
        <member name="F:kExternal">
            <summary>An external device.</summary>
        </member>
        <member name="F:kEncoder">
            <summary>An encoder device.</summary>
        </member>
        <member name="F:kDecoder">
            <summary>A decoder device.</summary>
        </member>
        <member name="F:kCore">
            <summary>A VideoXpert Core device.</summary>
            <summary>Core node.</summary>
        </member>
        <member name="F:kCamera">
            <summary>A camera device.</summary>
            <summary>Camera based motion detection.</summary>
            <summary>A report about data sources.</summary>
            <summary>Camera system license.</summary>
        </member>
        <member name="F:kAllInOne">
            <summary>A VideoXpert all in one device (i.e. VxPro).</summary>
        </member>
        <member name="F:kAccessController">
            <summary>An Access Control device.</summary>
        </member>
        <member name="F:kAcc">
            <summary>A VideoXpert Accessory Server device.</summary>
        </member>
        <member name="T:VxSdk.VxDeviceType">
            <summary>
Values that represent device types.
</summary>
        </member>
        <member name="F:kUserRequired">
            <summary>User required.</summary>
        </member>
        <member name="F:kFailedToInitialize">
            <summary>Initialization failure.</summary>
        </member>
        <member name="F:kAuthExpired">
            <summary>Expired credentials.</summary>
            <summary>A request was made using expired authentication credentials.</summary>
        </member>
        <member name="F:kNsmMember">
            <summary>NSM5200 member.</summary>
        </member>
        <member name="F:kNsmManager">
            <summary>NSM5200 manager.</summary>
        </member>
        <member name="F:kIdInconsistent">
            <summary>Device identity mismatch.</summary>
        </member>
        <member name="F:kUnauthenticated">
            <summary>Invalid/missing credentials.</summary>
            <summary>Invalid/missing credentials.</summary>
            <summary>An unauthenticated request was made (i.e. invalid username and/or password).</summary>
        </member>
        <member name="F:kInitializing">
            <summary>Being prepared for use.</summary>
        </member>
        <member name="T:VxSdk.VxDeviceStatus">
            <summary>
Values that represent the current status of a device.
</summary>
        </member>
        <member name="F:kOnline">
            <summary>The device is online.</summary>
            <summary>Online; available.</summary>
        </member>
        <member name="F:kOffline">
            <summary>The device is offline.</summary>
        </member>
        <member name="T:VxSdk.VxDeviceState">
            <summary>
Values that represent the operational state of a device.
</summary>
        </member>
        <member name="F:kSunday">
            <summary>Sunday.</summary>
        </member>
        <member name="F:kSaturday">
            <summary>Saturday.</summary>
        </member>
        <member name="F:kFriday">
            <summary>Friday.</summary>
        </member>
        <member name="F:kThursday">
            <summary>Thursday.</summary>
        </member>
        <member name="F:kWednesday">
            <summary>Wednesday.</summary>
        </member>
        <member name="F:kTuesday">
            <summary>Tuesday.</summary>
        </member>
        <member name="F:kMonday">
            <summary>Monday.</summary>
        </member>
        <member name="T:VxSdk.VxDayOfWeek">
            <summary>
Values that represent days of the week.
</summary>
        </member>
        <member name="F:kEdge">
            <summary>An edge storage device.</summary>
        </member>
        <member name="F:kVideoXpertStorage">
            <summary>A VideoXpert storage device.</summary>
        </member>
        <member name="F:kNSM">
            <summary>An NSM network video recorder device.</summary>
        </member>
        <member name="F:kDigitalSentry">
            <summary>A Digital Sentry device.</summary>
        </member>
        <member name="T:VxSdk.VxDataStorageType">
            <summary>
Values that represent hardware type of a data storage.
</summary>
        </member>
        <member name="F:kMetadata">
            <summary>A metadata data source.</summary>
            <summary>Metadata stream format.</summary>
        </member>
        <member name="F:kAudio">
            <summary>An audio data source.</summary>
        </member>
        <member name="F:kVideo">
            <summary>A video data source.</summary>
        </member>
        <member name="T:VxSdk.VxDataSourceType">
            <summary>
Values that represent the particular type of a data source.
</summary>
        </member>
        <member name="F:kZoom">
            <summary>Zoom capability.</summary>
        </member>
        <member name="F:kPanTilt">
            <summary>Pan/tilt capability.</summary>
        </member>
        <member name="F:kIris">
            <summary>Iris capability.</summary>
        </member>
        <member name="F:kFocus">
            <summary>Focus capability.</summary>
        </member>
        <member name="T:VxSdk.VxDataSourceCapability">
            <summary>
Values that represent a capability supported by a data source.
</summary>
        </member>
        <member name="F:kRecovering">
            <summary>The database is recovering.</summary>
        </member>
        <member name="F:kRebuilding">
            <summary>The database is rebuilding.</summary>
            <summary>The disk is rebuilding.</summary>
        </member>
        <member name="F:kOk">
            <summary>The database is OK.</summary>
            <summary>The disk is OK.</summary>
        </member>
        <member name="T:VxSdk.VxDatabaseStatus">
            <summary>
Values that represent the health status of a database.
</summary>
        </member>
        <member name="F:kUnconfigured">
            <summary>The cluster is unconfigured.</summary>
            <summary>The disk has not been configured.</summary>
        </member>
        <member name="F:kConfiguring">
            <summary>The cluster is being configured.</summary>
        </member>
        <member name="F:kConfigured">
            <summary>The cluster is configured.</summary>
        </member>
        <member name="T:VxSdk.VxConfigStatus">
            <summary>
Values that represent the current cluster configuration status.
</summary>
        </member>
        <member name="F:kDiscovered">
            <summary>Filter by time discovered.</summary>
        </member>
        <member name="F:kFilename">
            <summary>Filter by filename.</summary>
        </member>
        <member name="F:kRecordType">
            <summary>Filter by recording type.</summary>
        </member>
        <member name="F:kProvider">
            <summary>Filter by provider type.</summary>
        </member>
        <member name="F:kParentId">
            <summary>Filter by parent id.</summary>
        </member>
        <member name="F:kLicenseRequired">
            <summary>True to return only items that require a license.</summary>
            <summary>
A valid license is required to utilize this method on the resource; no valid license found.
</summary>
        </member>
        <member name="F:kLayerName">
            <summary>Filter by layer name.</summary>
        </member>
        <member name="F:kHasFolderTags">
            <summary>True to return only items that have folder tags.</summary>
        </member>
        <member name="F:kGroupId">
            <summary>Filter by group id.</summary>
        </member>
        <member name="F:kFolder">
            <summary>True to return only items that are folders.</summary>
        </member>
        <member name="F:kEncoding">
            <summary>Filter by encoding type.</summary>
        </member>
        <member name="F:kDriverType">
            <summary>Filter by driver type.</summary>
        </member>
        <member name="F:kDeviceId">
            <summary>Filter by device id.</summary>
            <summary>The device id report field.</summary>
        </member>
        <member name="F:kDataSourceType">
            <summary>Filter by data source type.</summary>
        </member>
        <member name="F:kTrashed">
            <summary>True to return only items that have been trashed.</summary>
        </member>
        <member name="F:kDataStorageId">
            <summary>Filter by data storage id.</summary>
        </member>
        <member name="F:kInitiated">
            <summary>Filter by the intiated time value.</summary>
        </member>
        <member name="F:kEnabled">
            <summary>True to return only items that are enabled.</summary>
        </member>
        <member name="F:kTagsAll">
            <summary>Filter by all public and private tags (tags_all).</summary>
        </member>
        <member name="F:kAdvancedQuery">
            <summary>Filter by advanced query.</summary>
        </member>
        <member name="F:kImageType">
            <summary>Filter by a image type, useful when filtering Drawings.</summary>
        </member>
        <member name="F:kServicePropertyId">
            <summary>
Filter by the name of the key in the properties map corresponding to the service identifier.
</summary>
        </member>
        <member name="F:kDataSourceName">
            <summary>Filter by data source name.</summary>
        </member>
        <member name="F:kDataSourceAllPrivateTags">
            <summary>Filter by comma-separated list of tag names owned by the current user.</summary>
        </member>
        <member name="F:kDataSourceAllTags">
            <summary>Filter by comma-separated list of tag names.</summary>
        </member>
        <member name="F:kHasStatus">
            <summary>Filter by items that have a specific status.</summary>
        </member>
        <member name="F:kHasProperty">
            <summary>Filter by items that have a specific property defined.</summary>
        </member>
        <member name="F:kLastName">
            <summary>Filter by last name.</summary>
        </member>
        <member name="F:kFirstName">
            <summary>Filter by first name.</summary>
        </member>
        <member name="F:kManualRecording">
            <summary>True to return items that are currently being manually recorded.</summary>
        </member>
        <member name="F:kAllPrivateTags">
            <summary>Filter by comma-separated list of tag names owned by the current user.</summary>
        </member>
        <member name="F:kLinked">
            <summary>True to return only items that are linked.</summary>
        </member>
        <member name="F:kResourceType">
            <summary>Filter by resource type.</summary>
        </member>
        <member name="F:kNotify">
            <summary>Filter by the notify value.</summary>
        </member>
        <member name="F:kLog">
            <summary>Filter by the log value.</summary>
        </member>
        <member name="F:kAudibleNotify">
            <summary>Filter by the audible notification value.</summary>
        </member>
        <member name="F:kInternal">
            <summary>True to return items that are internal to the server and read-only</summary>
        </member>
        <member name="F:kResourceId">
            <summary>Filter by resource id.</summary>
        </member>
        <member name="F:kStatus">
            <summary>Filter by status.</summary>
        </member>
        <member name="F:kSize">
            <summary>Filter by the size value.</summary>
        </member>
        <member name="F:kPercentComplete">
            <summary>Filter by the percent complete value.</summary>
        </member>
        <member name="F:kSourceUserName">
            <summary>Filter by source username.</summary>
        </member>
        <member name="F:kSourceDeviceId">
            <summary>Filter by source device id.</summary>
        </member>
        <member name="F:kSeverity">
            <summary>Filter by severity.</summary>
        </member>
        <member name="F:kNotifies">
            <summary>True to return items that were sent to the client.</summary>
        </member>
        <member name="F:kGeneratorDeviceId">
            <summary>Filter by generator device id.</summary>
        </member>
        <member name="F:kAckUser">
            <summary>Filter by the ack user value.</summary>
        </member>
        <member name="F:kAckState">
            <summary>Filter by the ack state value.</summary>
        </member>
        <member name="F:kVersion">
            <summary>Filter by version.</summary>
        </member>
        <member name="F:kVendor">
            <summary>Filter by vendor.</summary>
        </member>
        <member name="F:kSerial">
            <summary>Filter by serial.</summary>
        </member>
        <member name="F:kModel">
            <summary>Filter by model.</summary>
        </member>
        <member name="F:kCommissioned">
            <summary>True to return only items that are commissioned.</summary>
            <summary>A license commissioned event.</summary>
        </member>
        <member name="F:kState">
            <summary>Filter by the state value.</summary>
        </member>
        <member name="F:kRecording">
            <summary>True to return only items that are recording.</summary>
        </member>
        <member name="F:kNumber">
            <summary>Filter by number.</summary>
        </member>
        <member name="F:kIp">
            <summary>Filter by IP.</summary>
        </member>
        <member name="F:kCapturing">
            <summary>True to return only items that are capturing.</summary>
        </member>
        <member name="F:kAllTags">
            <summary>Filter by comma-separated list of tag names.</summary>
        </member>
        <member name="F:kUsername">
            <summary>Filter by the username value.</summary>
        </member>
        <member name="F:kOwner">
            <summary>Filter by owner.</summary>
        </member>
        <member name="F:kOwned">
            <summary>True to return only owned items.</summary>
        </member>
        <member name="F:kClientType">
            <summary>Filter by the client type value.</summary>
        </member>
        <member name="F:kFramerate">
            <summary>Filter by the framerate value.</summary>
        </member>
        <member name="F:kEvent">
            <summary>Filter by the event value.</summary>
            <summary>General system event.</summary>
            <summary>A report about events.</summary>
        </member>
        <member name="F:kStartTime">
            <summary>Filter by the start time value.</summary>
            <summary>Time (RFC 3339 format) at which the initial image should start .</summary>
        </member>
        <member name="F:kEndTime">
            <summary>Filter by the end time value.</summary>
            <summary>Time (RFC 3339 format) at which no further images should be returned.</summary>
        </member>
        <member name="F:kTime">
            <summary>Filter by the time value.</summary>
        </member>
        <member name="F:kModifiedSince">
            <summary>Return items that have been modified since the given time.</summary>
        </member>
        <member name="F:kDescription">
            <summary>Filter by the description value.</summary>
        </member>
        <member name="F:kDataSourceNumber">
            <summary>Filter by data source number.</summary>
        </member>
        <member name="F:kUnassigned">
            <summary>True to return only items that are not assigned.</summary>
        </member>
        <member name="F:kSituationType">
            <summary>Filter by situation type.</summary>
        </member>
        <member name="F:kType">
            <summary>Filter by type.</summary>
        </member>
        <member name="F:kStart">
            <summary>The start index.</summary>
        </member>
        <member name="F:kId">
            <summary>Filter by id.</summary>
        </member>
        <member name="F:kName">
            <summary>Filter by name.</summary>
        </member>
        <member name="F:kSearchEndTime">
            <summary>Filter by end time.</summary>
        </member>
        <member name="F:kSearchStartTime">
            <summary>Filter by start time.</summary>
        </member>
        <member name="F:kDataSourceId">
            <summary>Filter by data source id.</summary>
        </member>
        <member name="F:kCount">
            <summary>The maximum number of items to return per page.</summary>
        </member>
        <member name="T:VxSdk.VxCollectionFilterItem">
            <summary>
Values that represent collection filter types.
</summary>
        </member>
        <member name="F:kVxLoadBalancing">
            <summary>Utilize the internal VX load balancing algorithm; may be used on 2..3 node clusters.</summary>
        </member>
        <member name="F:kExternalLoadBalancer">
            <summary>Utilize an external load balancer; may be used on 2..n node clusters.</summary>
        </member>
        <member name="T:VxSdk.VxClusterAvailabilityMode">
            <summary>
Values that represent how the nodes in the cluster are balanced and failover.
</summary>
        </member>
        <member name="F:k8x8">
            <summary>A 8x8 monitor layout.</summary>
        </member>
        <member name="F:k6x6">
            <summary>A 6x6 monitor layout.</summary>
        </member>
        <member name="F:kMonitorWall">
            <summary>A monitor wall layout.</summary>
        </member>
        <member name="F:k1plus4wide">
            <summary>A 1 plus 4 wide monitor layout.</summary>
        </member>
        <member name="F:k1plus4tall">
            <summary>A 1 plus 4 tall monitor layout.</summary>
        </member>
        <member name="F:k1plus1plus4">
            <summary>A 1 plus 1 plus 4 monitor layout.</summary>
        </member>
        <member name="F:k8plus2">
            <summary>A 8 plus 2 monitor layout.</summary>
        </member>
        <member name="F:k12plus1">
            <summary>A 12 plus 1 monitor layout.</summary>
        </member>
        <member name="F:k1plus7">
            <summary>A 1 plus 7 monitor layout.</summary>
        </member>
        <member name="F:k1plus5">
            <summary>A 1 plus 5 monitor layout.</summary>
        </member>
        <member name="F:k3plus4">
            <summary>A 3 plus 4 monitor layout.</summary>
        </member>
        <member name="F:k2plus8">
            <summary>A 2 plus 8 monitor layout.</summary>
        </member>
        <member name="F:k1plus12">
            <summary>A 1 plus 12 monitor layout.</summary>
        </member>
        <member name="F:k5x5">
            <summary>A 5x5 monitor layout.</summary>
        </member>
        <member name="F:k4x4">
            <summary>A 4x4 monitor layout.</summary>
        </member>
        <member name="F:k4x3">
            <summary>A 4x3 monitor layout.</summary>
            <summary>4:3 aspect ratio.</summary>
        </member>
        <member name="F:k3x3">
            <summary>A 3x3 monitor layout.</summary>
        </member>
        <member name="F:k3x2">
            <summary>A 3x2 monitor layout.</summary>
            <summary>3:2 aspect ratio.</summary>
        </member>
        <member name="F:k2x3">
            <summary>A 2x3 monitor layout.</summary>
        </member>
        <member name="F:k2x2">
            <summary>A 2x2 monitor layout.</summary>
        </member>
        <member name="F:k2x1">
            <summary>A 2x1 monitor layout.</summary>
        </member>
        <member name="F:k1x2">
            <summary>A 1x2 monitor layout.</summary>
        </member>
        <member name="F:k1x1">
            <summary>A 1x1 monitor layout.</summary>
            <summary>1:1 aspect ratio.</summary>
        </member>
        <member name="T:VxSdk.VxCellLayout">
            <summary>
Values that represent possible monitor layouts.
</summary>
        </member>
        <member name="F:kPtz">
            <summary>PTZ mode.</summary>
        </member>
        <member name="F:kPlayback">
            <summary>Playback mode.</summary>
            <summary>The stream is playing recorded video.</summary>
        </member>
        <member name="F:kNavigation">
            <summary>Navigation mode.</summary>
        </member>
        <member name="F:kDigitalPtz">
            <summary>Digital PTZ mode.</summary>
        </member>
        <member name="T:VxSdk.VxCellInputMode">
            <summary>
Values that represent the input mode for a monitor cell.
</summary>
        </member>
        <member name="F:kNeverDelete">
            <summary>Unlocked bookmarks are not automatically deleted.</summary>
        </member>
        <member name="F:kDeleteAfterRecording">
            <summary>
Unlocked bookmarks are automatically deleted after their corresponding recordings are deleted.
</summary>
        </member>
        <member name="F:kDeleteAfterLimit">
            <summary>Unlocked bookmarks are automatically deleted after the retention limit.</summary>
        </member>
        <member name="T:VxSdk.VxBookmarkRetentionPolicy">
            <summary>
Values that represent bookmark retention policies.
</summary>
        </member>
        <member name="F:kShadowCopyMountFailure">
            <summary>Shadow copy mount failed.</summary>
        </member>
        <member name="F:kShadowCopyCreationFailure">
            <summary>Shadow copy creation failed.</summary>
        </member>
        <member name="F:kBackupStorageUnavailable">
            <summary>Backup storage is unavailable.</summary>
        </member>
        <member name="F:kBackupStorageUnauthenticated">
            <summary>Backup storage unauthenticated.</summary>
        </member>
        <member name="F:kBackupStorageFull">
            <summary>Backup storage is full.</summary>
        </member>
        <member name="T:VxSdk.VxBackupStatusReason">
            <summary>
Values that represent the reason for the current status of a backup.
</summary>
        </member>
        <member name="F:kSuccessful">
            <summary>Backup was successful.</summary>
            <summary>The export has completed successfully.</summary>
            <summary>The report was successfully generated.</summary>
        </member>
        <member name="F:kInProgress">
            <summary>Backup is in progress.</summary>
            <summary>The file recovery is in progress.</summary>
            <summary>The report is being generated.</summary>
            <summary>The search is in progress.</summary>
        </member>
        <member name="F:kHalted">
            <summary>Backup was halted.</summary>
        </member>
        <member name="F:kFailed">
            <summary>Backup has failed.</summary>
            <summary>Cluster configuration failed.</summary>
            <summary>The database has failed.</summary>
            <summary>The export has failed.</summary>
            <summary>The export stream preparation has failed.</summary>
            <summary>The file recovery failed.</summary>
            <summary>Failed to fill the gap.</summary>
            <summary>The disk has failed.</summary>
            <summary>The report failed to be generated.</summary>
        </member>
        <member name="T:VxSdk.VxBackupStatus">
            <summary>
Values that represent the status of a backup.
</summary>
        </member>
        <member name="F:kSHA">
            <summary>SHA authentication protocol.</summary>
        </member>
        <member name="F:kNone">
            <summary>No authentication protocol.</summary>
            <summary>No filter.</summary>
            <summary>Disable logging.</summary>
            <summary>No encryption.</summary>
            <summary>No filter.</summary>
            <summary>SNMP is disabled.</summary>
            <summary>Time server information is not provided; the time itself is set manually.</summary>
            <summary>Do not perform a zoom action.</summary>
        </member>
        <member name="F:kMD5">
            <summary>MD5 authentication protocol.</summary>
        </member>
        <member name="T:VxSdk.VxAuthProtocol">
            <summary>
Values that represent SNMP v3 authentication protocols.
</summary>
        </member>
        <member name="F:kVehicle">
            <summary>A vehicle object type.</summary>
        </member>
        <member name="F:kPerson">
            <summary>A person object type.</summary>
        </member>
        <member name="T:VxSdk.VxAnalyticObjectType">
            <summary>
Values that represent the type of object this analytic pertains to.
</summary>
        </member>
        <member name="F:kObjectLineCounterReset">
            <summary>Capable of resetting the count values of an object line counter behavior.</summary>
        </member>
        <member name="F:kObjectLineCounterEvents">
            <summary>Line-based object counting events related to the object line counter behavior.</summary>
        </member>
        <member name="T:VxSdk.VxAnalyticCapability">
            <summary>
Values that represent analytic capabilities that are supported for analytic configs.
</summary>
        </member>
        <member name="F:kObjectWrongWay">
            <summary>Object wrong way analytic.</summary>
        </member>
        <member name="F:kObjectInZone">
            <summary>Object detected in zone analytic.</summary>
        </member>
        <member name="F:kObjectLineCounter">
            <summary>Object line counting analytic.</summary>
        </member>
        <member name="T:VxSdk.VxAnalyticBehaviorType">
            <summary>
Values that represent the type of analytic behavior being performed.
</summary>
        </member>
        <member name="F:kInactive">
            <summary>The alarm input is inactive.</summary>
            <summary>The relay output is inactive.</summary>
        </member>
        <member name="F:kActive">
            <summary>The alarm input is active.</summary>
            <summary>The relay output is active.</summary>
        </member>
        <member name="T:VxSdk.VxAlarmState">
            <summary>
Values that represent the state of an alarm input.
</summary>
        </member>
        <member name="F:kFire">
            <summary>The alarm input is a fire alarm.</summary>
        </member>
        <member name="F:kAlarm">
            <summary>The alarm input is a generic alarm.</summary>
            <summary>Hardware or software alarm.</summary>
        </member>
        <member name="T:VxSdk.VxAlarmInputType">
            <summary>
Values that represent the particular type of an alarm input.
</summary>
        </member>
        <member name="F:kSilenced">
            <summary>The event has been silenced.</summary>
        </member>
        <member name="F:kNoAckNeeded">
            <summary>No event acknowledgement is needed.</summary>
        </member>
        <member name="F:kAutoAcked">
            <summary>The event is auto-acknowledged.</summary>
        </member>
        <member name="F:kAcked">
            <summary>The event is acknowledged.</summary>
        </member>
        <member name="F:kAckNeeded">
            <summary>The event needs acknowledgement.</summary>
        </member>
        <member name="T:VxSdk.VxAckState">
            <summary>
Values that represent the current acknowledgement state of an event.
</summary>
        </member>
        <member name="F:kUnlocked">
            <summary>The access point is unlocked.</summary>
        </member>
        <member name="F:kPropped">
            <summary>The access point has been propped.</summary>
        </member>
        <member name="F:kOpened">
            <summary>The access point is open.</summary>
        </member>
        <member name="F:kLocked">
            <summary>The access point is locked.</summary>
            <summary>True to return only items that are locked.</summary>
        </member>
        <member name="F:kForced">
            <summary>The access point has been forced.</summary>
        </member>
        <member name="F:kFaulted">
            <summary>The access point has faulted.</summary>
        </member>
        <member name="F:kClosed">
            <summary>The access point is closed.</summary>
        </member>
        <member name="T:VxSdk.VxAccessStatus">
            <summary>
Values that represent possible statuses for an access point.
</summary>
        </member>
        <member name="F:kGate">
            <summary>A gate.</summary>
        </member>
        <member name="F:kDoorWithReader">
            <summary>A door with a reader.</summary>
        </member>
        <member name="F:kDoor">
            <summary>A door.</summary>
        </member>
        <member name="F:kUnknown">
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>Unset or unknown provider</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>Unable to determine status or an error was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
            <summary>An error or unknown value was returned.</summary>
        </member>
        <member name="T:VxSdk.VxAccessPointType">
            <summary>
Global Defines
</summary>
            <summary>
Values that represent a particular type of access point.
</summary>
        </member>
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
        <!-- Discarding badly formed XML document comment for member 'M:VxSdkNet.PtzController.RelativePercentageMove(System.Int32,System.Int32,System.Int32)'. -->
    </members>
</doc>